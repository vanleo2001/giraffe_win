Transform	DIDTemplateToLuaStruct.cc	/^void DIDTemplateToLuaStruct::Transform(XML_ListeningItem &listening_item)$/;"	f	class:DIDTemplateToLuaStruct
cat_to	DIDTemplateToLuaStruct.cc	/^int cat_to( char *dest, const char *val, int pos )$/;"	f
did_type_map	DIDTemplateToLuaStruct.cc	/^map_typesize_t did_type_map;$/;"	v
map_typesize_t	DIDTemplateToLuaStruct.cc	/^typedef std::map< std::string, int > map_typesize_t;$/;"	t	file:
DIDTemplateToLuaStruct	DIDTemplateToLuaStruct.h	/^	DIDTemplateToLuaStruct(){};$/;"	f	class:DIDTemplateToLuaStruct
DIDTemplateToLuaStruct	DIDTemplateToLuaStruct.h	/^class DIDTemplateToLuaStruct$/;"	c
MONITOR_DID_TEMPLATE_TO_LUA_STRUCT_H	DIDTemplateToLuaStruct.h	2;"	d
did_template_files_	DIDTemplateToLuaStruct.h	/^	vector<std::string> did_template_files_;$/;"	m	class:DIDTemplateToLuaStruct
~DIDTemplateToLuaStruct	DIDTemplateToLuaStruct.h	/^	~DIDTemplateToLuaStruct(){};$/;"	f	class:DIDTemplateToLuaStruct
DOMAttributes	DOMDocument.h	/^  class DOMAttributes$/;"	c	namespace:STEP
DOMAttributesPtr	DOMDocument.h	/^  typedef std::auto_ptr<DOMAttributes> DOMAttributesPtr;$/;"	t	namespace:STEP
DOMDocument	DOMDocument.h	/^  class DOMDocument$/;"	c	namespace:STEP
DOMDocumentPtr	DOMDocument.h	/^  typedef std::auto_ptr<DOMDocument> DOMDocumentPtr;$/;"	t	namespace:STEP
DOMNode	DOMDocument.h	/^  class DOMNode$/;"	c	namespace:STEP
DOMNodePtr	DOMDocument.h	/^  typedef std::auto_ptr<DOMNode> DOMNodePtr;$/;"	t	namespace:STEP
STEP	DOMDocument.h	/^namespace STEP$/;"	n
STEP_DOMDOCUMENT_H	DOMDocument.h	3;"	d
map	DOMDocument.h	/^    typedef std::map<std::string, std::string> map;$/;"	t	class:STEP::DOMAttributes
~DOMAttributes	DOMDocument.h	/^    virtual ~DOMAttributes() {}$/;"	f	class:STEP::DOMAttributes
~DOMDocument	DOMDocument.h	/^    virtual ~DOMDocument() {}$/;"	f	class:STEP::DOMDocument
~DOMNode	DOMDocument.h	/^    virtual ~DOMNode() {}$/;"	f	class:STEP::DOMNode
Allocate	DidUncompress.cpp	/^int DataBuffer::Allocate(int lt)$/;"	f	class:DataBuffer
Compress	DidUncompress.cpp	/^int DidUncompress::Compress(char* source_data, int source_size, int num, int did, char* des_data, int& des_size)$/;"	f	class:DidUncompress
DataBuffer	DidUncompress.cpp	/^DataBuffer::DataBuffer()$/;"	f	class:DataBuffer
DidUncompress	DidUncompress.cpp	/^DidUncompress::DidUncompress(string& path)$/;"	f	class:DidUncompress
DisassemblePack	DidUncompress.cpp	/^int DidUncompress::DisassemblePack(DC_HEAD* pPack,DataBuffer& buf)$/;"	f	class:DidUncompress
Flush	DidUncompress.cpp	/^void DataBuffer::Flush()$/;"	f	class:DataBuffer
GetBmData	DidUncompress.cpp	/^char* GetBmData(int num,LastArgs* pLastArgs,LastArgs* pNowArgs,DWORD did,CDidStruct* pDidStruct,char* pUserArg,ds_field_info*& pSaveField)$/;"	f
GetData	DidUncompress.cpp	/^char* DataBuffer::GetData()$/;"	f	class:DataBuffer
GetLen	DidUncompress.cpp	/^int DataBuffer::GetLen()$/;"	f	class:DataBuffer
Initialize	DidUncompress.cpp	/^void DidUncompress::Initialize()$/;"	f	class:DidUncompress
MaxStocksCount	DidUncompress.cpp	6;"	d	file:
ReadConfig	DidUncompress.cpp	/^int DidUncompress::ReadConfig()$/;"	f	class:DidUncompress
ReadDidStruct	DidUncompress.cpp	/^void DidUncompress::ReadDidStruct(STEP::DOMNode* node)$/;"	f	class:DidUncompress
SetBmData	DidUncompress.cpp	/^bool SetBmData(LastArgs* pNowArgs,DWORD did,CDidStruct* pDidStruct,char* pUserArg,char* pRecBuf)$/;"	f
UpdateDSData	DidUncompress.cpp	/^int DidUncompress::UpdateDSData(TDidInfo* pDidFile,char* pTemplateData,int len)$/;"	f	class:DidUncompress
~DataBuffer	DidUncompress.cpp	/^DataBuffer::~DataBuffer()$/;"	f	class:DataBuffer
~DidUncompress	DidUncompress.cpp	/^DidUncompress::~DidUncompress(void)$/;"	f	class:DidUncompress
DataBuffer	DidUncompress.h	/^class DataBuffer$/;"	c
DidUncompress	DidUncompress.h	/^class DidUncompress$/;"	c
STKIDMAP	DidUncompress.h	/^typedef hash_map<unsigned int, int> STKIDMAP;$/;"	t
TDidInfo	DidUncompress.h	/^		TDidInfo(){$/;"	f	struct:DidUncompress::TDidInfo
TDidInfo	DidUncompress.h	/^		TDidInfo(const TDidInfo& obj)$/;"	f	struct:DidUncompress::TDidInfo
TDidInfo	DidUncompress.h	/^	struct TDidInfo $/;"	s	class:DidUncompress
TStructForGetBmData	DidUncompress.h	/^	TStructForGetBmData()$/;"	f	struct:TStructForGetBmData
TStructForGetBmData	DidUncompress.h	/^	TStructForGetBmData(const TStructForGetBmData& obj)$/;"	f	struct:TStructForGetBmData
TStructForGetBmData	DidUncompress.h	/^struct TStructForGetBmData $/;"	s
bCompress	DidUncompress.h	/^		bool bCompress;					\/\/是否向服务端请求压缩后的did 数据$/;"	m	struct:DidUncompress::TDidInfo
bFull	DidUncompress.h	/^		bool bFull;						\/\/是否想服务端请求完整的did 数据，为false 表示是增量的数据$/;"	m	struct:DidUncompress::TDidInfo
bInitialized	DidUncompress.h	/^		bool bInitialized;				\/\/初始化成功$/;"	m	struct:DidUncompress::TDidInfo
bNeedSynaDidStructFile	DidUncompress.h	/^		bool bNeedSynaDidStructFile;	\/\/是否需要服务端同步数据描述模板文件$/;"	m	struct:DidUncompress::TDidInfo
bServerSupport	DidUncompress.h	/^		bool bServerSupport;			\/\/记录服务端是否支持该did$/;"	m	struct:DidUncompress::TDidInfo
configFilePath	DidUncompress.h	/^	string configFilePath;$/;"	m	class:DidUncompress
data	DidUncompress.h	/^	char* data;$/;"	m	class:DataBuffer
did	DidUncompress.h	/^		int did;$/;"	m	struct:DidUncompress::TDidInfo
iBufferLen	DidUncompress.h	/^		int iBufferLen;					\/\/缓冲区大小$/;"	m	struct:DidUncompress::TDidInfo
iBufferSize	DidUncompress.h	/^	unsigned int iBufferSize;			\/\/全量数据内存大小$/;"	m	struct:TStructForGetBmData
iTotalStk	DidUncompress.h	/^	unsigned int iTotalStk;    $/;"	m	struct:TStructForGetBmData
len	DidUncompress.h	/^	int len;$/;"	m	class:DataBuffer
m_mapDidFile	DidUncompress.h	/^	map<int, TDidInfo> m_mapDidFile;$/;"	m	class:DidUncompress
m_mapStructForBmData	DidUncompress.h	/^	map<int,TStructForGetBmData> m_mapStructForBmData;$/;"	m	class:DidUncompress
pDidStruct	DidUncompress.h	/^		CDidStructApi* pDidStruct;		\/\/数据描述模板$/;"	m	struct:DidUncompress::TDidInfo
pFullData	DidUncompress.h	/^	char* pFullData;					\/\/全量数据内存地址$/;"	m	struct:TStructForGetBmData
pStkIDMapHash	DidUncompress.h	/^	STKIDMAP* pStkIDMapHash;			\/\/stkid hash映射关系$/;"	m	struct:TStructForGetBmData
pUnCompress	DidUncompress.h	/^		CDsCompressApi* pUnCompress;	\/\/解压缩对象$/;"	m	struct:DidUncompress::TDidInfo
pUnCompressBuffer	DidUncompress.h	/^		char* pUnCompressBuffer;		\/\/解压缩缓冲区$/;"	m	struct:DidUncompress::TDidInfo
strFilePath	DidUncompress.h	/^		string strFilePath;				\/\/did 数据描述模板文件路径$/;"	m	struct:DidUncompress::TDidInfo
ConfigError	Exceptions.h	/^  ConfigError( const std::string& what = "" )$/;"	f	struct:STEP::ConfigError
ConfigError	Exceptions.h	/^struct ConfigError : public Exception$/;"	s	namespace:STEP
DoNotSend	Exceptions.h	/^  DoNotSend( const std::string& what = "" )$/;"	f	struct:STEP::DoNotSend
DoNotSend	Exceptions.h	/^struct DoNotSend : public Exception$/;"	s	namespace:STEP
DuplicateFieldNumber	Exceptions.h	/^  DuplicateFieldNumber( const std::string& what = "" )$/;"	f	struct:STEP::DuplicateFieldNumber
DuplicateFieldNumber	Exceptions.h	/^struct DuplicateFieldNumber : public Exception$/;"	s	namespace:STEP
Exception	Exceptions.h	/^  Exception( const std::string& what, const std::string& detail )$/;"	f	struct:STEP::Exception
Exception	Exceptions.h	/^struct Exception : public std::logic_error$/;"	s	namespace:STEP
FieldConvertError	Exceptions.h	/^  FieldConvertError( const std::string& what = "" )$/;"	f	struct:STEP::FieldConvertError
FieldConvertError	Exceptions.h	/^struct FieldConvertError : public Exception$/;"	s	namespace:STEP
FieldNotFound	Exceptions.h	/^  FieldNotFound( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::FieldNotFound
FieldNotFound	Exceptions.h	/^struct FieldNotFound : public Exception$/;"	s	namespace:STEP
IOException	Exceptions.h	/^  IOException( const std::string& what = "" )$/;"	f	struct:STEP::IOException
IOException	Exceptions.h	/^struct IOException : public Exception$/;"	s	namespace:STEP
IncorrectDataFormat	Exceptions.h	/^  IncorrectDataFormat( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::IncorrectDataFormat
IncorrectDataFormat	Exceptions.h	/^struct IncorrectDataFormat : public Exception$/;"	s	namespace:STEP
IncorrectMessageStructure	Exceptions.h	/^  IncorrectMessageStructure( const std::string& what = "" )$/;"	f	struct:STEP::IncorrectMessageStructure
IncorrectMessageStructure	Exceptions.h	/^struct IncorrectMessageStructure : public Exception$/;"	s	namespace:STEP
IncorrectTagValue	Exceptions.h	/^  IncorrectTagValue( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::IncorrectTagValue
IncorrectTagValue	Exceptions.h	/^struct IncorrectTagValue : public Exception$/;"	s	namespace:STEP
InvalidMessage	Exceptions.h	/^  InvalidMessage( const std::string& what = "" )$/;"	f	struct:STEP::InvalidMessage
InvalidMessage	Exceptions.h	/^struct InvalidMessage : public Exception$/;"	s	namespace:STEP
InvalidMessageType	Exceptions.h	/^  InvalidMessageType( const std::string& what = "" )$/;"	f	struct:STEP::InvalidMessageType
InvalidMessageType	Exceptions.h	/^struct InvalidMessageType : public Exception$/;"	s	namespace:STEP
InvalidTagNumber	Exceptions.h	/^  InvalidTagNumber( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::InvalidTagNumber
InvalidTagNumber	Exceptions.h	/^struct InvalidTagNumber : public Exception$/;"	s	namespace:STEP
MessageParseError	Exceptions.h	/^  MessageParseError( const std::string& what = "" )$/;"	f	struct:STEP::MessageParseError
MessageParseError	Exceptions.h	/^struct MessageParseError : public Exception$/;"	s	namespace:STEP
NoTagValue	Exceptions.h	/^  NoTagValue( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::NoTagValue
NoTagValue	Exceptions.h	/^struct NoTagValue : public Exception$/;"	s	namespace:STEP
RejectLogon	Exceptions.h	/^  RejectLogon( const std::string& what = "" )$/;"	f	struct:STEP::RejectLogon
RejectLogon	Exceptions.h	/^struct RejectLogon : public Exception$/;"	s	namespace:STEP
RepeatedTag	Exceptions.h	/^  RepeatedTag( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::RepeatedTag
RepeatedTag	Exceptions.h	/^struct RepeatedTag : public Exception$/;"	s	namespace:STEP
RepeatingGroupCountMismatch	Exceptions.h	/^  RepeatingGroupCountMismatch( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::RepeatingGroupCountMismatch
RepeatingGroupCountMismatch	Exceptions.h	/^struct RepeatingGroupCountMismatch : public Exception$/;"	s	namespace:STEP
RequiredTagMissing	Exceptions.h	/^  RequiredTagMissing( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::RequiredTagMissing
RequiredTagMissing	Exceptions.h	/^struct RequiredTagMissing : public Exception$/;"	s	namespace:STEP
RuntimeError	Exceptions.h	/^  RuntimeError( const std::string& what = "" )$/;"	f	struct:STEP::RuntimeError
RuntimeError	Exceptions.h	/^struct RuntimeError : public Exception$/;"	s	namespace:STEP
STEP	Exceptions.h	/^namespace STEP$/;"	n
STEP_EXCEPTIONS_H	Exceptions.h	2;"	d
SocketException	Exceptions.h	/^  SocketException( const std::string& what )$/;"	f	struct:STEP::SocketException
SocketException	Exceptions.h	/^  SocketException()$/;"	f	struct:STEP::SocketException
SocketException	Exceptions.h	/^struct SocketException : public Exception$/;"	s	namespace:STEP
SocketRecvFailed	Exceptions.h	/^  SocketRecvFailed( const std::string& what )$/;"	f	struct:STEP::SocketRecvFailed
SocketRecvFailed	Exceptions.h	/^  SocketRecvFailed( int size )$/;"	f	struct:STEP::SocketRecvFailed
SocketRecvFailed	Exceptions.h	/^struct SocketRecvFailed : public SocketException$/;"	s	namespace:STEP
TagNotDefinedForMessage	Exceptions.h	/^  TagNotDefinedForMessage( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::TagNotDefinedForMessage
TagNotDefinedForMessage	Exceptions.h	/^struct TagNotDefinedForMessage : public Exception$/;"	s	namespace:STEP
TagOutOfOrder	Exceptions.h	/^  TagOutOfOrder( int f = 0, const std::string& what = "" )$/;"	f	struct:STEP::TagOutOfOrder
TagOutOfOrder	Exceptions.h	/^struct TagOutOfOrder : public Exception$/;"	s	namespace:STEP
UnsupportedMessageType	Exceptions.h	/^  UnsupportedMessageType( const std::string& what = "" )$/;"	f	struct:STEP::UnsupportedMessageType
UnsupportedMessageType	Exceptions.h	/^struct UnsupportedMessageType : public Exception$/;"	s	namespace:STEP
UnsupportedVersion	Exceptions.h	/^  UnsupportedVersion( const std::string& what = "" )$/;"	f	struct:STEP::UnsupportedVersion
UnsupportedVersion	Exceptions.h	/^struct UnsupportedVersion : public Exception$/;"	s	namespace:STEP
error	Exceptions.h	/^  int error;$/;"	m	struct:STEP::SocketException
errorToWhat	Exceptions.h	/^  std::string errorToWhat()$/;"	f	struct:STEP::SocketException
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::FieldNotFound
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::IncorrectDataFormat
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::IncorrectTagValue
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::InvalidTagNumber
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::NoTagValue
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::RepeatedTag
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::RepeatingGroupCountMismatch
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::RequiredTagMissing
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::TagNotDefinedForMessage
field	Exceptions.h	/^  int field;$/;"	m	struct:STEP::TagOutOfOrder
EnableFriendllyExceptionHandle	FriendlyExceptionHandl.cpp	/^void EnableFriendllyExceptionHandle(BOOL bEnable)$/;"	f
GetDumpFileName	FriendlyExceptionHandl.cpp	/^void GetDumpFileName(LPTSTR buff, DWORD len)$/;"	f
MyMiniDumpCallback	FriendlyExceptionHandl.cpp	/^BOOL WINAPI MyMiniDumpCallback($/;"	f
MyUnhandledExceptionFilter	FriendlyExceptionHandl.cpp	/^LONG __stdcall MyUnhandledExceptionFilter(PEXCEPTION_POINTERS pExceptionInfo)$/;"	f
hadCrashed	FriendlyExceptionHandl.cpp	/^LONG hadCrashed = 0;$/;"	v
workdir	FriendlyExceptionHandl.cpp	/^TCHAR workdir[MAX_PATH];$/;"	v
MSXML_DOMDocument	MSXML_DOMDocument.cpp	/^  MSXML_DOMDocument::MSXML_DOMDocument() throw( ConfigError )$/;"	f	class:STEP::MSXML_DOMDocument
STEP	MSXML_DOMDocument.cpp	/^namespace STEP$/;"	n	file:
get	MSXML_DOMDocument.cpp	/^  bool MSXML_DOMAttributes::get( const std::string& name, std::string& value )$/;"	f	class:STEP::MSXML_DOMAttributes
getAttributes	MSXML_DOMDocument.cpp	/^  DOMAttributesPtr MSXML_DOMNode::getAttributes()$/;"	f	class:STEP::MSXML_DOMNode
getFirstChildNode	MSXML_DOMDocument.cpp	/^  DOMNodePtr MSXML_DOMNode::getFirstChildNode()$/;"	f	class:STEP::MSXML_DOMNode
getName	MSXML_DOMDocument.cpp	/^  std::string MSXML_DOMNode::getName()$/;"	f	class:STEP::MSXML_DOMNode
getNextSiblingNode	MSXML_DOMDocument.cpp	/^  DOMNodePtr MSXML_DOMNode::getNextSiblingNode()$/;"	f	class:STEP::MSXML_DOMNode
getNode	MSXML_DOMDocument.cpp	/^  DOMNodePtr MSXML_DOMDocument::getNode( const std::string& XPath )$/;"	f	class:STEP::MSXML_DOMDocument
getText	MSXML_DOMDocument.cpp	/^  std::string MSXML_DOMNode::getText()$/;"	f	class:STEP::MSXML_DOMNode
load	MSXML_DOMDocument.cpp	/^  bool MSXML_DOMDocument::load( const std::string& url )$/;"	f	class:STEP::MSXML_DOMDocument
load	MSXML_DOMDocument.cpp	/^  bool MSXML_DOMDocument::load( std::istream& stream )$/;"	f	class:STEP::MSXML_DOMDocument
toMap	MSXML_DOMDocument.cpp	/^  DOMAttributes::map MSXML_DOMAttributes::toMap()$/;"	f	class:STEP::MSXML_DOMAttributes
xml	MSXML_DOMDocument.cpp	/^  bool MSXML_DOMDocument::xml( std::ostream& out )$/;"	f	class:STEP::MSXML_DOMDocument
~MSXML_DOMAttributes	MSXML_DOMDocument.cpp	/^  MSXML_DOMAttributes::~MSXML_DOMAttributes()$/;"	f	class:STEP::MSXML_DOMAttributes
~MSXML_DOMDocument	MSXML_DOMDocument.cpp	/^  MSXML_DOMDocument::~MSXML_DOMDocument()$/;"	f	class:STEP::MSXML_DOMDocument
~MSXML_DOMNode	MSXML_DOMDocument.cpp	/^  MSXML_DOMNode::~MSXML_DOMNode()$/;"	f	class:STEP::MSXML_DOMNode
MSXML_DOMAttributes	MSXML_DOMDocument.h	/^    MSXML_DOMAttributes( MSXML2::IXMLDOMNode* pNode )$/;"	f	class:STEP::MSXML_DOMAttributes
MSXML_DOMAttributes	MSXML_DOMDocument.h	/^  class MSXML_DOMAttributes : public DOMAttributes$/;"	c	namespace:STEP
MSXML_DOMDocument	MSXML_DOMDocument.h	/^  class MSXML_DOMDocument : public DOMDocument$/;"	c	namespace:STEP
MSXML_DOMNode	MSXML_DOMDocument.h	/^    MSXML_DOMNode( MSXML2::IXMLDOMNode* pNode )$/;"	f	class:STEP::MSXML_DOMNode
MSXML_DOMNode	MSXML_DOMDocument.h	/^  class MSXML_DOMNode : public DOMNode$/;"	c	namespace:STEP
STEP	MSXML_DOMDocument.h	/^namespace STEP$/;"	n
STEP_MSXMLDOMDOCUMENT_H	MSXML_DOMDocument.h	3;"	d
m_pDoc	MSXML_DOMDocument.h	/^    MSXML2::IXMLDOMDocument2* m_pDoc;$/;"	m	class:STEP::MSXML_DOMDocument
m_pNode	MSXML_DOMDocument.h	/^    MSXML2::IXMLDOMNode* m_pNode;$/;"	m	class:STEP::MSXML_DOMNode
m_pNodeMap	MSXML_DOMDocument.h	/^    MSXML2::IXMLDOMNamedNodeMap* m_pNodeMap;$/;"	m	class:STEP::MSXML_DOMAttributes
FILE_FSCANF	Utility.h	107;"	d
FILE_FSCANF	Utility.h	109;"	d
STEP	Utility.h	/^namespace STEP$/;"	n
STEP_UTILITY_H	Utility.h	3;"	d
STRING_SPRINTF	Utility.h	120;"	d
STRING_SPRINTF	Utility.h	122;"	d
THREAD_PROC	Utility.h	74;"	d
THREAD_START_ROUTINE	Utility.h	/^typedef unsigned int (_stdcall THREAD_START_ROUTINE)(void *);$/;"	t
socklen_t	Utility.h	/^typedef int socklen_t;$/;"	t
AddZMQItem	basethread.h	/^    void AddZMQItem(ZMQItem zmqitem)$/;"	f	class:BaseThread
BaseThread	basethread.h	/^    BaseThread(){};$/;"	f	class:BaseThread
BaseThread	basethread.h	/^class BaseThread$/;"	c
Cancel	basethread.h	/^	bool Cancel()$/;"	f	class:BaseThread
Cancel	basethread.h	/^	bool Cancel()$/;"	f	class:IThread
IThread	basethread.h	/^    IThread(){};$/;"	f	class:IThread
IThread	basethread.h	/^class IThread$/;"	c
Join	basethread.h	/^    bool Join()$/;"	f	class:BaseThread
Join	basethread.h	/^    bool Join()$/;"	f	class:IThread
MONITOR_ITHREAD_H_	basethread.h	2;"	d
Run	basethread.h	/^    void Run()$/;"	f	class:BaseThread
Start	basethread.h	/^    bool Start()$/;"	f	class:BaseThread
Start	basethread.h	/^    bool Start(WorkThread workthread, BaseThread *basethread)$/;"	f	class:IThread
ThreadFunc	basethread.h	/^    static void* ThreadFunc(void *args)$/;"	f	class:BaseThread
WorkThread	basethread.h	/^typedef void * (*WorkThread)(void *);$/;"	t
ithread_	basethread.h	/^    IThread ithread_;$/;"	m	class:BaseThread
pbasethread_	basethread.h	/^    BaseThread *pbasethread_;$/;"	m	class:IThread
tid_	basethread.h	/^    pthread_t tid_;$/;"	m	class:IThread
zmqitems_	basethread.h	/^	vector<ZMQItem > zmqitems_;$/;"	m	class:BaseThread
~BaseThread	basethread.h	/^    virtual ~BaseThread(){};$/;"	f	class:BaseThread
~IThread	basethread.h	/^    ~IThread(){};$/;"	f	class:IThread
AttachToBuffer	bitstream.cpp	/^void CBitStream::AttachToBuffer(BYTE* pData,int nSize,int nBitPos)$/;"	f	class:CBitStream
CBitStream	bitstream.cpp	/^CBitStream::CBitStream()$/;"	f	class:CBitStream
CBitStream	bitstream.cpp	/^CBitStream::CBitStream(BYTE* pData,int nSize)$/;"	f	class:CBitStream
DecodeData	bitstream.cpp	/^DWORD CBitStream::DecodeData(const DWORD* pdwLastData,BOOL bReverse)$/;"	f	class:CBitStream
DecodeFindMatch	bitstream.cpp	/^const BITCODE* CBitStream::DecodeFindMatch(DWORD& dw)$/;"	f	class:CBitStream
DecodeFloat	bitstream.cpp	/^float CBitStream::DecodeFloat(BOOL bCheck0=FALSE)$/;"	f	class:CBitStream
DecodeMWordData	bitstream.cpp	/^MWORD CBitStream::DecodeMWordData(const MWORD* pmLastData,BOOL bReverse)$/;"	f	class:CBitStream
DecodeStringData	bitstream.cpp	/^DWORD CBitStream::DecodeStringData(char* pBuf,int nBufSize,DWORD& dwLastData)						\/\/如果解出数字Label，则返回该数字，否则返回0xFFFFFFFF,更新dwLastData$/;"	f	class:CBitStream
EncodeData	bitstream.cpp	/^int CBitStream::EncodeData(DWORD dwData,const DWORD* pdwLastData,BOOL bReverse)$/;"	f	class:CBitStream
EncodeData	bitstream.cpp	/^int CBitStream::EncodeData(MWORD mData,const MWORD* pmLastData)$/;"	f	class:CBitStream
EncodeFindMatch	bitstream.cpp	/^const BITCODE* CBitStream::EncodeFindMatch(DWORD& dwData)$/;"	f	class:CBitStream
EncodeFloat	bitstream.cpp	/^int CBitStream::EncodeFloat(float f,BOOL bCheck0=FALSE)$/;"	f	class:CBitStream
EncodeStringData	bitstream.cpp	/^int CBitStream::EncodeStringData(LPCSTR strData,DWORD& dwLastData)$/;"	f	class:CBitStream
FindOrgMData	bitstream.cpp	/^const BITCODE* CBitStream::FindOrgMData()$/;"	f	class:CBitStream
FindStringData	bitstream.cpp	/^const BITCODE* CBitStream::FindStringData()$/;"	f	class:CBitStream
Get	bitstream.cpp	/^DWORD CBitStream::Get(int nBit)$/;"	f	class:CBitStream
GetAvgCodeLen	bitstream.cpp	/^float GetAvgCodeLen(BITCODE* pCode,int nNum)$/;"	f
GetNoMove	bitstream.cpp	/^int CBitStream::GetNoMove(int nBit,DWORD& dw)$/;"	f	class:CBitStream
GetNumZero	bitstream.cpp	/^int CBitStream::GetNumZero(DWORD& dw)$/;"	f	class:CBitStream
GetNumZero	bitstream.cpp	/^int CBitStream::GetNumZero(MWORD& m)$/;"	f	class:CBitStream
GetString	bitstream.cpp	/^int CBitStream::GetString(char* pBuf,int nBufSize)$/;"	f	class:CBitStream
MoveTo	bitstream.cpp	/^int CBitStream::MoveTo(int nPos)$/;"	f	class:CBitStream
PrintOptimizedCode	bitstream.cpp	/^void PrintOptimizedCode(LPCSTR strName,BITCODE* pCodes,int nNum)$/;"	f
Put	bitstream.cpp	/^int CBitStream::Put(DWORD dw,int nBit)$/;"	f	class:CBitStream
PutString	bitstream.cpp	/^int CBitStream::PutString(LPCSTR str)$/;"	f	class:CBitStream
SetBuffer	bitstream.cpp	/^void CBitStream::SetBuffer(BYTE* pData,int nSize)$/;"	f	class:CBitStream
AVGCODELEN	bitstream.h	106;"	d
BITCODE	bitstream.h	/^struct BITCODE$/;"	s
CBitStream	bitstream.h	/^class CBitStream$/;"	c
GetBitLength	bitstream.h	/^	int GetBitLength(){return m_nCurPos;}						\/\/得到当前Bit流Bit数$/;"	f	class:CBitStream
GetBitSize	bitstream.h	/^	int GetBitSize(){return m_nBitSize;}$/;"	f	class:CBitStream
GetByteLength	bitstream.h	/^	int GetByteLength(){return (m_nCurPos+7)\/8;}				\/\/得到当前Bit流Byte数$/;"	f	class:CBitStream
GetCurPos	bitstream.h	/^	int GetCurPos(){return m_nCurPos;}$/;"	f	class:CBitStream
IsBitPos	bitstream.h	/^	BOOL IsBitPos() const {return m_cCode=='P';}$/;"	f	struct:BITCODE
IsOriginalData	bitstream.h	/^	BOOL IsOriginalData() const {return m_cCode=='D' || m_cCode=='M';}$/;"	f	struct:BITCODE
Move	bitstream.h	/^	int Move(int nBit){return MoveTo(m_nCurPos+nBit);}		\/\/移动内部指针，nBit可以为负，返回新的位置$/;"	f	class:CBitStream
PRINTOPTCODE	bitstream.h	111;"	d
RestoreToSavedPos	bitstream.h	/^	int  RestoreToSavedPos(){return MoveTo(m_nSavedPos);}		\/\/回卷到上一次保存的位置$/;"	f	class:CBitStream
SETBITCODE	bitstream.h	102;"	d
SaveCurrentPos	bitstream.h	/^	void SaveCurrentPos(){m_nSavedPos = m_nCurPos;}		\/\/保存当前位置$/;"	f	class:CBitStream
SetBitCode	bitstream.h	/^	void SetBitCode(BITCODE* pCodes,int nNumCode){m_pCodes = pCodes;m_nNumCode = nNumCode;}$/;"	f	class:CBitStream
_BITSTREAM_H_INCLUDE	bitstream.h	2;"	d
m_cCode	bitstream.h	/^	char	m_cCode;		\/\/编码方法	  'B':数据不超过m_dwCodeData位,$/;"	m	struct:BITCODE
m_dwCodeCount	bitstream.h	/^	DWORD	m_dwCodeCount;	\/\/频度$/;"	m	struct:BITCODE
m_dwCodeData	bitstream.h	/^	DWORD	m_dwCodeData;	\/\/编码数据$/;"	m	struct:BITCODE
m_dwDataBias	bitstream.h	/^	DWORD	m_dwDataBias;	\/\/编码数据偏移量$/;"	m	struct:BITCODE
m_nBitSize	bitstream.h	/^	int m_nBitSize;				\/\/缓冲区大小，Bit$/;"	m	class:CBitStream
m_nCodeLen	bitstream.h	/^	char	m_nCodeLen;		\/\/编码长度$/;"	m	struct:BITCODE
m_nCurPos	bitstream.h	/^	int m_nCurPos;				\/\/当前位置$/;"	m	class:CBitStream
m_nDataLen	bitstream.h	/^	char	m_nDataLen;		\/\/编码后跟随的数据长度,单位Bit，最大32Bit$/;"	m	struct:BITCODE
m_nNumCode	bitstream.h	/^	int		m_nNumCode;$/;"	m	class:CBitStream
m_nSavedPos	bitstream.h	/^	int m_nSavedPos;			\/\/上一次保存的位置$/;"	m	class:CBitStream
m_pCodes	bitstream.h	/^    BITCODE*	m_pCodes;	\/\/当前编解码码表$/;"	m	class:CBitStream
m_pData	bitstream.h	/^	BYTE* m_pData;				\/\/缓冲区$/;"	m	class:CBitStream
m_wCodeBits	bitstream.h	/^	WORD	m_wCodeBits;	\/\/编码$/;"	m	struct:BITCODE
AddToZMQDeque	capture.cc	/^void Capture::AddToZMQDeque(int index)$/;"	f	class:Capture
CreateDidConfContent	capture.cc	/^void CreateDidConfContent(vector<DidStruct> & did_structs, char * out_str)$/;"	f
CreateThreadKey	capture.cc	/^void CreateThreadKey()$/;"	f
DispatchData	capture.cc	/^void DispatchData(zmq::socket_t * sock, void * data, int size)$/;"	f
IncreasePool	capture.cc	/^bool Capture::IncreasePool(int pool_size)$/;"	f	class:Capture
Init	capture.cc	/^void Capture::Init()$/;"	f	class:Capture
InitCaptureZMQProperty	capture.cc	/^void Capture::InitCaptureZMQProperty(int index)$/;"	f	class:Capture
IsTcpConnection	capture.cc	/^bool IsTcpConnection(unsigned char flags, int &tcpconntag, int &tcpconnstatus)$/;"	f
IsTcpDisConnection	capture.cc	/^bool IsTcpDisConnection(unsigned char flags, int port, unsigned short src_port)$/;"	f
PacketHandler	capture.cc	/^void Capture::PacketHandler(unsigned char *param, const struct pcap_pkthdr *header, const unsigned char *pkt_data)$/;"	f	class:Capture
RunLuaRoutineThread	capture.cc	/^void Capture::RunLuaRoutineThread(int index)$/;"	f	class:Capture
RunParseThread	capture.cc	/^void Capture::RunParseThread(int index)$/;"	f	class:Capture
RunThreadFunc	capture.cc	/^void * Capture::RunThreadFunc()$/;"	f	class:Capture
WriteDidConfFile	capture.cc	/^void WriteDidConfFile(const char * file_name, vector<DidStruct> &did_structs)$/;"	f
get_inner_thread_params	capture.cc	/^void * get_inner_thread_params()$/;"	f
key_cap	capture.cc	/^pthread_key_t key_cap;$/;"	v
once_control_cap	capture.cc	/^pthread_once_t once_control_cap = PTHREAD_ONCE_INIT;$/;"	v
set_inner_thread_params	capture.cc	/^void set_inner_thread_params(const void * value)$/;"	f
Capture	capture.h	/^	Capture(int adapter_id,zmq::context_t *context,XML_ListeningItem &listening_item):adapter_id_(adapter_id),context_(context),listening_item_(listening_item),curent_pool_size_(0)$/;"	f	class:Capture
Capture	capture.h	/^class Capture:public BaseThread$/;"	c
MONITOR_CAPTURE_H	capture.h	2;"	d
adapter_id_	capture.h	/^	int adapter_id_;$/;"	m	class:Capture
adhandle	capture.h	/^	pcap_t *adhandle;$/;"	m	class:Capture
context_	capture.h	/^	zmq::context_t *context_;$/;"	m	class:Capture
curent_pool_size_	capture.h	/^	int curent_pool_size_;$/;"	m	class:Capture
kPoolSize	capture.h	/^const int kPoolSize = 8;$/;"	v
listening_item_	capture.h	/^	XML_ListeningItem listening_item_;$/;"	m	class:Capture
lua_routine_deque_	capture.h	/^	deque<LuaRoutine*> lua_routine_deque_;$/;"	m	class:Capture
parse_deque_	capture.h	/^	deque<Parse *> parse_deque_;$/;"	m	class:Capture
sock_deque_	capture.h	/^	deque<zmq::socket_t *>sock_deque_;$/;"	m	class:Capture
sock_map_	capture.h	/^	map<std::string,zmq::socket_t *> sock_map_;$/;"	m	class:Capture
~Capture	capture.h	/^	virtual ~Capture()$/;"	f	class:Capture
DispatchCapData	capture_net_packet.cc	/^void DispatchCapData(zmq::socket_t * sock, void * data, int size)$/;"	f
Init	capture_net_packet.cc	/^void CaptureNetPacket::Init()$/;"	f	class:CaptureNetPacket
InitZMQ	capture_net_packet.cc	/^void CaptureNetPacket::InitZMQ()$/;"	f	class:CaptureNetPacket
PacketHandler	capture_net_packet.cc	/^void CaptureNetPacket::PacketHandler(unsigned char *param, const struct pcap_pkthdr *header, const unsigned char *pkt_data)$/;"	f	class:CaptureNetPacket
RunThreadFunc	capture_net_packet.cc	/^void * CaptureNetPacket::RunThreadFunc()$/;"	f	class:CaptureNetPacket
CaptureNetPacket	capture_net_packet.h	/^	CaptureNetPacket(int adapter_id, std::string filter, zmq::context_t *context):adapter_id_(adapter_id),context_(context)$/;"	f	class:CaptureNetPacket
CaptureNetPacket	capture_net_packet.h	/^class CaptureNetPacket: public BaseThread$/;"	c
MONITOR_CAPTURE_NET_PACKET_H	capture_net_packet.h	2;"	d
adapter_id_	capture_net_packet.h	/^	int adapter_id_;$/;"	m	class:CaptureNetPacket
context_	capture_net_packet.h	/^	zmq::context_t *context_;$/;"	m	class:CaptureNetPacket
filter_	capture_net_packet.h	/^	std::string filter_;$/;"	m	class:CaptureNetPacket
sock_	capture_net_packet.h	/^	zmq::socket_t *sock_;$/;"	m	class:CaptureNetPacket
~CaptureNetPacket	capture_net_packet.h	/^	~CaptureNetPacket()$/;"	f	class:CaptureNetPacket
Parse	configparser.cc	/^void ConfigParser::Parse()$/;"	f	class:ConfigParser
SplitDidTemplateId	configparser.cc	/^std::string ConfigParser::SplitDidTemplateId(std::string &did_template_path)$/;"	f	class:ConfigParser
CONFIG_PARSER_H	configparser.h	2;"	d
ConfigParser	configparser.h	/^	ConfigParser(char * config_file):config_file_(config_file){};$/;"	f	class:ConfigParser
ConfigParser	configparser.h	/^class ConfigParser$/;"	c
config_file_	configparser.h	/^	std::string config_file_;$/;"	m	class:ConfigParser
get_listeningitems	configparser.h	/^	inline deque<XML_ListeningItem> & get_listeningitems()$/;"	f	class:ConfigParser
get_log_obj	configparser.h	/^	inline XML_Log & get_log_obj()$/;"	f	class:ConfigParser
get_ports	configparser.h	/^	inline vector<int> & get_ports()$/;"	f	class:ConfigParser
listeningitem_deque_	configparser.h	/^	deque<XML_ListeningItem> listeningitem_deque_;$/;"	m	class:ConfigParser
ports_	configparser.h	/^	vector<int> ports_;$/;"	m	class:ConfigParser
xml_log_	configparser.h	/^	XML_Log xml_log_;$/;"	m	class:ConfigParser
~ConfigParser	configparser.h	/^	~ConfigParser(){};$/;"	f	class:ConfigParser
GetCrc16	crc16.cpp	/^unsigned short GetCrc16(const unsigned char* pData, int nLength)$/;"	f
crctab16	crc16.cpp	/^const unsigned short crctab16[] = $/;"	v
_CRC16_H_INCLUDE	crc16.h	2;"	d
CFG_FILE	data.h	13;"	d
ClientData	data.h	/^struct ClientData$/;"	s
DC_GENERAL_MY	data.h	/^struct DC_GENERAL_MY$/;"	s
DC_SHL2_ACCU_WD_MY	data.h	/^struct DC_SHL2_ACCU_WD_MY$/;"	s
DC_SHL2_BIG_WD_MY	data.h	/^struct DC_SHL2_BIG_WD_MY$/;"	s
DC_SHL2_MMPEx_MY	data.h	/^struct DC_SHL2_MMPEx_MY$/;"	s
DC_SHL2_REPORT_MY	data.h	/^struct DC_SHL2_REPORT_MY$/;"	s
DC_STKDYNA_MY	data.h	/^struct DC_STKDYNA_MY$/;"	s
DC_STKSTATIC_Ex_MY	data.h	/^struct DC_STKSTATIC_Ex_MY$/;"	s
DC_STKSTATIC_MY	data.h	/^struct DC_STKSTATIC_MY$/;"	s
DS_Config	data.h	/^struct DS_Config$/;"	s
DataHead	data.h	/^struct DataHead$/;"	s
EXPAND_BUF	data.h	19;"	d
FE_CODE_LIST	data.h	/^struct FE_CODE_LIST$/;"	s
FILE_MODE	data.h	23;"	d
L2_Order	data.h	/^struct L2_Order$/;"	s
L2_Order_Queue	data.h	/^struct L2_Order_Queue$/;"	s
L2_Order_Queue_Raw	data.h	/^struct L2_Order_Queue_Raw$/;"	s
LOG_FILE	data.h	14;"	d
LOG_MAXLINE	data.h	9;"	d
MAX_MARKET_RECVBUF	data.h	21;"	d
MAX_MMP_COUNT	data.h	273;"	d
MAX_RECVBUF	data.h	18;"	d
MAX_SENDBUF	data.h	17;"	d
MAX_WRITEFILEBUF	data.h	20;"	d
MDF_Config	data.h	/^struct MDF_Config$/;"	s
MY_NAME	data.h	15;"	d
MY_SZL2_ORDER_STAT	data.h	/^struct MY_SZL2_ORDER_STAT$/;"	s
MY_VERSION	data.h	11;"	d
MarketData	data.h	/^struct MarketData$/;"	s
RAW_FILE_INFO	data.h	/^struct RAW_FILE_INFO$/;"	s
SHL2_MMP	data.h	/^	SHL2_MMP()$/;"	f	struct:SHL2_MMP
SHL2_MMP	data.h	/^struct SHL2_MMP$/;"	s
SM_Type	data.h	/^struct SM_Type$/;"	s
STATIC_Ex	data.h	/^struct STATIC_Ex$/;"	s
Spip_Config	data.h	/^struct Spip_Config$/;"	s
TQ_Config	data.h	/^struct TQ_Config$/;"	s
UserPassIP	data.h	/^struct UserPassIP$/;"	s
WF_Config	data.h	/^struct WF_Config$/;"	s
ZX_ID	data.h	/^struct ZX_ID$/;"	s
_DATA_H_	data.h	2;"	d
addBuyPrice	data.h	/^	void addBuyPrice(DWORD dwPrice, DWORD dwVolume)$/;"	f	struct:SHL2_MMP
addOrder	data.h	/^    void addOrder(DWORD order)$/;"	f	struct:L2_Order
addPrice	data.h	/^    int addPrice(DWORD dwPrice, DWORD dwOrders, BOOL isBuy)$/;"	f	struct:L2_Order_Queue_Raw
addSellPrice	data.h	/^	void addSellPrice(DWORD dwPrice, DWORD dwVolume)$/;"	f	struct:SHL2_MMP
day	data.h	/^    BYTE day;$/;"	m	struct:__anon3
dbfhead	data.h	/^} dbfhead;$/;"	t	typeref:struct:__anon3
dbfstru	data.h	/^} dbfstru;$/;"	t	typeref:struct:__anon4
deleteBuyPrice	data.h	/^	void deleteBuyPrice(DWORD dwPrice)$/;"	f	struct:SHL2_MMP
deleteOrder	data.h	/^    void deleteOrder(int index)$/;"	f	struct:L2_Order
deletePrice	data.h	/^    void deletePrice(DWORD dwPrice)$/;"	f	struct:L2_Order_Queue_Raw
deleteSellPrice	data.h	/^	void deleteSellPrice(DWORD dwPrice)$/;"	f	struct:SHL2_MMP
getMMP	data.h	/^	void getMMP(STK_DYNA* pDyna, SH_L2_MMPEX* pDynaEx)$/;"	f	struct:SHL2_MMP
headlen	data.h	/^    WORD headlen;$/;"	m	struct:__anon3
int64ID	data.h	/^        INT64 int64ID;$/;"	m	union:ZX_ID::__anon1
ip	data.h	/^    DWORD       ip;$/;"	m	struct:UserPassIP
len	data.h	/^    char len;$/;"	m	struct:__anon4
m_StkStaticEx	data.h	/^    STK_STATICEx m_StkStaticEx;$/;"	m	struct:STATIC_Ex
m_bCompress	data.h	/^	BOOL m_bCompress;$/;"	m	struct:DS_Config
m_bCompress	data.h	/^	int  m_bCompress;            \/\/是否压缩$/;"	m	struct:WF_Config
m_bCompress	data.h	/^    int  m_bCompress;            \/\/是否压缩$/;"	m	struct:Spip_Config
m_bHasFull	data.h	/^    BOOL    m_bHasFull;$/;"	m	struct:L2_Order_Queue
m_byGzlxFlag	data.h	/^	unsigned char m_byGzlxFlag;$/;"	m	struct:TQ_Config
m_byHTIndexFlag	data.h	/^    unsigned char m_byHTIndexFlag;   \/\/2006-10-18 增加$/;"	m	struct:TQ_Config
m_byHghqFlag	data.h	/^	unsigned char m_byHghqFlag;$/;"	m	struct:TQ_Config
m_byHgxxnFlag	data.h	/^	unsigned char m_byHgxxnFlag;$/;"	m	struct:TQ_Config
m_bySHQzxxFlag	data.h	/^    unsigned char m_bySHQzxxFlag;   \/\/2006-10-18 增加$/;"	m	struct:TQ_Config
m_byShow2003Flag	data.h	/^	unsigned char m_byShow2003Flag;$/;"	m	struct:TQ_Config
m_bySjshqFlag	data.h	/^	unsigned char m_bySjshqFlag;$/;"	m	struct:TQ_Config
m_bySjsxxFlag	data.h	/^	unsigned char m_bySjsxxFlag;$/;"	m	struct:TQ_Config
m_byStbhqFlag	data.h	/^	unsigned char m_byStbhqFlag;$/;"	m	struct:TQ_Config
m_cBidOrAsk	data.h	/^	char	m_cBidOrAsk;	\/\/'B'表示买单，'A'表示卖单$/;"	m	struct:DC_SHL2_ACCU_WD_MY
m_cBidOrAsk	data.h	/^	char	m_cBidOrAsk;	\/\/'B'表示买单，'A'表示卖单$/;"	m	struct:DC_SHL2_BIG_WD_MY
m_chStamp	data.h	/^    char m_chStamp[7][10];$/;"	m	struct:SM_Type
m_data	data.h	/^	SZ_L2_ORDER_STAT	m_data[400];\/\/共有m_nNum个$/;"	m	struct:MY_SZL2_ORDER_STAT
m_dwBuyLen	data.h	/^    DWORD   m_dwBuyLen;$/;"	m	struct:L2_Order_Queue
m_dwBuyPrice	data.h	/^	DWORD m_dwBuyPrice[MAX_MMP_COUNT];$/;"	m	struct:SHL2_MMP
m_dwBuyValue	data.h	/^    DWORD   m_dwBuyValue[249];$/;"	m	struct:L2_Order_Queue
m_dwBuyVol	data.h	/^	DWORD m_dwBuyVol[MAX_MMP_COUNT];$/;"	m	struct:SHL2_MMP
m_dwDataAttr	data.h	/^	DWORD	m_dwDataAttr;		\/\/数据属性$/;"	m	struct:DC_GENERAL_MY
m_dwDataLength	data.h	/^    DWORD m_dwDataLength; \/\/Frame Length  10$/;"	m	struct:DataHead
m_dwOrder	data.h	/^    DWORD m_dwOrder[400];$/;"	m	struct:L2_Order
m_dwOrders	data.h	/^    DWORD m_dwOrders;$/;"	m	struct:L2_Order
m_dwPrice	data.h	/^    DWORD m_dwPrice;$/;"	m	struct:L2_Order
m_dwRecvBytes	data.h	/^    DWORD m_dwRecvBytes;        \/\/接收$/;"	m	struct:ClientData
m_dwRecvSppeed	data.h	/^    DWORD m_dwRecvSppeed;       \/\/接收带宽$/;"	m	struct:ClientData
m_dwReserved	data.h	/^	DWORD	m_dwReserved;		\/\/保留，置为0$/;"	m	struct:DC_GENERAL_MY
m_dwSellLen	data.h	/^    DWORD   m_dwSellLen;$/;"	m	struct:L2_Order_Queue
m_dwSellPrice	data.h	/^	DWORD m_dwSellPrice[MAX_MMP_COUNT];$/;"	m	struct:SHL2_MMP
m_dwSellValue	data.h	/^    DWORD   m_dwSellValue[249];$/;"	m	struct:L2_Order_Queue
m_dwSellVol	data.h	/^	DWORD m_dwSellVol[MAX_MMP_COUNT];$/;"	m	struct:SHL2_MMP
m_dwSendBytes	data.h	/^    DWORD m_dwSendBytes;        \/\/发送$/;"	m	struct:ClientData
m_dwVersion	data.h	/^	DWORD	m_dwVersion;	\/\/静态数据版本,每次静态数据发生变化则必须增加数值,每个行情源最好有一个相对独立的高位，这样不同行情源就不会有相同的版本$/;"	m	struct:DC_STKSTATIC_MY
m_id	data.h	/^            INT64 m_id  :16;$/;"	m	struct:ZX_ID::__anon1::__anon2
m_mttime	data.h	/^    int  m_mttime;$/;"	m	struct:RAW_FILE_INFO
m_nBufferLen	data.h	/^    int  m_nBufferLen;$/;"	m	struct:RAW_FILE_INFO
m_nDataSize	data.h	/^	short	m_nDataSize;		\/\/每个数据的长度,对于变长数据,表示每个数据的最大值(0表示没有最大值，任意长度)$/;"	m	struct:DC_GENERAL_MY
m_nDay	data.h	/^	UINT	m_nDay;			\/\/静态库日期，YYYYMMDD$/;"	m	struct:DC_STKSTATIC_MY
m_nDelay	data.h	/^	int  m_nDelay;               \/\/延时(毫秒)$/;"	m	struct:WF_Config
m_nDelay	data.h	/^    int  m_nDelay;               \/\/采样时间间隔（毫秒）$/;"	m	struct:Spip_Config
m_nEncyType	data.h	/^	int  m_nEncyType;            \/\/加密类型$/;"	m	struct:WF_Config
m_nEncyType	data.h	/^	int  m_nEncyType;$/;"	m	struct:DS_Config
m_nEncyType	data.h	/^    int  m_nEncyType;            \/\/加密方式$/;"	m	struct:Spip_Config
m_nFullImageDelay	data.h	/^	int  m_nFullImageDelay;      \/\/完整行情时间间隔(秒)$/;"	m	struct:WF_Config
m_nFullImageDelay	data.h	/^    int  m_nFullImageDelay;      \/\/完整行情采样间隔（秒）$/;"	m	struct:Spip_Config
m_nHQChanged	data.h	/^    int  m_nHQChanged;          \/\/行情变化数$/;"	m	struct:MarketData
m_nMarketStatus	data.h	/^    int  m_nMarketStatus;       \/\/状态$/;"	m	struct:MarketData
m_nMaxFiles	data.h	/^	int  m_nMaxFiles;            \/\/最大文件数$/;"	m	struct:WF_Config
m_nMaxFiles	data.h	/^    int  m_nMaxFiles;            \/\/最大文件数$/;"	m	struct:Spip_Config
m_nMaxGzlxSize	data.h	/^    int           m_nMaxGzlxSize;$/;"	m	struct:TQ_Config
m_nMaxHTIndexSize	data.h	/^    int           m_nMaxHTIndexSize;$/;"	m	struct:TQ_Config
m_nMaxHghqSize	data.h	/^	int           m_nMaxHghqSize;$/;"	m	struct:TQ_Config
m_nMaxHgxxnSize	data.h	/^    int           m_nMaxHgxxnSize;$/;"	m	struct:TQ_Config
m_nMaxSHQzxxSize	data.h	/^    int           m_nMaxSHQzxxSize;$/;"	m	struct:TQ_Config
m_nMaxShow2003Size	data.h	/^    int           m_nMaxShow2003Size;$/;"	m	struct:TQ_Config
m_nMaxSjshqSize	data.h	/^    int           m_nMaxSjshqSize;$/;"	m	struct:TQ_Config
m_nMaxSjsxxSize	data.h	/^    int           m_nMaxSjsxxSize;$/;"	m	struct:TQ_Config
m_nMaxStbhqSize	data.h	/^    int           m_nMaxStbhqSize;$/;"	m	struct:TQ_Config
m_nNum	data.h	/^	short	m_nNum;					\/\/数量$/;"	m	struct:MY_SZL2_ORDER_STAT
m_nNum	data.h	/^	short	m_nNum;			\/\/m_data数量$/;"	m	struct:DC_STKSTATIC_MY
m_nNum	data.h	/^	short	m_nNum;			\/\/数量$/;"	m	struct:DC_SHL2_ACCU_WD_MY
m_nNum	data.h	/^	short	m_nNum;			\/\/数量$/;"	m	struct:DC_SHL2_BIG_WD_MY
m_nNum	data.h	/^	short	m_nNum;			\/\/数量$/;"	m	struct:DC_SHL2_REPORT_MY
m_nNum	data.h	/^	short	m_nNum;$/;"	m	struct:DC_SHL2_MMPEx_MY
m_nNum	data.h	/^	short	m_nNum;$/;"	m	struct:DC_STKSTATIC_Ex_MY
m_nNum	data.h	/^	short   m_nNum;$/;"	m	struct:DC_STKDYNA_MY
m_nPort	data.h	/^    int  m_nPort;$/;"	m	struct:DS_Config
m_nPort	data.h	/^    int  m_nPort;$/;"	m	struct:MDF_Config
m_nShift	data.h	/^	int  m_nShift;$/;"	m	struct:FE_CODE_LIST
m_nSpipPort	data.h	/^    int  m_nSpipPort;            \/\/SPIP端口$/;"	m	struct:Spip_Config
m_nTQPort	data.h	/^	int  m_nTQPort;$/;"	m	struct:TQ_Config
m_nTimeout	data.h	/^	int  m_nTimeout;             \/\/写控制文件超时(毫秒)$/;"	m	struct:WF_Config
m_nTotalLen	data.h	/^	UINT24	m_nTotalLen;		\/\/包含本数据头在内的数据总长度$/;"	m	struct:DC_GENERAL_MY
m_pBuffer	data.h	/^    char* m_pBuffer;$/;"	m	struct:RAW_FILE_INFO
m_pcReserve	data.h	/^    char  m_pcReserve[2]; \/\/              12$/;"	m	struct:DataHead
m_sOrder	data.h	/^    L2_Order m_sOrder[10];$/;"	m	struct:L2_Order_Queue_Raw
m_strAddress	data.h	/^    char  m_strAddress[16];     \/\/地址$/;"	m	struct:ClientData
m_strCode	data.h	/^	char m_strCode[10];$/;"	m	struct:FE_CODE_LIST
m_strConFile	data.h	/^	char m_strConFile[64];       \/\/控制文件名$/;"	m	struct:WF_Config
m_strDBCode	data.h	/^	char m_strDBCode[16];$/;"	m	struct:FE_CODE_LIST
m_strDBName	data.h	/^	char m_strDBName[64];$/;"	m	struct:FE_CODE_LIST
m_strDescrible	data.h	/^    char m_strDescrible[128];   \/\/描述$/;"	m	struct:MarketData
m_strFileName	data.h	/^    char m_strFileName[32];$/;"	m	struct:RAW_FILE_INFO
m_strName	data.h	/^	char m_strName[32];$/;"	m	struct:FE_CODE_LIST
m_strPK1	data.h	/^	char m_strPK1[8];$/;"	m	struct:MDF_Config
m_strPK2	data.h	/^	char m_strPK2[8];$/;"	m	struct:MDF_Config
m_strPK3	data.h	/^	char m_strPK3[8];$/;"	m	struct:MDF_Config
m_strPass	data.h	/^    char m_strPass[24];$/;"	m	struct:DS_Config
m_strPass	data.h	/^    char m_strPass[8];$/;"	m	struct:MDF_Config
m_strServer	data.h	/^    char m_strServer[32];$/;"	m	struct:DS_Config
m_strServer	data.h	/^    char m_strServer[32];$/;"	m	struct:MDF_Config
m_strSpipPwd	data.h	/^    char m_strSpipPwd[16];       \/\/SPIP用户密码$/;"	m	struct:Spip_Config
m_strSpipServer	data.h	/^    char m_strSpipServer[32];    \/\/SPIP服务器地址$/;"	m	struct:Spip_Config
m_strSpipUser	data.h	/^    char m_strSpipUser[16];      \/\/SPIP用户名$/;"	m	struct:Spip_Config
m_strStkCode	data.h	/^	char 	m_strStkCode[10];$/;"	m	struct:STATIC_Ex
m_strTQServer	data.h	/^	char m_strTQServer[32];$/;"	m	struct:TQ_Config
m_strTypeName	data.h	/^	char m_strTypeName[16];$/;"	m	struct:SM_Type
m_strUser	data.h	/^    char m_strUser[16];$/;"	m	struct:DS_Config
m_strUser	data.h	/^    char m_strUser[20];$/;"	m	struct:MDF_Config
m_strUserName	data.h	/^    char  m_strUserName[16];     \/\/用户$/;"	m	struct:ClientData
m_strWritePath	data.h	/^	char m_strWritePath[64];     \/\/输出文件目录$/;"	m	struct:WF_Config
m_strWritePath	data.h	/^    char m_strWritePath[64];     \/\/文件落盘路径，空则不落盘$/;"	m	struct:Spip_Config
m_tLoginTime	data.h	/^    int   m_tLoginTime;         \/\/连接时间$/;"	m	struct:ClientData
m_time	data.h	/^	time_t	m_time;					\/\/数据时间$/;"	m	struct:MY_SZL2_ORDER_STAT
m_time	data.h	/^            INT64 m_time:30;$/;"	m	struct:ZX_ID::__anon1::__anon2
m_type	data.h	/^            INT64 m_type:18;$/;"	m	struct:ZX_ID::__anon1::__anon2
m_wAmtUnit	data.h	/^    WORD m_wAmtUnit;      \/\/行情库金额单位$/;"	m	struct:SM_Type
m_wAttrib	data.h	/^	WORD	m_wAttrib;		\/\/版本属性$/;"	m	struct:DC_STKSTATIC_MY
m_wDataID	data.h	/^	WORD	m_wDataID;			\/\/数据ID$/;"	m	struct:DC_GENERAL_MY
m_wDataType	data.h	/^    WORD  m_wDataType;    \/\/ Main Class   6$/;"	m	struct:DataHead
m_wDynaSeq	data.h	/^	WORD	m_wDynaSeq;		\/\/动态行情序列号，用于客户端转发$/;"	m	struct:DC_STKDYNA_MY
m_wFxjType	data.h	/^    WORD m_wFxjType;      \/\/分析家类型$/;"	m	struct:SM_Type
m_wHeadID	data.h	/^    WORD  m_wHeadID;      \/\/ 0x9988       2$/;"	m	struct:DataHead
m_wMMPAmtUnit	data.h	/^    WORD m_wMMPAmtUnit;   \/\/行情库买卖盘数量单位$/;"	m	struct:SM_Type
m_wMarket	data.h	/^	WORD	m_wMarket;			\/\/市场$/;"	m	struct:DC_GENERAL_MY
m_wMarketCode	data.h	/^    DWORD  m_wMarketCode;       \/\/市场$/;"	m	struct:ClientData
m_wMarketCode	data.h	/^    DWORD m_wMarketCode;        \/\/市场代码$/;"	m	struct:MarketData
m_wMarketProtocol	data.h	/^    WORD m_wMarketProtocol;     \/\/协议$/;"	m	struct:MarketData
m_wNum	data.h	/^	WORD	m_wNum;				\/\/数量$/;"	m	struct:DC_GENERAL_MY
m_wPerHand	data.h	/^    WORD m_wPerHand;      \/\/每手股数$/;"	m	struct:SM_Type
m_wPort	data.h	/^    WORD  m_wPort;              \/\/端口$/;"	m	struct:ClientData
m_wPriceDigit	data.h	/^    WORD m_wPriceDigit;   \/\/价格小数位数$/;"	m	struct:SM_Type
m_wSubType	data.h	/^    WORD m_wSubType;      \/\/$/;"	m	struct:SM_Type
m_wType	data.h	/^    WORD m_wType;$/;"	m	struct:SM_Type
m_wVersion	data.h	/^    WORD  m_wVersion;     \/\/ 0x0101       4$/;"	m	struct:DataHead
m_wVolUnit	data.h	/^    WORD m_wVolUnit;      \/\/行情库数量单位$/;"	m	struct:SM_Type
mon	data.h	/^    BYTE mon;$/;"	m	struct:__anon3
name	data.h	/^    char name[11];$/;"	m	struct:__anon4
pre	data.h	/^    char pre;$/;"	m	struct:__anon4
recnum	data.h	/^    DWORD recnum;$/;"	m	struct:__anon3
recordlen	data.h	/^    WORD recordlen;$/;"	m	struct:__anon3
res0	data.h	/^    BYTE res0;$/;"	m	struct:__anon3
res1	data.h	/^    BYTE res1[21];$/;"	m	struct:__anon3
res1	data.h	/^    char res1[2];$/;"	m	struct:__anon4
res2	data.h	/^    char res2[14];$/;"	m	struct:__anon4
setMMP	data.h	/^	void  setMMP(STK_DYNA* pDyna, SH_L2_MMPEX* pDynaEx)$/;"	f	struct:SHL2_MMP
st	data.h	/^    WORD st;$/;"	m	struct:__anon4
type	data.h	/^    char type;$/;"	m	struct:__anon4
updateBuyPrice	data.h	/^	void updateBuyPrice(DWORD dwPrice, DWORD dwVolume)$/;"	f	struct:SHL2_MMP
updateOrder	data.h	/^    void updateOrder(int index, DWORD order)$/;"	f	struct:L2_Order
updatePrice	data.h	/^    int updatePrice(DWORD dwPrice, DWORD dwOrders)$/;"	f	struct:L2_Order_Queue_Raw
updateSellPrice	data.h	/^	void updateSellPrice(DWORD dwPrice, DWORD dwVolume)$/;"	f	struct:SHL2_MMP
userpass	data.h	/^    DC_USERPASS userpass;$/;"	m	struct:UserPassIP
year	data.h	/^    BYTE year;$/;"	m	struct:__anon3
ASHARE	datacolect.h	/^		ASHARE	= 'A',			\/\/A股,仅对STOCK,WARRANT有效$/;"	e	enum:STK_STATICEx::STK_SUBTYPE
BOND	datacolect.h	/^		BOND = 3,				\/\/债券$/;"	e	enum:STK_STATIC::STK_TYPE
BONDFUND	datacolect.h	/^		BONDFUND = 18,			\/\/债券基金$/;"	e	enum:STK_STATIC::STK_TYPE
BSHARE	datacolect.h	/^		BSHARE	= 'B',			\/\/B股,仅对STOCK,WARRANT有效$/;"	e	enum:STK_STATICEx::STK_SUBTYPE
COMM	datacolect.h	/^		COMM = 16,				\/\/商品现货$/;"	e	enum:STK_STATIC::STK_TYPE
COV_BOND	datacolect.h	/^		COV_BOND = 12,			\/\/可转债$/;"	e	enum:STK_STATIC::STK_TYPE
CPTPSVFUND	datacolect.h	/^		CPTPSVFUND = 20,		\/\/保本型基金 Capital preservation$/;"	e	enum:STK_STATIC::STK_TYPE
C_ATR	datacolect.h	1136;"	d
C_DAT	datacolect.h	1138;"	d
C_ENCODE	datacolect.h	1139;"	d
C_ID	datacolect.h	1135;"	d
C_LBL	datacolect.h	1134;"	d
C_SOH	datacolect.h	1133;"	d
C_TIM	datacolect.h	1137;"	d
DCATTR_DIDDAT	datacolect.h	696;"	d
DCATTR_DIDSTATIC	datacolect.h	694;"	d
DCATTR_FULLDATA	datacolect.h	697;"	d
DCATTR_HKSEC	datacolect.h	688;"	d
DCATTR_INCODESTATIC	datacolect.h	692;"	d
DCATTR_NOSTATIC	datacolect.h	693;"	d
DCATTR_RAWSVR	datacolect.h	698;"	d
DCATTR_SHLEVEL2	datacolect.h	687;"	d
DCATTR_SZLEVEL2	datacolect.h	690;"	d
DCATTR_VARTIME	datacolect.h	689;"	d
DCT_DID	datacolect.h	/^	DCT_DID,				\/\/DID数据,根据模板解析 26$/;"	e	enum:DC_TYPE
DCT_DIDSTATIC	datacolect.h	/^    DCT_DIDSTATIC,          \/\/DID数据，模板号为100003，静态码表数据，结构为DC_HEAD+DC_STKSTATIC（不含STK_STATIC）+DC_DIDHEAD+DC_DIDCompress+DATA$/;"	e	enum:DC_TYPE
DCT_DSCRC	datacolect.h	/^	DCT_DSCRC,				\/\/<--did模板crc,23$/;"	e	enum:DC_TYPE
DCT_DSDATA	datacolect.h	/^	DCT_DSDATA,				\/\/<---did模板数据 25$/;"	e	enum:DC_TYPE
DCT_DSDID	datacolect.h	/^	DCT_DSDID,				\/\/<--需要发送模板的did 24$/;"	e	enum:DC_TYPE
DCT_GENERAL	datacolect.h	/^	DCT_GENERAL,			\/\/<--通用数据17$/;"	e	enum:DC_TYPE
DCT_HK_DYNA	datacolect.h	/^	DCT_HK_DYNA,			\/\/<--港股动态14$/;"	e	enum:DC_TYPE
DCT_HK_STATIC	datacolect.h	/^	DCT_HK_STATIC,			\/\/<--港股静态13$/;"	e	enum:DC_TYPE
DCT_INCODESTATIC	datacolect.h	/^	DCT_INCODESTATIC,		\/\/<--外码转换成内码后的静态数据,28$/;"	e	enum:DC_TYPE
DCT_KEEPALIVE	datacolect.h	/^	DCT_KEEPALIVE,			\/\/<-->保持连接1$/;"	e	enum:DC_TYPE
DCT_LOGIN	datacolect.h	/^	DCT_LOGIN,				\/\/<-->登陆以及采数机属性	2$/;"	e	enum:DC_TYPE
DCT_NEWS	datacolect.h	/^	DCT_NEWS,				\/\/<--公告新闻等文本类型数据20$/;"	e	enum:DC_TYPE
DCT_NUL	datacolect.h	/^	DCT_NUL = 0,$/;"	e	enum:DC_TYPE
DCT_RAWDATA	datacolect.h	/^	DCT_RAWDATA,			\/\/<-->原始数据19$/;"	e	enum:DC_TYPE
DCT_READY	datacolect.h	/^	DCT_READY,				\/\/-->登陆成功，可以接收数据5$/;"	e	enum:DC_TYPE
DCT_REQPASS	datacolect.h	/^	DCT_REQPASS,			\/\/<-->要求用户名密码登陆3$/;"	e	enum:DC_TYPE
DCT_RESEND	datacolect.h	/^	DCT_RESEND,				\/\/-->重发数据包6$/;"	e	enum:DC_TYPE
DCT_SHL2_ACCU_WD	datacolect.h	/^	DCT_SHL2_ACCU_WD,		\/\/<--level2累计最大撤单12$/;"	e	enum:DC_TYPE
DCT_SHL2_BIG_WD	datacolect.h	/^	DCT_SHL2_BIG_WD,		\/\/<--level2即时最大撤单11$/;"	e	enum:DC_TYPE
DCT_SHL2_MMPEx	datacolect.h	/^	DCT_SHL2_MMPEx,			\/\/<--level2扩展买卖盘9$/;"	e	enum:DC_TYPE
DCT_SHL2_QUEUE	datacolect.h	/^	DCT_SHL2_QUEUE,			\/\/<--买卖盘队列，level2特有16$/;"	e	enum:DC_TYPE
DCT_SHL2_REPORT	datacolect.h	/^	DCT_SHL2_REPORT,		\/\/<--level2分笔成交10$/;"	e	enum:DC_TYPE
DCT_STKDYNA	datacolect.h	/^	DCT_STKDYNA,			\/\/<--动态行情8$/;"	e	enum:DC_TYPE
DCT_STKSTATIC	datacolect.h	/^	DCT_STKSTATIC,			\/\/<--静态数据7$/;"	e	enum:DC_TYPE
DCT_SZL2_FULL_ORDER	datacolect.h	/^	DCT_SZL2_FULL_ORDER=100,\/\/<--委托队列多笔明细，深圳Level2特有$/;"	e	enum:DC_TYPE
DCT_SZL2_FULL_TRADE	datacolect.h	/^	DCT_SZL2_FULL_TRADE=101,\/\/<--成交,撤单队列多笔明细，深圳Level2特有$/;"	e	enum:DC_TYPE
DCT_SZL2_ORDER_QUEUE	datacolect.h	/^	DCT_SZL2_ORDER_QUEUE,	\/\/<--委托队列，深圳Level2特有21$/;"	e	enum:DC_TYPE
DCT_SZL2_ORDER_STAT	datacolect.h	/^	DCT_SZL2_ORDER_STAT,	\/\/<--委托队列统计，深圳Level2特有22$/;"	e	enum:DC_TYPE
DCT_USERSTAT	datacolect.h	/^	DCT_USERSTAT,			\/\/-->用户数量统计18$/;"	e	enum:DC_TYPE
DCT_USERnPASS	datacolect.h	/^	DCT_USERnPASS,			\/\/<-->用户名密码4$/;"	e	enum:DC_TYPE
DCT_XML	datacolect.h	/^	DCT_XML,				\/\/<--XML格式数据15$/;"	e	enum:DC_TYPE
DC_ADDSTK	datacolect.h	767;"	d
DC_COMPRESS_TYPE	datacolect.h	/^enum DC_COMPRESS_TYPE	\/\/压缩方法$/;"	g
DC_CPS_MASK	datacolect.h	/^	DC_CPS_MASK = 0x38		\/\/压缩方法MASK$/;"	e	enum:DC_COMPRESS_TYPE
DC_DATA_CHANGED	datacolect.h	770;"	d
DC_DIDCompress	datacolect.h	/^struct DC_DIDCompress$/;"	s
DC_DIDHead	datacolect.h	/^struct DC_DIDHead$/;"	s
DC_DSCRC	datacolect.h	/^struct DC_DSCRC$/;"	s
DC_DSDATA	datacolect.h	/^struct DC_DSDATA$/;"	s
DC_DSDID	datacolect.h	/^struct DC_DSDID$/;"	s
DC_DSLEN	datacolect.h	/^struct DC_DSLEN$/;"	s
DC_DUP	datacolect.h	664;"	d
DC_ENCY_AES	datacolect.h	/^	DC_ENCY_AES,			\/\/AES加密$/;"	e	enum:DC_ENCY_TYPE
DC_ENCY_DES	datacolect.h	/^	DC_ENCY_DES,			\/\/DES加密	(##)$/;"	e	enum:DC_ENCY_TYPE
DC_ENCY_MASK	datacolect.h	/^	DC_ENCY_MASK = 7		\/\/加密方法MASK$/;"	e	enum:DC_ENCY_TYPE
DC_ENCY_SIMPLE	datacolect.h	/^	DC_ENCY_SIMPLE,			\/\/简单加密$/;"	e	enum:DC_ENCY_TYPE
DC_ENCY_TYPE	datacolect.h	/^enum DC_ENCY_TYPE	\/\/加密方法$/;"	g
DC_ERROR	datacolect.h	/^	enum DC_ERROR$/;"	g	struct:DC_READY
DC_EXT_CPS	datacolect.h	/^	DC_EXT_CPS =	0x20,	\/\/扩展压缩，自定义$/;"	e	enum:DC_COMPRESS_TYPE
DC_GENERAL	datacolect.h	/^struct DC_GENERAL$/;"	s
DC_HEAD	datacolect.h	/^struct DC_HEAD$/;"	s
DC_INSTRUCT	datacolect.h	/^	enum DC_INSTRUCT$/;"	g	struct:DC_READY
DC_KEEPALIVE	datacolect.h	/^struct DC_KEEPALIVE $/;"	s
DC_LABEL_CHANGED	datacolect.h	768;"	d
DC_LOGIN	datacolect.h	/^struct DC_LOGIN $/;"	s
DC_NAME_CHANGED	datacolect.h	769;"	d
DC_NEWS	datacolect.h	/^struct DC_NEWS$/;"	s
DC_NOCOMPRESS	datacolect.h	/^	DC_NOCOMPRESS = 0,		\/\/不压缩$/;"	e	enum:DC_COMPRESS_TYPE
DC_NOENC	datacolect.h	/^	DC_NOENC = 0,			\/\/明码传送$/;"	e	enum:DC_ENCY_TYPE
DC_PORT	datacolect.h	588;"	d
DC_RAWDATA	datacolect.h	/^struct DC_RAWDATA$/;"	s
DC_READY	datacolect.h	/^struct DC_READY $/;"	s
DC_RECFULL_FLAG	datacolect.h	/^	DC_RECFULL_FLAG = 0x80000000,\/\/记录数全量标记MASK$/;"	e	enum:DC_RECFULL_TYPE
DC_RECFULL_TYPE	datacolect.h	/^enum DC_RECFULL_TYPE	\/\/压缩方法$/;"	g
DC_REQPASS	datacolect.h	/^struct DC_REQPASS 	\/\/（##）$/;"	s
DC_RESEND	datacolect.h	/^struct DC_RESEND $/;"	s
DC_SHL2_ACCU_WD	datacolect.h	/^struct DC_SHL2_ACCU_WD $/;"	s
DC_SHL2_BIG_WD	datacolect.h	/^struct DC_SHL2_BIG_WD $/;"	s
DC_SHL2_MMPEx	datacolect.h	/^struct DC_SHL2_MMPEx $/;"	s
DC_SHL2_QUEUE	datacolect.h	/^struct DC_SHL2_QUEUE$/;"	s
DC_SHL2_REPORT	datacolect.h	/^struct DC_SHL2_REPORT $/;"	s
DC_SOCID_CPS	datacolect.h	/^	DC_SOCID_CPS =	0x30,	\/\/表式该数据用so库里socid函数模板压缩解压$/;"	e	enum:DC_COMPRESS_TYPE
DC_STD_CPS	datacolect.h	/^	DC_STD_CPS =	0x8,	\/\/标准方法$/;"	e	enum:DC_COMPRESS_TYPE
DC_STKDYNA	datacolect.h	/^struct DC_STKDYNA $/;"	s
DC_STKSTATIC	datacolect.h	/^struct DC_STKSTATIC $/;"	s
DC_SZL2_ORDER_STAT	datacolect.h	/^struct DC_SZL2_ORDER_STAT$/;"	s
DC_TAG	datacolect.h	662;"	d
DC_TYPE	datacolect.h	/^enum DC_TYPE$/;"	g
DC_USERPASS	datacolect.h	/^struct DC_USERPASS $/;"	s
DC_USERSTAT	datacolect.h	/^struct DC_USERSTAT$/;"	s
DC_XML	datacolect.h	/^struct DC_XML $/;"	s
DC_XMLCID_CPS	datacolect.h	/^	DC_XMLCID_CPS = 0x28,	\/\/表示该数据用xmlcid模板压缩解压$/;"	e	enum:DC_COMPRESS_TYPE
DC_ZIP_CPS	datacolect.h	/^	DC_ZIP_CPS =	0x18,	\/\/ZIP格式$/;"	e	enum:DC_COMPRESS_TYPE
DC_ZLIB_CPS	datacolect.h	/^	DC_ZLIB_CPS =	0x10,	\/\/ZLIB压缩$/;"	e	enum:DC_COMPRESS_TYPE
DEALDATAOVER	datacolect.h	/^		DEALDATAOVER,\/\/数据处理完毕$/;"	e	enum:DC_READY::DC_INSTRUCT
DG_NIL	datacolect.h	/^	DG_NIL = 0,					\/\/无效$/;"	e	enum:DZH_GROUP_TYPE
DG_PRODUCT	datacolect.h	/^	DG_PRODUCT,					\/\/产品$/;"	e	enum:DZH_GROUP_TYPE
DG_SC_CPY	datacolect.h	/^	DG_SC_CPY,					\/\/券商$/;"	e	enum:DZH_GROUP_TYPE
DG_SC_DEP	datacolect.h	/^	DG_SC_DEP,					\/\/营业部，必须在DG_SC_CPY券商分类之后才有意义$/;"	e	enum:DZH_GROUP_TYPE
DISCONNECT	datacolect.h	/^		DISCONNECT,				\/\/不成功，断开连接$/;"	e	enum:DC_READY::DC_INSTRUCT
DZH_AGGROUP_MASK	datacolect.h	1046;"	d
DZH_AGTYPE_MASK	datacolect.h	1045;"	d
DZH_AUTHORIZE	datacolect.h	/^struct DZH_AUTHORIZE$/;"	s
DZH_AUT_GROUP	datacolect.h	/^struct DZH_AUT_GROUP$/;"	s
DZH_AUT_GROUP_SIZE	datacolect.h	1061;"	d
DZH_GROUP_TYPE	datacolect.h	/^enum DZH_GROUP_TYPE$/;"	g
ENT_BOND	datacolect.h	/^		ENT_BOND = 'O',			\/\/企业债,仅对BOND有效$/;"	e	enum:STK_STATICEx::STK_SUBTYPE
ESP	datacolect.h	/^		ESP = 'E',\/\/ETF$/;"	e	enum:STK_STATICEx::STK_SP
ETF	datacolect.h	/^		ETF = 10,				\/\/ETF$/;"	e	enum:STK_STATIC::STK_TYPE
EXCHANGE	datacolect.h	/^		EXCHANGE = 6,			\/\/外汇$/;"	e	enum:STK_STATIC::STK_TYPE
FIN_BOND	datacolect.h	/^		FIN_BOND = 'F',			\/\/金融债,仅对BOND有效$/;"	e	enum:STK_STATICEx::STK_SUBTYPE
FIX_BJ	datacolect.h	1107;"	d
FIX_HQ	datacolect.h	1108;"	d
FIX_MX	datacolect.h	1109;"	d
FIX_XX	datacolect.h	1110;"	d
FSP	datacolect.h	/^		FSP = 'F',\/\/非交易型开放式基金$/;"	e	enum:STK_STATICEx::STK_SP
FTR_IDX	datacolect.h	/^		FTR_IDX = 8,			\/\/期指$/;"	e	enum:STK_STATIC::STK_TYPE
FUND	datacolect.h	/^		FUND = 2,				\/\/基金$/;"	e	enum:STK_STATIC::STK_TYPE
FUTURE	datacolect.h	/^		FUTURE = 7,				\/\/期货$/;"	e	enum:STK_STATIC::STK_TYPE
GENERAL_ATTR_MASK	datacolect.h	887;"	d
GENERAL_CHAR	datacolect.h	891;"	d
GENERAL_CONN_SEND	datacolect.h	900;"	d
GENERAL_DIR_SEND	datacolect.h	901;"	d
GENERAL_DWORD	datacolect.h	890;"	d
GENERAL_FIXED	datacolect.h	885;"	d
GENERAL_FLOAT	datacolect.h	889;"	d
GENERAL_FLOAT_FIX	datacolect.h	903;"	d
GENERAL_FLOAT_VAR	datacolect.h	904;"	d
GENERAL_INTR_SEND	datacolect.h	899;"	d
GENERAL_STATIC	datacolect.h	896;"	d
GENERAL_STRING_FIX	datacolect.h	906;"	d
GENERAL_STRING_VAR	datacolect.h	905;"	d
GENERAL_STRUCT	datacolect.h	893;"	d
GENERAL_STRUCT_FIX	datacolect.h	907;"	d
GENERAL_TIMEFLOAT	datacolect.h	892;"	d
GENERAL_TYPE_MASK	datacolect.h	894;"	d
GENERAL_VAR	datacolect.h	886;"	d
GENERAL_WHOLE	datacolect.h	898;"	d
GE_BLK_STK	datacolect.h	938;"	d
GE_HKDYNA	datacolect.h	937;"	d
GE_HKREL_TXT	datacolect.h	934;"	d
GE_IOPV	datacolect.h	932;"	d
GE_MATU_YLD	datacolect.h	933;"	d
GE_MAX_EXTRA	datacolect.h	930;"	d
GE_STATIC_EX	datacolect.h	936;"	d
GNL_ISIN	datacolect.h	1161;"	d
GNL_ROUND_LOT	datacolect.h	1162;"	d
GNL_STKNAME_ENG	datacolect.h	1160;"	d
GNL_SZSTK_STATAS	datacolect.h	1159;"	d
GOV_BOND	datacolect.h	/^		GOV_BOND = 'G',			\/\/国债,仅对BOND有效$/;"	e	enum:STK_STATICEx::STK_SUBTYPE
Get	datacolect.h	/^	DWORD Get() const {return m_wLow + (m_cHigh<<16);}$/;"	f	struct:UINT24
GetDid	datacolect.h	/^	DWORD GetDid(void)$/;"	f	struct:DC_DIDHead
GetGroup	datacolect.h	/^	DWORD GetGroup(){return m_wData&DZH_AGGROUP_MASK;}$/;"	f	struct:DZH_AUT_GROUP
GetLen	datacolect.h	/^	int GetLen(void)$/;"	f	struct:DC_DIDCompress
GetLen	datacolect.h	/^	int GetLen(void)$/;"	f	struct:DC_DIDHead
GetRecNum	datacolect.h	/^	DWORD GetRecNum(void)$/;"	f	struct:DC_DIDHead
GetType	datacolect.h	/^	DZH_GROUP_TYPE GetType(){return (DZH_GROUP_TYPE)((m_wData&DZH_AGTYPE_MASK)>>13);}$/;"	f	struct:DZH_AUT_GROUP
GetUnComLen	datacolect.h	/^	DWORD GetUnComLen(void)$/;"	f	struct:DC_DIDCompress
HK_BROKER	datacolect.h	/^	struct HK_BROKER	$/;"	s	struct:STK_HKDYNA
HYBRIDFUND	datacolect.h	/^		HYBRIDFUND = 19,		\/\/混合型基金$/;"	e	enum:STK_STATIC::STK_TYPE
IDLE	datacolect.h	/^		IDLE,					\/\/成功，服务器指定采数机为备份行情源，指示采数机等待，直到收到带有SUCCESS标志的DC_READY数据包再开始发送数据$/;"	e	enum:DC_READY::DC_INSTRUCT
INDEX	datacolect.h	/^		INDEX = 0,				\/\/指数$/;"	e	enum:STK_STATIC::STK_TYPE
INDUSTRY_CLASIFY	datacolect.h	/^struct INDUSTRY_CLASIFY$/;"	s
INFO	datacolect.h	/^		INFO,				\/\/资讯,包括F10，新闻等文本数据$/;"	e	enum:DC_XML::XML_PROCESS
INVALID_USERPASS	datacolect.h	/^		INVALID_USERPASS,		\/\/非法用户名密码$/;"	e	enum:DC_READY::DC_ERROR
InOrder	datacolect.h	/^struct InOrder$/;"	s
L2_STAT_CPS	datacolect.h	1128;"	d
L2_STAT_FILE	datacolect.h	1127;"	d
LIST_MENU	datacolect.h	/^		LIST_MENU,			\/\/动态列表文件菜单$/;"	e	enum:DC_XML::XML_PROCESS
LIST_TABLE	datacolect.h	/^		LIST_TABLE,			\/\/动态列表文件$/;"	e	enum:DC_XML::XML_PROCESS
LOF	datacolect.h	/^		LOF = 11,				\/\/LOF$/;"	e	enum:STK_STATIC::STK_TYPE
LPServDataInfo	datacolect.h	/^}ServDataInfo,*LPServDataInfo;$/;"	t	typeref:struct:tagServDataInfo
LPStatHqsInfo	datacolect.h	/^}StatHqsInfo,*LPStatHqsInfo;$/;"	t	typeref:struct:tagStatHqsInfo
LPStatSingleHqsInfo	datacolect.h	/^}StatSingleHqsInfo,*LPStatSingleHqsInfo;$/;"	t	typeref:struct:tagStatSingleHqsInfo
LPUserType	datacolect.h	/^}UserType,*LPUserType;$/;"	t	typeref:struct:tagUserType
LPUserVer	datacolect.h	/^}UserVer,*LPUserVer;$/;"	t	typeref:struct:tagUserVer
LSP	datacolect.h	/^		LSP = 'L',\/\/上市开放型基金（LOF）$/;"	e	enum:STK_STATICEx::STK_SP
MARKET_ALREADY_EXSIST	datacolect.h	/^		MARKET_ALREADY_EXSIST,	\/\/市场已经存在$/;"	e	enum:DC_READY::DC_ERROR
MKT_BI	datacolect.h	69;"	d
MKT_BO	datacolect.h	76;"	d
MKT_CC	datacolect.h	66;"	d
MKT_DC	datacolect.h	65;"	d
MKT_DSM	datacolect.h	77;"	d
MKT_FE	datacolect.h	61;"	d
MKT_FI	datacolect.h	71;"	d
MKT_HK	datacolect.h	56;"	d
MKT_HS	datacolect.h	75;"	d
MKT_IX	datacolect.h	72;"	d
MKT_NSQ	datacolect.h	59;"	d
MKT_NW	datacolect.h	74;"	d
MKT_NY	datacolect.h	58;"	d
MKT_SC	datacolect.h	63;"	d
MKT_SF	datacolect.h	67;"	d
MKT_SG	datacolect.h	68;"	d
MKT_SH	datacolect.h	54;"	d
MKT_SS	datacolect.h	78;"	d
MKT_SZ	datacolect.h	55;"	d
MKT_TE	datacolect.h	80;"	d
MKT_TW	datacolect.h	57;"	d
MKT_UI	datacolect.h	70;"	d
MKT_Z$	datacolect.h	79;"	d
MKT_ZC	datacolect.h	64;"	d
MKT_ZI	datacolect.h	73;"	d
MK_VARTIME	datacolect.h	1125;"	d
MONEYFUND	datacolect.h	/^		MONEYFUND = 21,			\/\/货币一般基金$/;"	e	enum:STK_STATIC::STK_TYPE
NILTYPE	datacolect.h	/^		NILTYPE = 0,$/;"	e	enum:STK_STATICEx::STK_SUBTYPE
NOERR	datacolect.h	/^		NOERR = 0,$/;"	e	enum:DC_READY::DC_ERROR
NOT_SUPPORT_MARKET	datacolect.h	/^		NOT_SUPPORT_MARKET,		\/\/服务器不支持该市场$/;"	e	enum:DC_READY::DC_ERROR
NSP	datacolect.h	/^		NSP	= 'N',\/\/正常$/;"	e	enum:STK_STATICEx::STK_SP
NULLSP	datacolect.h	/^		NULLSP = 0,$/;"	e	enum:STK_STATICEx::STK_SP
NVMONEYFUND	datacolect.h	/^		NVMONEYFUND = 22,		\/\/货币净值基金,net value$/;"	e	enum:STK_STATIC::STK_TYPE
OPTION	datacolect.h	/^		OPTION = 5,				\/\/选择权$/;"	e	enum:STK_STATIC::STK_TYPE
OSP	datacolect.h	/^		OSP = 'O',\/\/仅揭示净值的开放式基金$/;"	e	enum:STK_STATICEx::STK_SP
OTHER_STOCK	datacolect.h	/^		OTHER_STOCK = 4,		\/\/其它股票$/;"	e	enum:STK_STATIC::STK_TYPE
PSP	datacolect.h	/^		PSP = 'P',\/\/PT股$/;"	e	enum:STK_STATICEx::STK_SP
PUSHINFO_MOTION	datacolect.h	/^		PUSHINFO_MOTION = 200,	\/\/跑马灯2，收到跑马灯2后，会替换跑马灯1运行，跑马灯2是多条信息，并且支持超链$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL	datacolect.h	/^		PUSHINFO_ROLL = 100,		\/\/滚动资讯$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL1	datacolect.h	/^		PUSHINFO_ROLL1,			\/\/滚动资讯1,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL2	datacolect.h	/^		PUSHINFO_ROLL2,			\/\/滚动资讯2,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL3	datacolect.h	/^		PUSHINFO_ROLL3,			\/\/滚动资讯3,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL4	datacolect.h	/^		PUSHINFO_ROLL4,			\/\/滚动资讯4,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL5	datacolect.h	/^		PUSHINFO_ROLL5,			\/\/滚动资讯5,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL6	datacolect.h	/^		PUSHINFO_ROLL6,			\/\/滚动资讯6,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL7	datacolect.h	/^		PUSHINFO_ROLL7,			\/\/滚动资讯7,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL8	datacolect.h	/^		PUSHINFO_ROLL8,			\/\/滚动资讯8,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
PUSHINFO_ROLL9	datacolect.h	/^		PUSHINFO_ROLL9,			\/\/滚动资讯9,保留今后使用$/;"	e	enum:DC_XML::XML_PROCESS
QDIIFUND	datacolect.h	/^		QDIIFUND = 24,			\/\/QDII基金$/;"	e	enum:STK_STATIC::STK_TYPE
QUEUE_BUYPRICE	datacolect.h	333;"	d
QUEUE_ORDER	datacolect.h	332;"	d
QUEUE_ORDER_IN	datacolect.h	342;"	d
QUEUE_SELLPRICE	datacolect.h	334;"	d
QUEUE_STOCKID	datacolect.h	335;"	d
QUEUE_TYPE_MASK	datacolect.h	330;"	d
QUOTEDAT	datacolect.h	/^		QUOTEDAT,				\/\/成功,通知client仅需发生QUOT数据给服务器$/;"	e	enum:DC_READY::DC_INSTRUCT
RAW_ADVERTISE	datacolect.h	1189;"	d
RAW_AES	datacolect.h	1092;"	d
RAW_AUTHORIZE	datacolect.h	1088;"	d
RAW_BROADCAST	datacolect.h	1084;"	d
RAW_CLIENT_BC	datacolect.h	1086;"	d
RAW_COMMAND_FILE	datacolect.h	1196;"	d
RAW_DFIX_DATA	datacolect.h	1203;"	d
RAW_INITDEL	datacolect.h	1082;"	d
RAW_NOSAVE	datacolect.h	1093;"	d
RAW_NOTIFY_FILE	datacolect.h	1172;"	d
RAW_PLANA_FILE	datacolect.h	1131;"	d
RAW_POOL_FILE	datacolect.h	1130;"	d
RAW_SVRSAVE_BC	datacolect.h	1085;"	d
RAW_SVRUSE	datacolect.h	1083;"	d
RAW_ZLIBCPS	datacolect.h	1091;"	d
REPO	datacolect.h	/^		REPO = 15,				\/\/回购$/;"	e	enum:STK_STATIC::STK_TYPE
RGZ	datacolect.h	/^		RGZ = 9,				\/\/认购证$/;"	e	enum:STK_STATIC::STK_TYPE
SERVER_NOTREADY	datacolect.h	/^		SERVER_NOTREADY,			\/\/服务器暂时不可用，稍后再连接$/;"	e	enum:DC_READY::DC_ERROR
SHL2_MMP_SIZE	datacolect.h	309;"	d
SH_L2_ACCU_WD	datacolect.h	/^struct SH_L2_ACCU_WD	$/;"	s
SH_L2_BIG_WD	datacolect.h	/^struct SH_L2_BIG_WD			$/;"	s
SH_L2_MMPEX	datacolect.h	/^struct SH_L2_MMPEX$/;"	s
SH_L2_REPORT	datacolect.h	/^struct SH_L2_REPORT$/;"	s
SIMPLE_ENCY_MASK	datacolect.h	628;"	d
SMFUND	datacolect.h	/^		SMFUND = 23,			\/\/短期理财基金$/;"	e	enum:STK_STATIC::STK_TYPE
SSP	datacolect.h	/^		SSP	= 'S',\/\/ST股$/;"	e	enum:STK_STATICEx::STK_SP
STK_DYNA	datacolect.h	/^struct STK_DYNA$/;"	s
STK_HKDYNA	datacolect.h	/^struct STK_HKDYNA$/;"	s
STK_SP	datacolect.h	/^	enum STK_SP\/\/股票属性$/;"	g	struct:STK_STATICEx
STK_STATIC	datacolect.h	/^struct STK_STATIC$/;"	s
STK_STATICEx	datacolect.h	/^struct STK_STATICEx$/;"	s
STK_SUBTYPE	datacolect.h	/^	enum STK_SUBTYPE$/;"	g	struct:STK_STATICEx
STK_TYPE	datacolect.h	/^	enum STK_TYPE$/;"	g	struct:STK_STATIC
STOCK	datacolect.h	/^		STOCK = 1,				\/\/股票$/;"	e	enum:STK_STATIC::STK_TYPE
STOCKFUND	datacolect.h	/^		STOCKFUND = 17,			\/\/股票基金$/;"	e	enum:STK_STATIC::STK_TYPE
SUCCESS	datacolect.h	/^		SUCCESS = 0,			\/\/成功，指示采数机可以开始发送数据$/;"	e	enum:DC_READY::DC_INSTRUCT
SVR_PROCESS	datacolect.h	/^		SVR_PROCESS = 0,	\/\/服务器处理$/;"	e	enum:DC_XML::XML_PROCESS
SVR_SEND	datacolect.h	/^		SVR_SEND,			\/\/服务器转发给每个客户$/;"	e	enum:DC_XML::XML_PROCESS
SZ_L2_ORDER_STAT	datacolect.h	/^struct SZ_L2_ORDER_STAT$/;"	s
ServDataInfo	datacolect.h	/^}ServDataInfo,*LPServDataInfo;$/;"	t	typeref:struct:tagServDataInfo
Set	datacolect.h	/^	void Set(DWORD dw){m_wLow = (WORD)dw;m_cHigh = (BYTE)(dw>>16);}$/;"	f	struct:UINT24
SetData	datacolect.h	/^	void SetData(DZH_GROUP_TYPE type,DWORD dwGroup){m_wData = (WORD)(((type<<13)&DZH_AGTYPE_MASK) | (dwGroup&DZH_AGGROUP_MASK));}$/;"	f	struct:DZH_AUT_GROUP
SetGroup	datacolect.h	/^	void SetGroup(DWORD dwGroup){ m_wData &= ~DZH_AGGROUP_MASK; m_wData |= (dwGroup&DZH_AGGROUP_MASK);}$/;"	f	struct:DZH_AUT_GROUP
SetRecNum	datacolect.h	/^	void SetRecNum(DWORD m_dwDid,DWORD dwRecNum)$/;"	f	struct:DC_DIDHead
SetType	datacolect.h	/^	void SetType(DZH_GROUP_TYPE t){ m_wData &= ~DZH_AGTYPE_MASK; m_wData |= (t<<13)&DZH_AGTYPE_MASK;}$/;"	f	struct:DZH_AUT_GROUP
SetUnComLen	datacolect.h	/^	void SetUnComLen(DWORD dwUnComLen)$/;"	f	struct:DC_DIDCompress
StatHqsInfo	datacolect.h	/^}StatHqsInfo,*LPStatHqsInfo;$/;"	t	typeref:struct:tagStatHqsInfo
StatSingleHqsInfo	datacolect.h	/^}StatSingleHqsInfo,*LPStatSingleHqsInfo;$/;"	t	typeref:struct:tagStatSingleHqsInfo
TRUST	datacolect.h	/^		TRUST = 13,				\/\/信托$/;"	e	enum:STK_STATIC::STK_TYPE
TSP	datacolect.h	/^		TSP = 'T',\/\/代办转让证券$/;"	e	enum:STK_STATICEx::STK_SP
UINT24	datacolect.h	/^struct UINT24$/;"	s
USERNAMELEN	datacolect.h	943;"	d
USERPWDLEN	datacolect.h	944;"	d
UserType	datacolect.h	/^}UserType,*LPUserType;$/;"	t	typeref:struct:tagUserType
UserVer	datacolect.h	/^}UserVer,*LPUserVer;$/;"	t	typeref:struct:tagUserVer
WAIT	datacolect.h	/^		WAIT,					\/\/成功，指示采数机等待，直到收到带有SUCCESS标志的DC_READY数据包再开始发送数据$/;"	e	enum:DC_READY::DC_INSTRUCT
WARRANT	datacolect.h	/^		WARRANT = 14,			\/\/权证$/;"	e	enum:STK_STATIC::STK_TYPE
XML_PROCESS	datacolect.h	/^	enum XML_PROCESS$/;"	g	struct:DC_XML
YYBID	datacolect.h	/^	unsigned short YYBID;$/;"	m	struct:tagUserType
ZLIB_HEAD	datacolect.h	/^struct ZLIB_HEAD$/;"	s
ZSP	datacolect.h	/^		ZSP = 'Z',\/\/处于退市整理期的证券$/;"	e	enum:STK_STATICEx::STK_SP
_DATACOLLECT_H_INCLUDE	datacolect.h	7;"	d
build	datacolect.h	/^	short build;\/\/build号$/;"	m	struct:tagUserVer
exist_flag	datacolect.h	/^	char exist_flag;\/\/为-1没有该行情源,为1有该行情源$/;"	m	struct:tagStatSingleHqsInfo
fresh_time	datacolect.h	/^	time_t fresh_time;\/\/$/;"	m	struct:tagStatSingleHqsInfo
hqs_ip	datacolect.h	/^	char hqs_ip[32];$/;"	m	struct:tagStatSingleHqsInfo
industryClasify	datacolect.h	/^const INDUSTRY_CLASIFY industryClasify[] =$/;"	v
init_flag	datacolect.h	/^	int init_flag;\/\/离开盘时间只有10分钟但还没有初始化为3,1为正常,2为等待初始化;$/;"	m	struct:tagStatHqsInfo
mDsLen	datacolect.h	/^	DC_DSLEN mDsLen[1];\/\/共m_dwDidNum个$/;"	m	struct:DC_DSDATA
mStatHqsInfo	datacolect.h	/^	StatHqsInfo mStatHqsInfo[10];\/\/最大10个市场$/;"	m	struct:tagServDataInfo
mStatSingleHqsInfo	datacolect.h	/^	StatSingleHqsInfo mStatSingleHqsInfo[4];$/;"	m	struct:tagStatHqsInfo
mUserType	datacolect.h	/^	UserType mUserType[10];$/;"	m	struct:tagServDataInfo
mUserVer	datacolect.h	/^	UserVer mUserVer[20];$/;"	m	struct:tagServDataInfo
m_CnvtSpec	datacolect.h	/^		} m_CnvtSpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon10
m_bCid	datacolect.h	/^	BYTE m_bCid:5;\/\/压缩ID$/;"	m	struct:DC_DIDCompress
m_bCompress	datacolect.h	/^	BOOL	m_bCompress;			\/\/要求发送数据压缩$/;"	m	struct:DC_READY
m_bDidType	datacolect.h	/^	BYTE m_bDidType:2;\/\/0表示后面的m_dwDid为13位,1为21位,2为29位,3为61位$/;"	m	struct:DC_DIDHead
m_bEx	datacolect.h	/^	BYTE m_bEx[1];\/\/最多4个字节，最小1个字节$/;"	m	struct:DC_DIDCompress
m_bEx	datacolect.h	/^	BYTE m_bEx[1];\/\/最多8个字节$/;"	m	struct:DC_DIDHead
m_bFull	datacolect.h	/^	BYTE m_bFull:1;\/\/为1只能发生全量压缩数据，为0全量和增量压缩数据都可以发送$/;"	m	struct:DC_DSDID
m_bFullRec	datacolect.h	/^	BYTE m_bFullRec:1;\/\/全记录,下游可以将以前的数据全部覆盖$/;"	m	struct:DC_DIDHead
m_bLastCmp	datacolect.h	/^	BYTE m_bLastCmp:1;\/\/为1表示压缩的数据跟前面的切片相关，需要定义GetBmData函数$/;"	m	struct:DC_DIDCompress
m_bNoCompress	datacolect.h	/^	BYTE m_bNoCompress:1;\/\/为1发送无压缩数据，为0发送压缩数据$/;"	m	struct:DC_DSDID
m_bNumType	datacolect.h	/^	BYTE m_bNumType:2;\/\/0表示后面的m_dwRecNum为1个字节BYTE,1表示为2个字节WORD,2表示为3个字节的UINT24,3表示为4个DWORD$/;"	m	struct:DC_DIDHead
m_bSend	datacolect.h	/^	BYTE m_bSend:1;\/\/为1需要重新发送模板文件$/;"	m	struct:DC_DSDID
m_bUnComLenType	datacolect.h	/^	BYTE m_bUnComLenType:2;\/\/0表示后面的m_dwDid为1个字节BYTE,1表示为2个字节WORD,2表示为3个字节的UINT24,3表示为4个DWORD$/;"	m	struct:DC_DIDCompress
m_bondSpec	datacolect.h	/^		} m_bondSpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon9
m_buyBroker	datacolect.h	/^	}m_buyBroker,m_sellBroker;$/;"	m	struct:STK_HKDYNA	typeref:struct:STK_HKDYNA::HK_BROKER
m_cBidOrAsk	datacolect.h	/^	char	m_cBidOrAsk;	\/\/'B'表示买单，'A'表示卖单$/;"	m	struct:DC_SHL2_ACCU_WD
m_cBidOrAsk	datacolect.h	/^	char	m_cBidOrAsk;	\/\/'B'表示买单，'A'表示卖单$/;"	m	struct:DC_SHL2_BIG_WD
m_cCP	datacolect.h	/^			char	m_cCP;				\/\/	'C' or 'P' Call or Put$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_cCP	datacolect.h	/^			char	m_cCP;				\/\/	'C' or 'P' Call or Put$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_cData	datacolect.h	/^	BYTE	m_cData[1];				\/\/总长度为m_dwDataLen,原始数据，接收端以文件名m_strFileName保存文件$/;"	m	struct:DC_RAWDATA
m_cHigh	datacolect.h	/^	BYTE m_cHigh;$/;"	m	struct:UINT24
m_cSecurityProperties	datacolect.h	/^			char	m_cSecurityProperties;\/\/特殊分类标记，取值集合STK_SP中的值$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_cStyle	datacolect.h	/^			char	m_cStyle;			\/\/  'A' or 'E'	American or European Style$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_cStyle	datacolect.h	/^			char	m_cStyle;			\/\/  'A' or 'E'	American or European Style$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_cSubType	datacolect.h	/^	char	m_cSubType;			\/\/STK_SUBTYPE$/;"	m	struct:STK_STATICEx
m_cTag	datacolect.h	/^	BYTE	m_cTag;			\/\/必须为DC_TAG$/;"	m	struct:DC_HEAD
m_cText	datacolect.h	/^	char	m_cText[1];				\/\/标题及正文，长度为m_wTitleLen$/;"	m	struct:DC_NEWS
m_cTradeStatus	datacolect.h	/^			char	m_cTradeStatus;		\/\/	交易状态，'N'=Normal, 'H'=Halt, 'X'=Not trade on this Market$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_cType	datacolect.h	/^		char	m_cType[40];		\/\/'B':broker,'R':register trader,'S':number of spread$/;"	m	struct:STK_HKDYNA::HK_BROKER
m_cType	datacolect.h	/^	BYTE	m_cType;			\/\/STK_TYPE$/;"	m	struct:STK_STATIC
m_cType	datacolect.h	/^	BYTE	m_cType;		\/\/DC_TYPE$/;"	m	struct:DC_HEAD
m_cType	datacolect.h	/^	char	m_cType;			\/\/STK_TYPE,由该标志决定联合中使用哪一个结构$/;"	m	struct:STK_STATICEx
m_chZhdocData	datacolect.h	/^	char m_chZhdocData[16]; \/\/资讯最近更新时间$/;"	m	struct:tagServDataInfo
m_data	datacolect.h	/^	SH_L2_ACCU_WD m_data[1];\/\/总共m_nNum个$/;"	m	struct:DC_SHL2_ACCU_WD
m_data	datacolect.h	/^	SH_L2_BIG_WD m_data[1];	\/\/总共m_nNum个$/;"	m	struct:DC_SHL2_BIG_WD
m_data	datacolect.h	/^	SH_L2_MMPEX m_data[1];$/;"	m	struct:DC_SHL2_MMPEx
m_data	datacolect.h	/^	SH_L2_REPORT m_data[1];	\/\/总共m_nNum个$/;"	m	struct:DC_SHL2_REPORT
m_data	datacolect.h	/^	STK_DYNA m_data[1];$/;"	m	struct:DC_STKDYNA
m_data	datacolect.h	/^	STK_STATIC m_data[1];	\/\/数据$/;"	m	struct:DC_STKSTATIC
m_data	datacolect.h	/^	SZ_L2_ORDER_STAT	m_data[1];	\/\/共有m_nNum个$/;"	m	struct:DC_SZL2_ORDER_STAT
m_data	datacolect.h	/^	ServDataInfo  m_data;$/;"	m	struct:DC_USERSTAT
m_dataEncyType	datacolect.h	/^	DC_ENCY_TYPE	m_dataEncyType;	\/\/数据要求加密。若要求加密，则今后所有发送到服务器的数据包都尽量加密发送$/;"	m	struct:DC_READY
m_dwAdvStop	datacolect.h	/^	DWORD	m_dwAdvStop;		\/\/涨停$/;"	m	struct:STK_STATIC
m_dwAssetDate	datacolect.h	/^			DWORD	m_dwAssetDate;		\/\/YYYYMMDD$/;"	m	struct:STK_STATICEx::__anon5::__anon12
m_dwAttrib	datacolect.h	/^	DWORD	m_dwAttrib;				\/\/采数机属性$/;"	m	struct:DC_LOGIN
m_dwAttrib	datacolect.h	/^	DWORD	m_dwAttrib;				\/\/属性$/;"	m	struct:DC_RAWDATA
m_dwAvgBuyPrice	datacolect.h	/^	DWORD	m_dwAvgBuyPrice;	\/\/加权平均委买价格$/;"	m	struct:SH_L2_MMPEX
m_dwAvgSellPrice	datacolect.h	/^	DWORD	m_dwAvgSellPrice;	\/\/加权平均委卖价格$/;"	m	struct:SH_L2_MMPEX
m_dwBeginSeq	datacolect.h	/^	DWORD m_dwBeginSeq;		\/\/需要重发的数据包开始位置$/;"	m	struct:DC_RESEND
m_dwBuyPrice	datacolect.h	/^	DWORD	m_dwBuyPrice[5];		\/\/委买价格$/;"	m	struct:STK_DYNA
m_dwBuyPrice	datacolect.h	/^	DWORD	m_dwBuyPrice[SHL2_MMP_SIZE];	\/\/委买价6-10$/;"	m	struct:SH_L2_MMPEX
m_dwBuyVol	datacolect.h	/^	DWORD	m_dwBuyVol[5];			\/\/委买量$/;"	m	struct:STK_DYNA
m_dwBuyVol	datacolect.h	/^	DWORD	m_dwBuyVol[SHL2_MMP_SIZE];		\/\/委买量6-10$/;"	m	struct:SH_L2_MMPEX
m_dwCrc	datacolect.h	/^	DWORD m_dwCrc;\/\/did号模板crc$/;"	m	struct:DC_DSCRC
m_dwData	datacolect.h	/^	DWORD	m_dwData;			\/\/数据标识，同一类数据下，每个数据有一个唯一的标识，接收方会覆盖上一次收到的m_processType和m_dwData都相同的数据$/;"	m	struct:DC_XML
m_dwDataAttr	datacolect.h	/^	DWORD	m_dwDataAttr;		\/\/数据属性$/;"	m	struct:DC_GENERAL
m_dwDataKey	datacolect.h	/^	DWORD	m_dwDataKey[2];			\/\/数据加密发送公钥,深圳全队列第一个DWORD填上次的包序号$/;"	m	struct:DC_READY
m_dwDataLen	datacolect.h	/^	DWORD	m_dwDataLen;			\/\/实际长度，如果没有压缩，则与m_dwOrgLen一样$/;"	m	struct:DC_RAWDATA
m_dwDecStop	datacolect.h	/^	DWORD	m_dwDecStop;		\/\/跌停$/;"	m	struct:STK_STATIC
m_dwDelayConnectTime	datacolect.h	/^	DWORD	m_dwDelayConnectTime;	\/\/等待时间，如果错误类型为SERVER_NOTREADY，而且m_dwDelayConnectTime不为0，则等待这么多秒时间再次连接$/;"	m	struct:DC_READY
m_dwDid	datacolect.h	/^	DWORD m_dwDid;\/\/数据did号$/;"	m	struct:DC_DSCRC
m_dwDid	datacolect.h	/^	DWORD m_dwDid;\/\/数据did号$/;"	m	struct:DC_DSDID
m_dwDid	datacolect.h	/^	DWORD m_dwDid;\/\/数据did号$/;"	m	struct:DC_DSLEN
m_dwDidNum	datacolect.h	/^	DWORD m_dwDidNum;\/\/did个数$/;"	m	struct:DC_DSDATA
m_dwExtra	datacolect.h	/^	DWORD	m_dwExtra;			\/\/额外标识，由每一类数据自己定义，对于滚动资讯、跑马灯则表示YYYYMMDD格式的文件日期$/;"	m	struct:DC_XML
m_dwHigh	datacolect.h	/^	DWORD	m_dwHigh;			\/\/最高$/;"	m	struct:STK_DYNA
m_dwIEPrice	datacolect.h	/^	DWORD	m_dwIEPrice;	\/\/平衡价$/;"	m	struct:STK_HKDYNA
m_dwIntAccruDate	datacolect.h	/^			DWORD	m_dwIntAccruDate;	\/\/	起息日，YYYYMMDD$/;"	m	struct:STK_STATICEx::__anon5::__anon9
m_dwKey	datacolect.h	/^	DWORD	m_dwKey[2];		\/\/加密公钥$/;"	m	struct:DC_REQPASS
m_dwLastClose	datacolect.h	/^	DWORD	m_dwLastClose;		\/\/昨收$/;"	m	struct:STK_STATIC
m_dwLastDayOI	datacolect.h	/^			DWORD	m_dwLastDayOI;			\/\/昨日持仓量$/;"	m	struct:STK_STATICEx::__anon5::__anon11
m_dwLastTradeDate	datacolect.h	/^			DWORD	m_dwLastTradeDate;\/\/最后交易日，目前为空，做预留用$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_dwLen	datacolect.h	/^	DWORD m_dwLen;\/\/did号模板长度$/;"	m	struct:DC_DSLEN
m_dwLow	datacolect.h	/^	DWORD	m_dwLow;			\/\/最低$/;"	m	struct:STK_DYNA
m_dwMaturityDate	datacolect.h	/^			DWORD	m_dwMaturityDate;	\/\/	到期日,YYYYMMDD$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_dwMaturityDate	datacolect.h	/^			DWORD	m_dwMaturityDate;	\/\/	到期日,YYYYMMDD$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_dwMaturityDate	datacolect.h	/^			DWORD	m_dwMaturityDate;	\/\/	到期日,YYYYMMDD$/;"	m	struct:STK_STATICEx::__anon5::__anon9
m_dwNew	datacolect.h	/^	DWORD	m_dwNew;			\/\/最新$/;"	m	struct:STK_DYNA
m_dwOpen	datacolect.h	/^	DWORD	m_dwOpen;			\/\/开盘$/;"	m	struct:STK_DYNA
m_dwOpenInterest	datacolect.h	/^	DWORD	m_dwOpenInterest;		\/\/持仓量(期货期指特有)$/;"	m	struct:STK_DYNA
m_dwOrderNum	datacolect.h	/^	UINT24	m_dwOrderNum[2];		\/\/委托单数量，买入\/卖出$/;"	m	struct:SZ_L2_ORDER_STAT
m_dwOrgLen	datacolect.h	/^	DWORD	m_dwOrgLen;				\/\/m_cData原始长度$/;"	m	struct:DC_RAWDATA
m_dwPrice	datacolect.h	/^	DWORD	m_dwPrice;			\/\/成交价格$/;"	m	struct:SH_L2_REPORT
m_dwPrice	datacolect.h	/^	DWORD	m_dwPrice;			\/\/委托价格$/;"	m	struct:SH_L2_BIG_WD
m_dwQueue	datacolect.h	/^	DWORD	m_dwQueue[1];	\/\/总数量由数据头长度决定$/;"	m	struct:DC_SHL2_QUEUE
m_dwReserved	datacolect.h	/^	DWORD	m_dwReserved;		\/\/保留，置为0$/;"	m	struct:DC_GENERAL
m_dwSellPrice	datacolect.h	/^	DWORD	m_dwSellPrice[5];		\/\/委卖价格$/;"	m	struct:STK_DYNA
m_dwSellPrice	datacolect.h	/^	DWORD	m_dwSellPrice[SHL2_MMP_SIZE];	\/\/委卖价6-10$/;"	m	struct:SH_L2_MMPEX
m_dwSellVol	datacolect.h	/^	DWORD	m_dwSellVol[5];			\/\/委卖量$/;"	m	struct:STK_DYNA
m_dwSellVol	datacolect.h	/^	DWORD	m_dwSellVol[SHL2_MMP_SIZE];		\/\/委卖量6-10$/;"	m	struct:SH_L2_MMPEX
m_dwSerialNo	datacolect.h	/^	DWORD	m_dwSerialNo;			\/\/序号，采数端从0开始递增，级联传送时候可以根据序号得到那一个序号之后的文件需要重新传送$/;"	m	struct:DC_NEWS
m_dwSettlePrice	datacolect.h	/^	DWORD	m_dwSettlePrice;		\/\/结算价(期货期指现货特有)$/;"	m	struct:STK_DYNA
m_dwSourceLen	datacolect.h	/^	DWORD m_dwSourceLen;	\/\/源数据长度$/;"	m	struct:ZLIB_HEAD
m_dwStaticLabVersion	datacolect.h	/^	DWORD	m_dwStaticLabVersion;	\/\/静态库版本，如果服务器的静态库版本号最新，就不需要发送静态数据$/;"	m	struct:DC_READY
m_dwTextLen	datacolect.h	/^	DWORD	m_dwTextLen;			\/\/正文长度$/;"	m	struct:DC_NEWS
m_dwTickCount	datacolect.h	/^	DWORD	m_dwTickCount;			\/\/累计成交笔数$/;"	m	struct:STK_DYNA
m_dwVersion	datacolect.h	/^	DWORD	m_dwVersion;			\/\/数据版本$/;"	m	struct:DC_RAWDATA
m_dwVersion	datacolect.h	/^	DWORD	m_dwVersion;	\/\/静态数据版本,每次静态数据发生变化则必须增加数值,每个行情源最好有一个相对独立的高位，这样不同行情源就不会有相同的版本,0x80000000$/;"	m	struct:DC_STKSTATIC
m_dwVolume	datacolect.h	/^	DWORD	m_dwVolume;			\/\/成交量$/;"	m	struct:SH_L2_REPORT
m_dwWidthdrawVol	datacolect.h	/^	DWORD	m_dwWidthdrawVol;	\/\/撤单量$/;"	m	struct:SH_L2_ACCU_WD
m_dwWidthdrawVol	datacolect.h	/^	DWORD	m_dwWidthdrawVol;	\/\/撤单量$/;"	m	struct:SH_L2_BIG_WD
m_dwfAsset	datacolect.h	/^			float	m_dwfAsset;			\/\/净资产$/;"	m	struct:STK_STATICEx::__anon5::__anon12
m_encyType	datacolect.h	/^	DC_ENCY_TYPE m_encyType;$/;"	m	struct:DC_REQPASS
m_equitySpec	datacolect.h	/^		} m_equitySpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon6
m_errCode	datacolect.h	/^	} m_errCode;				\/\/错误码$/;"	m	struct:DC_READY	typeref:enum:DC_READY::DC_ERROR
m_fAccruedInt	datacolect.h	/^			float	m_fAccruedInt;		\/\/	应计利息$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_fAccruedInt	datacolect.h	/^			float	m_fAccruedInt;		\/\/	应计利息,***$/;"	m	struct:STK_STATICEx::__anon5::__anon9
m_fBalance	datacolect.h	/^			float	m_fBalance;			\/\/  流通余额$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_fCashDividend	datacolect.h	/^			float	m_fCashDividend;	\/\/	每股红利$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_fCnvtRatio	datacolect.h	/^			float	m_fCnvtRatio;		\/\/  兑换\/行权比例$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_fCnvtRatio	datacolect.h	/^			float	m_fCnvtRatio;		\/\/  兑换\/行权比例$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_fCouponRate	datacolect.h	/^			float	m_fCouponRate;		\/\/	利率$/;"	m	struct:STK_STATICEx::__anon5::__anon9
m_fFaceValue	datacolect.h	/^			float	m_fFaceValue;		\/\/	面值$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_fFaceValue	datacolect.h	/^			float	m_fFaceValue;		\/\/	面值$/;"	m	struct:STK_STATICEx::__anon5::__anon7
m_fFaceValue	datacolect.h	/^			float	m_fFaceValue;		\/\/	面值$/;"	m	struct:STK_STATICEx::__anon5::__anon9
m_fIOPV	datacolect.h	/^			float	m_fIOPV;			\/\/	IOPV净值,仅对ETF,LOF有效，***$/;"	m	struct:STK_STATICEx::__anon5::__anon7
m_fIssuePrice	datacolect.h	/^			float	m_fIssuePrice;		\/\/	发行价$/;"	m	struct:STK_STATICEx::__anon5::__anon9
m_fLastSettlePrice	datacolect.h	/^			float	m_fLastSettlePrice;		\/\/昨日结算价$/;"	m	struct:STK_STATICEx::__anon5::__anon11
m_fProfit	datacolect.h	/^			float	m_fProfit;			\/\/	每股收益$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_fStrikePrice	datacolect.h	/^			float	m_fStrikePrice;		\/\/	行权价格$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_fStrikePrice	datacolect.h	/^			float	m_fStrikePrice;		\/\/	行权价格$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_fTotalIssued	datacolect.h	/^			float	m_fTotalIssued;		\/\/	总股本$/;"	m	struct:STK_STATICEx::__anon5::__anon7
m_fundSpec	datacolect.h	/^		} m_fundSpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon7
m_futureSpec	datacolect.h	/^		} m_futureSpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon11
m_groupAuth	datacolect.h	/^	DZH_AUT_GROUP	m_groupAuth[DZH_AUT_GROUP_SIZE];		\/\/组分类，共有8组可以使用，可以设置0-8个组授权，有效组必须放在前面，无效组m_wData==0$/;"	m	struct:DZH_AUTHORIZE
m_instruct	datacolect.h	/^	} m_instruct;				\/\/指令$/;"	m	struct:DC_READY	typeref:enum:DC_READY::DC_INSTRUCT
m_mAllBuyVol	datacolect.h	/^	MWORD	m_mAllBuyVol;		\/\/委买总量$/;"	m	struct:SH_L2_MMPEX
m_mAllSellVol	datacolect.h	/^	MWORD	m_mAllSellVol;		\/\/委卖总量$/;"	m	struct:SH_L2_MMPEX
m_mAmount	datacolect.h	/^	MWORD	m_mAmount;			\/\/成交额$/;"	m	struct:STK_DYNA
m_mFloatIssued	datacolect.h	/^	MWORD	m_mFloatIssued;		\/\/流通股本$/;"	m	struct:STK_STATIC
m_mIEVolume	datacolect.h	/^	MWORD	m_mIEVolume;	\/\/平衡量$/;"	m	struct:STK_HKDYNA
m_mInnerVol	datacolect.h	/^	MWORD	m_mInnerVol;		\/\/内盘成交量,<0表示该笔成交为主动卖，>=0表示主动买,绝对值表示内盘成交量$/;"	m	struct:STK_DYNA
m_mTotalIssued	datacolect.h	/^	MWORD	m_mTotalIssued;		\/\/总股本$/;"	m	struct:STK_STATIC
m_mVolume	datacolect.h	/^	MWORD	m_mVolume;			\/\/成交量$/;"	m	struct:STK_DYNA
m_nBuyOrderVol	datacolect.h	/^	MWORD	m_nBuyOrderVol[4];		\/\/买入单量，小、中、大、特大$/;"	m	struct:SZ_L2_ORDER_STAT
m_nCloseTime	datacolect.h	/^	short	m_nCloseTime[8];		\/\/闭市时间$/;"	m	struct:DC_LOGIN
m_nDataSize	datacolect.h	/^	short	m_nDataSize;		\/\/每个数据的长度,对于变长数据,表示每个数据的最大值(0表示没有最大值，任意长度)$/;"	m	struct:DC_GENERAL
m_nDay	datacolect.h	/^	UINT	m_nDay;			\/\/静态库日期，YYYYMMDD$/;"	m	struct:DC_STKSTATIC
m_nFuncAuth	datacolect.h	/^	UINT64			m_nFuncAuth;							\/\/功能授权，每一个bit表示一个功能$/;"	m	struct:DZH_AUTHORIZE
m_nLen	datacolect.h	/^	UINT24	m_nLen;			\/\/包长度,不包含包头$/;"	m	struct:DC_HEAD
m_nLen	datacolect.h	/^	int		m_nLen;				\/\/数据长度$/;"	m	struct:DC_XML
m_nMarketAuth	datacolect.h	/^	UINT64			m_nMarketAuth;							\/\/市场授权，每一个bit表示一个市场$/;"	m	struct:DZH_AUTHORIZE
m_nNum	datacolect.h	/^	int	  m_nNum;			\/\/重发数量,如果为0则表示之后的全部,如果<0则表示取消重发申请,采数机停止重发$/;"	m	struct:DC_RESEND
m_nNum	datacolect.h	/^	short	m_nNum;					\/\/数量$/;"	m	struct:DC_SZL2_ORDER_STAT
m_nNum	datacolect.h	/^	short	m_nNum;			\/\/m_data数量$/;"	m	struct:DC_STKSTATIC
m_nNum	datacolect.h	/^	short	m_nNum;			\/\/数量$/;"	m	struct:DC_SHL2_ACCU_WD
m_nNum	datacolect.h	/^	short	m_nNum;			\/\/数量$/;"	m	struct:DC_SHL2_BIG_WD
m_nNum	datacolect.h	/^	short	m_nNum;			\/\/数量$/;"	m	struct:DC_SHL2_REPORT
m_nNum	datacolect.h	/^	short	m_nNum;$/;"	m	struct:DC_SHL2_MMPEx
m_nNum	datacolect.h	/^	short   m_nNum;$/;"	m	struct:DC_STKDYNA
m_nNumOpenTime	datacolect.h	/^	short	m_nNumOpenTime;			\/\/开市时段数量，决定使用多少个m_nOpenTime,m_nCloseTime$/;"	m	struct:DC_LOGIN
m_nOpenTime	datacolect.h	/^	short	m_nOpenTime[8];			\/\/开市时间，HHMM$/;"	m	struct:DC_LOGIN
m_nPriceDigit	datacolect.h	/^	BYTE	m_nPriceDigit;		\/\/价格最小分辨率，非常重要，每一个DWORD类型的价格都要除以10^m_nPriceDigit才是真正的价格$/;"	m	struct:STK_STATIC
m_nSellOrderVol	datacolect.h	/^	MWORD	m_nSellOrderVol[4];		\/\/卖出单量，小、中、大、特大$/;"	m	struct:SZ_L2_ORDER_STAT
m_nSeq	datacolect.h	/^	UINT24	m_nSeq;			\/\/包序号,深圳全队列已填值,对于did数据\/\/序列号,从初始化以后开始从0增加到0xFFFFFFFF,然后又变成0重新增加$/;"	m	struct:DC_HEAD
m_nTimeZoneBias	datacolect.h	/^	int		m_nTimeZoneBias;		\/\/所处时区$/;"	m	struct:DC_LOGIN
m_nTotalLen	datacolect.h	/^	UINT24	m_nTotalLen;		\/\/包含本数据头在内的数据总长度$/;"	m	struct:DC_GENERAL
m_nUserRunTime	datacolect.h	/^	time_t m_nUserRunTime;\/\/user运行时间$/;"	m	struct:tagServDataInfo
m_nVolUnit	datacolect.h	/^	short	m_nVolUnit;			\/\/成交量单位，每一成交量单位表示多少股$/;"	m	struct:STK_STATIC
m_nWDVol	datacolect.h	/^	MWORD	m_nWDVol[2];			\/\/买入\/卖出撤单量,现在暂时将无法判明方向的总撤单量各送一半$/;"	m	struct:SZ_L2_ORDER_STAT
m_nZmRunTime	datacolect.h	/^	time_t m_nZmRunTime;\/\/zm运行时间$/;"	m	struct:tagServDataInfo
m_pName	datacolect.h	/^	const char* m_pName;$/;"	m	struct:INDUSTRY_CLASIFY
m_processType	datacolect.h	/^	XML_PROCESS	m_processType;	\/\/XML_PROCESS$/;"	m	struct:DC_XML
m_sellBroker	datacolect.h	/^	}m_buyBroker,m_sellBroker;$/;"	m	struct:STK_HKDYNA	typeref:struct:STK_HKDYNA::HK_BROKER
m_strFileName	datacolect.h	/^	char	m_strFileName[14];		\/\/市场内原始数据的唯一标识，服务端也以该文件名保存和处理数据，文件名符合8.3规则$/;"	m	struct:DC_RAWDATA
m_strLabel	datacolect.h	/^	char	m_strLabel[10];		\/\/代码$/;"	m	struct:STK_STATIC
m_strMarketName	datacolect.h	/^	char	m_strMarketName[32];	\/\/市场名称$/;"	m	struct:DC_LOGIN
m_strName	datacolect.h	/^	char	m_strName[32];		\/\/名称$/;"	m	struct:STK_STATIC
m_strPass	datacolect.h	/^	char	m_strPass[24];$/;"	m	struct:DC_USERPASS
m_strUnderLine	datacolect.h	/^			char	m_strUnderLine[12];	\/\/	对应股票,包含市场代码，如SH600000$/;"	m	struct:STK_STATICEx::__anon5::__anon10
m_strUnderLine	datacolect.h	/^			char	m_strUnderLine[12];	\/\/	对应股票,包含市场代码，如SH600000$/;"	m	struct:STK_STATICEx::__anon5::__anon8
m_strUser	datacolect.h	/^	char	m_strUser[16];$/;"	m	struct:DC_USERPASS
m_strXML	datacolect.h	/^	char	m_strXML[1];		\/\/长度为m_nLen;$/;"	m	struct:DC_XML
m_submitTime	datacolect.h	/^	time_t	m_submitTime;		\/\/委托时间$/;"	m	struct:SH_L2_BIG_WD
m_svrAddr	datacolect.h	/^	in_addr	m_svrAddr;		\/\/服务器IP$/;"	m	struct:DC_USERSTAT
m_time	datacolect.h	/^	time_t	m_time;					\/\/数据时间$/;"	m	struct:DC_SZL2_ORDER_STAT
m_time	datacolect.h	/^	time_t	m_time;				\/\/撤单时间$/;"	m	struct:SH_L2_BIG_WD
m_time	datacolect.h	/^	time_t	m_time;				\/\/成交时间$/;"	m	struct:SH_L2_REPORT
m_time	datacolect.h	/^	time_t	m_time;				\/\/成交时间$/;"	m	struct:STK_DYNA
m_time	datacolect.h	/^	time_t	m_time;				\/\/时间$/;"	m	struct:SH_L2_ACCU_WD
m_trustSpec	datacolect.h	/^		} m_trustSpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon12
m_ucMonitorFlag	datacolect.h	/^	unsigned char m_ucMonitorFlag; \/\/监控状态,1为正常状态,2为异常状态,3为无法监控,4为等待数据$/;"	m	struct:tagServDataInfo
m_ucNfsFlag	datacolect.h	/^	unsigned char m_ucNfsFlag;\/\/资讯挂卷状态$/;"	m	struct:tagServDataInfo
m_ucUserFlag	datacolect.h	/^	unsigned char m_ucUserFlag; \/\/用户接入工作状态,1为等待初始化,2为开始初始化,3为初始化完成$/;"	m	struct:tagServDataInfo
m_ucZmFlag	datacolect.h	/^	unsigned char m_ucZmFlag; \/\/转码工作状态,3为等待初始化,1为开始初始化,2为初始化完成$/;"	m	struct:tagServDataInfo
m_ulDlPort	datacolect.h	/^	DWORD m_ulDlPort;\/\/数据下载使用的服务端口$/;"	m	struct:tagServDataInfo
m_ulLicDate	datacolect.h	/^	DWORD m_ulLicDate;\/\/服务到期日$/;"	m	struct:tagServDataInfo
m_ulRunTime	datacolect.h	/^	DWORD m_ulRunTime;\/\/系统运行秒数$/;"	m	struct:tagServDataInfo
m_ulSysBootDate	datacolect.h	/^	DWORD m_ulSysBootDate;\/\/系统启动日期(20050707)$/;"	m	struct:tagServDataInfo
m_ulSysBootTime	datacolect.h	/^	DWORD m_ulSysBootTime;\/\/系统启动时间(095930)$/;"	m	struct:tagServDataInfo
m_ulSysDate	datacolect.h	/^	DWORD m_ulSysDate;\/\/系统日期(20050707)$/;"	m	struct:tagServDataInfo
m_ulSysTime	datacolect.h	/^	DWORD m_ulSysTime;\/\/系统时间(095930)$/;"	m	struct:tagServDataInfo
m_ulUserPort	datacolect.h	/^	DWORD m_ulUserPort;\/\/DzhUserNet使用的服务端口$/;"	m	struct:tagServDataInfo
m_ulUserStartDate	datacolect.h	/^	DWORD m_ulUserStartDate;\/\/user启动日期(20050707)$/;"	m	struct:tagServDataInfo
m_ulUserStartTime	datacolect.h	/^	DWORD m_ulUserStartTime;\/\/user启动时间(095930)$/;"	m	struct:tagServDataInfo
m_ulZmStartDate	datacolect.h	/^	DWORD m_ulZmStartDate;\/\/zm启动日期(20050707)$/;"	m	struct:tagServDataInfo
m_ulZmStartTime	datacolect.h	/^	DWORD m_ulZmStartTime;\/\/zm启动时间(095930)$/;"	m	struct:tagServDataInfo
m_usCpuNum	datacolect.h	/^	unsigned short m_usCpuNum;\/\/系统cpu数目$/;"	m	struct:tagServDataInfo
m_usLicUserNum	datacolect.h	/^	unsigned short m_usLicUserNum;\/\/限制用户数$/;"	m	struct:tagServDataInfo
m_usMaxUserNum	datacolect.h	/^	unsigned short m_usMaxUserNum;\/\/在线历史峰值$/;"	m	struct:tagServDataInfo
m_usMemorySize	datacolect.h	/^	unsigned short m_usMemorySize;\/\/系统内存大小(MBytes)$/;"	m	struct:tagServDataInfo
m_usOnlienUserNum	datacolect.h	/^	unsigned short m_usOnlienUserNum;\/\/在线用户数$/;"	m	struct:tagServDataInfo
m_usSwapSize	datacolect.h	/^	unsigned short m_usSwapSize;\/\/SWAP大小(MBytes)$/;"	m	struct:tagServDataInfo
m_usUseSwapSize	datacolect.h	/^	unsigned short m_usUseSwapSize;\/\/已用SWAP大小(MBytes)$/;"	m	struct:tagServDataInfo
m_usUserCpu	datacolect.h	/^	unsigned short m_usUserCpu;\/\/用户接入进程cpu占用率$/;"	m	struct:tagServDataInfo
m_usUserProcessNum	datacolect.h	/^	unsigned short m_usUserProcessNum;\/\/用户接入进程数$/;"	m	struct:tagServDataInfo
m_usZmCpu	datacolect.h	/^	unsigned short m_usZmCpu;\/\/转码进程CPU占用率$/;"	m	struct:tagServDataInfo
m_usZmProcessNum	datacolect.h	/^	unsigned short m_usZmProcessNum;\/\/转码进程数$/;"	m	struct:tagServDataInfo
m_wAttrib	datacolect.h	/^	WORD	m_wAttrib;		\/\/版本属性$/;"	m	struct:DC_STKSTATIC
m_wAttrib	datacolect.h	/^	WORD	m_wAttrib;		\/\/属性$/;"	m	struct:DC_HEAD
m_wAttrib	datacolect.h	/^	WORD	m_wAttrib;$/;"	m	struct:DC_NEWS
m_wBrokerNo	datacolect.h	/^		WORD	m_wBrokerNo[40];$/;"	m	struct:STK_HKDYNA::HK_BROKER
m_wBuyOrderNum	datacolect.h	/^	WORD	m_wBuyOrderNum[5];$/;"	m	struct:STK_HKDYNA
m_wCode	datacolect.h	/^	WORD m_wCode;$/;"	m	struct:INDUSTRY_CLASIFY
m_wData	datacolect.h	/^	WORD	m_wData;$/;"	m	struct:DZH_AUT_GROUP
m_wDataID	datacolect.h	/^	WORD	m_wDataID;			\/\/数据ID$/;"	m	struct:DC_GENERAL
m_wDynaSeq	datacolect.h	/^	WORD	m_wDynaSeq;		\/\/动态行情序列号，用于客户端转发$/;"	m	struct:DC_STKDYNA
m_wIndustry	datacolect.h	/^			WORD	m_wIndustry;		\/\/	行业'A' -- 'M',参见 industryClasify$/;"	m	struct:STK_STATICEx::__anon5::__anon6
m_wLastRcvSeq	datacolect.h	/^	UINT24 m_wLastRcvSeq;		\/\/采数机行情变化次数，每一个股票行情发生变化，该数据加1，行情初始化后该数据清0$/;"	m	struct:DC_KEEPALIVE
m_wLastSeq	datacolect.h	/^	int m_wLastSeq;\/\/目前收到的变化次数$/;"	m	struct:tagStatSingleHqsInfo
m_wLow	datacolect.h	/^	WORD m_wLow;$/;"	m	struct:UINT24
m_wMarket	datacolect.h	/^	WORD	m_wMarket;				\/\/市场，对于无市场的数据，则为0，需要推送的无市场数据则为'WN',即0x574E$/;"	m	struct:DC_RAWDATA
m_wMarket	datacolect.h	/^	WORD	m_wMarket;				\/\/市场代码$/;"	m	struct:DC_LOGIN
m_wMarket	datacolect.h	/^	WORD	m_wMarket;			\/\/市场$/;"	m	struct:DC_GENERAL
m_wMarket	datacolect.h	/^	WORD	m_wMarket;			\/\/市场代码，无市场的数据填0$/;"	m	struct:DC_XML
m_wNum	datacolect.h	/^	WORD	m_wNum;				\/\/数量$/;"	m	struct:DC_GENERAL
m_wNumBroker	datacolect.h	/^		WORD	m_wNumBroker;$/;"	m	struct:STK_HKDYNA::HK_BROKER
m_wPriority	datacolect.h	/^	WORD	m_wPriority;			\/\/优先级，表明该行请源的好坏，0最高，0xFFFF最低$/;"	m	struct:DC_LOGIN
m_wSellOrderNum	datacolect.h	/^	WORD	m_wSellOrderNum[5];$/;"	m	struct:STK_HKDYNA
m_wStkID	datacolect.h	/^	WORD	m_wStkID;				\/\/股票ID$/;"	m	struct:SZ_L2_ORDER_STAT
m_wStkID	datacolect.h	/^	WORD	m_wStkID;			$/;"	m	struct:SH_L2_REPORT
m_wStkID	datacolect.h	/^	WORD	m_wStkID;			\/\/本市场内唯一标示,在本市场内的序号$/;"	m	struct:STK_STATIC
m_wStkID	datacolect.h	/^	WORD	m_wStkID;			\/\/股票ID$/;"	m	struct:SH_L2_ACCU_WD
m_wStkID	datacolect.h	/^	WORD	m_wStkID;			\/\/股票ID$/;"	m	struct:SH_L2_MMPEX
m_wStkID	datacolect.h	/^	WORD	m_wStkID;			\/\/股票ID$/;"	m	struct:STK_DYNA
m_wStkID	datacolect.h	/^	WORD	m_wStkID;$/;"	m	struct:SH_L2_BIG_WD
m_wStock	datacolect.h	/^	WORD	m_wStock[1];		\/\/m_wNum个,如果m_wStock==0xFFFF，表示该数据不与任何股票关联$/;"	m	struct:DC_GENERAL
m_wSvrPort	datacolect.h	/^	WORD	m_wSvrPort;		\/\/服务器端口$/;"	m	struct:DC_USERSTAT
m_wTitleLen	datacolect.h	/^	WORD	m_wTitleLen;			\/\/标题长度$/;"	m	struct:DC_NEWS
m_warrantSpec	datacolect.h	/^		} m_warrantSpec;$/;"	m	union:STK_STATICEx::__anon5	typeref:struct:STK_STATICEx::__anon5::__anon8
main_hqs_flag	datacolect.h	/^	int main_hqs_flag;\/\/-1没有主行情源,0为第一个优先级行情源为主行情源,以此类推最大值为3$/;"	m	struct:tagStatHqsInfo
market_code	datacolect.h	/^	char market_code[3];\/\/市场代码$/;"	m	struct:tagStatHqsInfo
online_user_num	datacolect.h	/^	int online_user_num;\/\/在线用户数$/;"	m	struct:tagUserType
online_user_num	datacolect.h	/^	int online_user_num;\/\/在线用户数$/;"	m	struct:tagUserVer
operator =	datacolect.h	/^	void operator=(DWORD dw){Set(dw);}$/;"	f	struct:UINT24
operator ==	datacolect.h	/^	BOOL operator==(DWORD dw) const {return Get()==dw;}$/;"	f	struct:UINT24
operator DWORD	datacolect.h	/^	operator DWORD() const {return Get();}$/;"	f	struct:UINT24
osname	datacolect.h	/^	char osname[32];\/\/操作系统名称版本号$/;"	m	struct:tagServDataInfo
pos	datacolect.h	/^	WORD pos;\/\/位置相对于前一个状态$/;"	m	struct:InOrder
rec	datacolect.h	/^	BYTE rec:3;\/\/保留$/;"	m	struct:DC_DIDHead
recv	datacolect.h	/^	BYTE recv:5;\/\/$/;"	m	struct:DC_DSDID
tagServDataInfo	datacolect.h	/^typedef struct tagServDataInfo$/;"	s
tagStatHqsInfo	datacolect.h	/^typedef struct tagStatHqsInfo$/;"	s
tagStatSingleHqsInfo	datacolect.h	/^typedef struct tagStatSingleHqsInfo$/;"	s
tagUserType	datacolect.h	/^typedef struct tagUserType$/;"	s
tagUserVer	datacolect.h	/^typedef struct tagUserVer$/;"	s
type	datacolect.h	/^	BYTE type;\/\/为0增单,为1部分成交,为2完全成交,为3撤单			$/;"	m	struct:InOrder
valid_market_num	datacolect.h	/^	int valid_market_num;\/\/有效市场数目$/;"	m	struct:tagServDataInfo
valid_user_type_num	datacolect.h	/^	int valid_user_type_num;$/;"	m	struct:tagServDataInfo
valid_user_ver_num	datacolect.h	/^	int valid_user_ver_num;$/;"	m	struct:tagServDataInfo
ver	datacolect.h	/^	short ver;$/;"	m	struct:tagUserVer
vol	datacolect.h	/^	DWORD vol;\/\/数量,股$/;"	m	struct:InOrder
CLINT_CLOSEDATE	datatype.h	/^	CLINT_CLOSEDATE,\/\/1069$/;"	e	enum:CLN_TYPE
CLINT_CLOSEFLAG	datatype.h	/^	CLINT_CLOSEFLAG,\/\/1070$/;"	e	enum:CLN_TYPE
CLINT_L2STAT	datatype.h	/^	CLINT_L2STAT,	\/\/Level2统计,1068$/;"	e	enum:CLN_TYPE
CLINT_LOGIN	datatype.h	/^	CLINT_LOGIN,\/\/响应客户端请求,1036$/;"	e	enum:CLN_TYPE
CLINT_LOGIN_Pass	datatype.h	/^	CLINT_LOGIN_Pass,\/\/经典版登录成功,1066$/;"	e	enum:CLN_TYPE
CLINT_LOGIN_V313	datatype.h	/^	CLINT_LOGIN_V313,\/\/v313版登录,1055$/;"	e	enum:CLN_TYPE
CLINT_LOGIN_V401	datatype.h	/^	CLINT_LOGIN_V401,\/\/1060$/;"	e	enum:CLN_TYPE
CLINT_LOGIN_V500	datatype.h	/^	CLINT_LOGIN_V500,\/\/1062$/;"	e	enum:CLN_TYPE
CLINT_REDIRECT	datatype.h	/^	CLINT_REDIRECT,\/\/1073$/;"	e	enum:CLN_TYPE
CLINT_STKSORT	datatype.h	/^	CLINT_STKSORT,	\/\/请求版排序,1067$/;"	e	enum:CLN_TYPE
CLINT_SYSMSG	datatype.h	/^	CLINT_SYSMSG,\/\/1071$/;"	e	enum:CLN_TYPE
CLINT_UPDOWN	datatype.h	/^	CLINT_UPDOWN,\/\/发送指数涨跌家数,1037$/;"	e	enum:CLN_TYPE
CLINT_XML	datatype.h	/^	CLINT_XML,\/\/1072$/;"	e	enum:CLN_TYPE
CLNT_CREPORT	datatype.h	/^	CLNT_CREPORT,\/\/1040$/;"	e	enum:CLN_TYPE
CLNT_DAYDATA	datatype.h	/^	CLNT_DAYDATA,\/\/1030$/;"	e	enum:CLN_TYPE
CLNT_DAYKCQ	datatype.h	/^	CLNT_DAYKCQ,\/\/日线除权,1034$/;"	e	enum:CLN_TYPE
CLNT_DAYKMINE	datatype.h	/^	CLNT_DAYKMINE,\/\/日线地雷标题,1035$/;"	e	enum:CLN_TYPE
CLNT_FULLDYN	datatype.h	/^	CLNT_FULLDYN,\/\/完整动态压缩包,1027$/;"	e	enum:CLN_TYPE
CLNT_FULLDYNA	datatype.h	/^	CLNT_FULLDYNA,\/\/1075$/;"	e	enum:CLN_TYPE
CLNT_FULLSTATICCRC	datatype.h	/^	CLNT_FULLSTATICCRC = 1024,\/\/完整静态压缩包用CRC		XXXXXXX$/;"	e	enum:CLN_TYPE
CLNT_FULLSTATICZLIB	datatype.h	/^	CLNT_FULLSTATICZLIB,\/\/完整静态压缩包用ZLIB,1025$/;"	e	enum:CLN_TYPE
CLNT_HKDYNA	datatype.h	/^	CLNT_HKDYNA,\/\/1052$/;"	e	enum:CLN_TYPE
CLNT_INSTATIC	datatype.h	/^	CLNT_INSTATIC,\/\/1074$/;"	e	enum:CLN_TYPE
CLNT_INTDYNA	datatype.h	/^	CLNT_INTDYNA,\/\/关注股票动态行情,1063$/;"	e	enum:CLN_TYPE
CLNT_L2DAYSTAT	datatype.h	/^	CLNT_L2DAYSTAT, \/\/Level2日线统计数据,1056$/;"	e	enum:CLN_TYPE
CLNT_L2DAYSTAT_OLD	datatype.h	/^	CLNT_L2DAYSTAT_OLD,\/\/Level2日线统计数据(不再使用，兼容目的),1053$/;"	e	enum:CLN_TYPE
CLNT_L2MINSTAT	datatype.h	/^	CLNT_L2MINSTAT,		\/\/Level2分时统计数据,1047$/;"	e	enum:CLN_TYPE
CLNT_L2ODRSTAT	datatype.h	/^	CLNT_L2ODRSTAT,		\/\/Level2逐笔逐单统计数据,1049$/;"	e	enum:CLN_TYPE
CLNT_L2STAT_TODAY	datatype.h	/^	CLNT_L2STAT_TODAY,\/\/当日全部龙虎看盘,1059$/;"	e	enum:CLN_TYPE
CLNT_L2_ACCU_WD	datatype.h	/^	CLNT_L2_ACCU_WD,\/\/累计撤单(买卖合并),1044$/;"	e	enum:CLN_TYPE
CLNT_L2_WD	datatype.h	/^	CLNT_L2_WD,\/\/即时撤单(买卖合并),1043$/;"	e	enum:CLN_TYPE
CLNT_MIN1DATA	datatype.h	/^	CLNT_MIN1DATA,\/\/1032$/;"	e	enum:CLN_TYPE
CLNT_MIN5DATA	datatype.h	/^	CLNT_MIN5DATA,\/\/1031$/;"	e	enum:CLN_TYPE
CLNT_MINDATA	datatype.h	/^	CLNT_MINDATA,\/\/分时,1033$/;"	e	enum:CLN_TYPE
CLNT_MMPEX	datatype.h	/^	CLNT_MMPEX,\/\/最新压缩扩展买卖盘数据,1041$/;"	e	enum:CLN_TYPE
CLNT_NOTICE	datatype.h	/^	CLNT_NOTICE,\/\/1057$/;"	e	enum:CLN_TYPE
CLNT_NOTICESTAT	datatype.h	/^	CLNT_NOTICESTAT,\/\/短线精灵统计,1058$/;"	e	enum:CLN_TYPE
CLNT_NOTICE_OLD	datatype.h	/^	CLNT_NOTICE_OLD,\/\/提示信息(短线精灵)(不再使用，兼容目的),1054$/;"	e	enum:CLN_TYPE
CLNT_PRICETABLE	datatype.h	/^	CLNT_PRICETABLE,	\/\/分价表,1046$/;"	e	enum:CLN_TYPE
CLNT_PUSHINI	datatype.h	/^	CLNT_PUSHINI,\/\/根据条件推送不同的文件,1045$/;"	e	enum:CLN_TYPE
CLNT_QUEUE	datatype.h	/^	CLNT_QUEUE,\/\/最新队列,1042$/;"	e	enum:CLN_TYPE
CLNT_QUE_MTX	datatype.h	/^	CLNT_QUE_MTX,		\/\/队列矩阵,1048$/;"	e	enum:CLN_TYPE
CLNT_RAWFILES	datatype.h	/^	CLNT_RAWFILES,\/\/1077$/;"	e	enum:CLN_TYPE
CLNT_RELATESTK	datatype.h	/^	CLNT_RELATESTK,\/\/1050$/;"	e	enum:CLN_TYPE
CLNT_SINGLEDYN	datatype.h	/^	CLNT_SINGLEDYN,\/\/个股动态压缩包,1028 $/;"	e	enum:CLN_TYPE
CLNT_SINGLESTATIC	datatype.h	/^	CLNT_SINGLESTATIC,\/\/个股静态压缩包(只包含算CRC的部分)  XXXXXXX,1026$/;"	e	enum:CLN_TYPE
CLNT_SINGLETICK	datatype.h	/^	CLNT_SINGLETICK,\/\/个股TICK包,1029$/;"	e	enum:CLN_TYPE
CLNT_SPECSORT	datatype.h	/^	CLNT_SPECSORT,\/\/特殊排序数据,1065$/;"	e	enum:CLN_TYPE
CLNT_STATIC_ONLYHEAD	datatype.h	/^	CLNT_STATIC_ONLYHEAD,\/\/1076$/;"	e	enum:CLN_TYPE
CLNT_STKWD	datatype.h	/^	CLNT_STKWD,\/\/1039$/;"	e	enum:CLN_TYPE
CLNT_TOPWD	datatype.h	/^	CLNT_TOPWD,\/\/1038$/;"	e	enum:CLN_TYPE
CLN_TYPE	datatype.h	/^enum CLN_TYPE$/;"	g
PTOPSERVINFO	datatype.h	/^	PTOPSERVINFO,\/\/ptopservinfo 信息,1061$/;"	e	enum:CLN_TYPE
PUSH_TYPEMASK	datatype.h	/^	PUSH_TYPEMASK,\/\/分类信息推送,1064$/;"	e	enum:CLN_TYPE
ZLIB_STATICEX	datatype.h	/^	ZLIB_STATICEX,\/\/1051$/;"	e	enum:CLN_TYPE
__DATATYPE_H	datatype.h	2;"	d
ARGS_ERR	ds_dat.h	/^	ARGS_ERR=-1,\/\/参数非法$/;"	e	enum:__anon13
BMT_TYPE	ds_dat.h	/^	enum BMT_TYPE\/\/相关类型$/;"	g	struct:CidField
BitCodeField	ds_dat.h	/^struct BitCodeField$/;"	s
CBID_ERR	ds_dat.h	/^	CBID_ERR=-42,$/;"	e	enum:__anon13
CLASS_NODATA_ERR	ds_dat.h	/^	CLASS_NODATA_ERR=-14,\/\/该对象还没初始化过$/;"	e	enum:__anon13
CidField	ds_dat.h	/^struct CidField$/;"	s
CidFieldInfo	ds_dat.h	/^struct CidFieldInfo$/;"	s
CidInfo	ds_dat.h	/^struct CidInfo$/;"	s
Cids	ds_dat.h	/^struct Cids$/;"	s
CircularBufferArgs	ds_dat.h	/^struct CircularBufferArgs$/;"	s
CodeBitIds	ds_dat.h	/^struct CodeBitIds$/;"	s
CodeBitInfo	ds_dat.h	/^struct CodeBitInfo$/;"	s
DID_VAL_ERR	ds_dat.h	/^	DID_VAL_ERR=-8,\/\/did值非法$/;"	e	enum:__anon13
DRVVER_VAL_ERR	ds_dat.h	/^	DRVVER_VAL_ERR=-34,$/;"	e	enum:__anon13
DidName	ds_dat.h	/^struct DidName$/;"	s
DidXmlHead	ds_dat.h	/^struct DidXmlHead$/;"	s
DidXmlInfo	ds_dat.h	/^struct DidXmlInfo$/;"	s
Dids	ds_dat.h	/^struct Dids$/;"	s
EQUAL	ds_dat.h	/^		EQUAL = 5,				\/\/跟后面bmbv取值字段相等的前一条记录相关$/;"	e	enum:CidField::BMT_TYPE
ExSH_L2_REPORT	ds_dat.h	/^struct ExSH_L2_REPORT$/;"	s
ExSH_L2_REPORTV2	ds_dat.h	/^struct ExSH_L2_REPORTV2$/;"	s
FIELD_TYPE	ds_dat.h	/^enum FIELD_TYPE$/;"	g
FULLPUSH_VAL_ERR	ds_dat.h	/^	FULLPUSH_VAL_ERR=-39,$/;"	e	enum:__anon13
GMTMINTIME_ERR	ds_dat.h	/^	GMTMINTIME_ERR=-46,$/;"	e	enum:__anon13
ID_ERROR	ds_dat.h	/^	ID_ERROR=-22,$/;"	e	enum:__anon13
IsBitPos	ds_dat.h	/^	BOOL IsBitPos() const {return m_cCode=='P';}$/;"	f	struct:BitCodeField
IsOriginalData	ds_dat.h	/^	BOOL IsOriginalData() const {return  (m_cCode=='Q');}$/;"	f	struct:BitCodeField
JUncopyable	ds_dat.h	/^	JUncopyable(){};$/;"	f	class:JUncopyable
JUncopyable	ds_dat.h	/^class JUncopyable$/;"	c
KEY_POS_ERR	ds_dat.h	/^	KEY_POS_ERR=-13,\/\/stkid关键字不在记录头一个位置$/;"	e	enum:__anon13
KEY_TYPE_ERR	ds_dat.h	/^	KEY_TYPE_ERR=-12,\/\/stkid关键字数据类型不为unsigned int$/;"	e	enum:__anon13
LAST	ds_dat.h	/^		LAST = 1,				\/\/跟相同关键字的前一条记录bmav值ID字段相关$/;"	e	enum:CidField::BMT_TYPE
LastArgs	ds_dat.h	/^struct LastArgs$/;"	s
MALLOC_ERR	ds_dat.h	/^	MALLOC_ERR=-9,\/\/分配内存失败$/;"	e	enum:__anon13
MAXMIN_ERR	ds_dat.h	/^	MAXMIN_ERR=-10,\/\/maxsize不是minsize的整数倍$/;"	e	enum:__anon13
MAXSEQCODELEN	ds_dat.h	/^const int MAXSEQCODELEN = 32;\/\/股票代码最大长度$/;"	v
MAX_FIELDS_NUM	ds_dat.h	/^const int MAX_FIELDS_NUM = 1024;\/\/每个did个里每级每组字段最大数目$/;"	v
MAX_FIELD_NAME	ds_dat.h	/^const int MAX_FIELD_NAME = 32;\/\/字段名称最大长度$/;"	v
MAX_ORULES_LEN	ds_dat.h	/^const int MAX_ORULES_LEN = 32;$/;"	v
MAX_TYPE_NAME	ds_dat.h	/^const int MAX_TYPE_NAME = 16;\/\/数据类型名称最大长度$/;"	v
MSeqIdx	ds_dat.h	/^	struct MSeqIdx$/;"	s
MemOffsetLen	ds_dat.h	/^struct MemOffsetLen$/;"	s
MmpBs	ds_dat.h	/^struct MmpBs$/;"	s
NOW	ds_dat.h	/^		NOW = 3,				\/\/跟本记录bmav值ID字段相关$/;"	e	enum:CidField::BMT_TYPE
NO_ARGS_ELM_ERR	ds_dat.h	/^	NO_ARGS_ELM_ERR=-37,$/;"	e	enum:__anon13
NO_CBID_ERR	ds_dat.h	/^	NO_CBID_ERR=-43,$/;"	e	enum:__anon13
NO_CBITS_ELM_ERR	ds_dat.h	/^	NO_CBITS_ELM_ERR=-23,$/;"	e	enum:__anon13
NO_CB_ERROR	ds_dat.h	/^	NO_CB_ERROR=-24,$/;"	e	enum:__anon13
NO_CD_ERROR	ds_dat.h	/^	NO_CD_ERROR=-28,$/;"	e	enum:__anon13
NO_CIDFIELD_ERR	ds_dat.h	/^	NO_CIDFIELD_ERR=-41,$/;"	e	enum:__anon13
NO_CIDINFO_ERR	ds_dat.h	/^	NO_CIDINFO_ERR=-40,$/;"	e	enum:__anon13
NO_CIDS_ELM_ERR	ds_dat.h	/^	NO_CIDS_ELM_ERR=-19,\/\/cids下无数据$/;"	e	enum:__anon13
NO_CID_ELM_ERR	ds_dat.h	/^	NO_CID_ELM_ERR=-35,$/;"	e	enum:__anon13
NO_CID_ERR	ds_dat.h	/^	NO_CID_ERR=-20,$/;"	e	enum:__anon13
NO_CL_ERROR	ds_dat.h	/^	NO_CL_ERROR=-25,$/;"	e	enum:__anon13
NO_CODE_ERROR	ds_dat.h	/^	NO_CODE_ERROR=-27,$/;"	e	enum:__anon13
NO_CSTRS_ELM_ERR	ds_dat.h	/^	NO_CSTRS_ELM_ERR=-30,$/;"	e	enum:__anon13
NO_DATAS_ELM_ERR	ds_dat.h	/^	NO_DATAS_ELM_ERR=-4,\/\/datas下无数据$/;"	e	enum:__anon13
NO_DATAS_NODE_ERR	ds_dat.h	/^	NO_DATAS_NODE_ERR=-3,\/\/无datas节$/;"	e	enum:__anon13
NO_DATA_ELM_ERR	ds_dat.h	/^	NO_DATA_ELM_ERR=-6,\/\/data下无数据$/;"	e	enum:__anon13
NO_DATA_NODE_ERR	ds_dat.h	/^	NO_DATA_NODE_ERR=-5,\/\/无data节$/;"	e	enum:__anon13
NO_DB_ERROR	ds_dat.h	/^	NO_DB_ERROR=-29,$/;"	e	enum:__anon13
NO_DIDS_ATTR_ERR	ds_dat.h	/^	NO_DIDS_ATTR_ERR=-15,\/\/无dids节$/;"	e	enum:__anon13
NO_DIDS_ELM_ERR	ds_dat.h	/^	NO_DIDS_ELM_ERR=-16,\/\/\/dids下无数据$/;"	e	enum:__anon13
NO_DID_ATTR_ERR	ds_dat.h	/^	NO_DID_ATTR_ERR=-7,\/\/无did字段$/;"	e	enum:__anon13
NO_DL_ERROR	ds_dat.h	/^	NO_DL_ERROR=-26,$/;"	e	enum:__anon13
NO_DRVVER_ATTR_ERR	ds_dat.h	/^	NO_DRVVER_ATTR_ERR=-33,$/;"	e	enum:__anon13
NO_FIELDS_ATTR_ERR	ds_dat.h	/^	NO_FIELDS_ATTR_ERR=-17,\/\/无fields节$/;"	e	enum:__anon13
NO_FIELDS_ELM_ERR	ds_dat.h	/^	NO_FIELDS_ELM_ERR=-18,\/\/fields下无数据$/;"	e	enum:__anon13
NO_FULLPUSH_ATTR_ERR	ds_dat.h	/^	NO_FULLPUSH_ATTR_ERR=-38,$/;"	e	enum:__anon13
NO_HDIDS_ATTR_ERR	ds_dat.h	/^	NO_HDIDS_ATTR_ERR=-48,\/\/无hdids节$/;"	e	enum:__anon13
NO_HDIDS_ELM_ERR	ds_dat.h	/^	NO_HDIDS_ELM_ERR=-49,\/\/\/hdids下无数据$/;"	e	enum:__anon13
NO_KEY_FIELD	ds_dat.h	/^	NO_KEY_FIELD=-11,\/\/没有关键字段$/;"	e	enum:__anon13
NO_NAME_ERR	ds_dat.h	/^	NO_NAME_ERR=-21,$/;"	e	enum:__anon13
NO_RFIELDS_ELM_ERR	ds_dat.h	/^	NO_RFIELDS_ELM_ERR=-36,$/;"	e	enum:__anon13
NO_STRID_ERR	ds_dat.h	/^	NO_STRID_ERR=-31,$/;"	e	enum:__anon13
NO_STR_ERROR	ds_dat.h	/^	NO_STR_ERROR=-32,$/;"	e	enum:__anon13
PARSE_ERR	ds_dat.h	/^	PARSE_ERR=-2,\/\/xml文件解析失败$/;"	e	enum:__anon13
PREV	ds_dat.h	/^		PREV = 2,				\/\/跟一个数据包里前面的一条记录bmav值ID字段相关$/;"	e	enum:CidField::BMT_TYPE
SHL2_EXMMPBS_DAT	ds_dat.h	/^const int SHL2_EXMMPBS_DAT = 100000;$/;"	v
SHL2_EXZB_DAT	ds_dat.h	/^const int SHL2_EXZB_DAT = 100001;$/;"	v
STATICDAY	ds_dat.h	/^		STATICDAY = 6,			\/\/跟静态数据里的日期相关$/;"	e	enum:CidField::BMT_TYPE
STKID	ds_dat.h	13;"	d
STR	ds_dat.h	/^		STR = 4,				\/\/后面bmav值的字符串列表里匹配$/;"	e	enum:CidField::BMT_TYPE
SeqArgs	ds_dat.h	/^struct SeqArgs$/;"	s
SeqBufArgs	ds_dat.h	/^struct SeqBufArgs$/;"	s
SeqCodeIndex	ds_dat.h	/^struct SeqCodeIndex$/;"	s
SeqDatHead	ds_dat.h	/^struct SeqDatHead$/;"	s
SeqDidFixHead	ds_dat.h	/^struct SeqDidFixHead$/;"	s
SeqFilter	ds_dat.h	/^struct SeqFilter$/;"	s
SeqFixHead	ds_dat.h	/^struct SeqFixHead$/;"	s
SeqIdx	ds_dat.h	/^	struct SeqIdx$/;"	s
SeqIdxHead	ds_dat.h	/^struct SeqIdxHead$/;"	s
SeqMemHead	ds_dat.h	/^struct SeqMemHead$/;"	s
SeqMemIdxHead	ds_dat.h	/^	struct SeqMemIdxHead$/;"	s
SeqNumArgs	ds_dat.h	/^struct SeqNumArgs$/;"	s
SinTableLastAddress	ds_dat.h	/^struct SinTableLastAddress$/;"	s
StrIds	ds_dat.h	/^struct StrIds$/;"	s
StrList	ds_dat.h	/^struct StrList$/;"	s
TABLES_NUM_ERR	ds_dat.h	/^	TABLES_NUM_ERR=-44,$/;"	e	enum:__anon13
TIMELEN_ERR	ds_dat.h	/^	TIMELEN_ERR=-45,$/;"	e	enum:__anon13
UPDATEDATATYPE	ds_dat.h	/^	enum UPDATEDATATYPE$/;"	g	struct:SeqFilter
UserArgs	ds_dat.h	/^struct UserArgs$/;"	s
VAL	ds_dat.h	/^		VAL = 0,				\/\/跟后面bmav的具体取值相关,BmaV默认值为0$/;"	e	enum:CidField::BMT_TYPE
WEEKDAY_ERR	ds_dat.h	/^	WEEKDAY_ERR=-47,$/;"	e	enum:__anon13
WeekDayTime	ds_dat.h	/^struct WeekDayTime$/;"	s
WeekTime	ds_dat.h	/^struct WeekTime$/;"	s
__DS_DAT_H	ds_dat.h	2;"	d
append	ds_dat.h	/^		append=1,$/;"	e	enum:SeqFilter::UPDATEDATATYPE
arg	ds_dat.h	/^	int arg;$/;"	m	struct:UserArgs
code	ds_dat.h	/^	char code[MAXSEQCODELEN];$/;"	m	struct:SeqCodeIndex
dbyte	ds_dat.h	/^	dbyte = 5,$/;"	e	enum:FIELD_TYPE
dchar	ds_dat.h	/^	dchar = 1,$/;"	e	enum:FIELD_TYPE
ddtime	ds_dat.h	/^	ddtime = 11,$/;"	e	enum:FIELD_TYPE
did	ds_dat.h	/^	unsigned int did;\/\/did$/;"	m	struct:ds_did_info
dint16	ds_dat.h	/^	dint16 = 2,$/;"	e	enum:FIELD_TYPE
dint32	ds_dat.h	/^	dint32 = 3,$/;"	e	enum:FIELD_TYPE
dint64	ds_dat.h	/^	dint64 = 4,$/;"	e	enum:FIELD_TYPE
dpfloat	ds_dat.h	/^	dpfloat = 10,$/;"	e	enum:FIELD_TYPE
drepeat	ds_dat.h	/^	drepeat = 0,$/;"	e	enum:FIELD_TYPE
drvver	ds_dat.h	/^	unsigned int drvver;\/\/驱动版本号$/;"	m	struct:ds_did_info
ds_did_info	ds_dat.h	/^struct ds_did_info$/;"	s
ds_field_info	ds_dat.h	/^struct ds_field_info$/;"	s
ds_type	ds_dat.h	/^struct ds_type$/;"	s
duint16	ds_dat.h	/^	duint16 = 6,$/;"	e	enum:FIELD_TYPE
duint24	ds_dat.h	/^	duint24 = 7,$/;"	e	enum:FIELD_TYPE
duint32	ds_dat.h	/^	duint32 = 8,$/;"	e	enum:FIELD_TYPE
duint64	ds_dat.h	/^	duint64 = 9,$/;"	e	enum:FIELD_TYPE
dvfloat	ds_dat.h	/^	dvfloat = 12,$/;"	e	enum:FIELD_TYPE
first_head	ds_dat.h	/^struct first_head$/;"	s
idpos	ds_dat.h	/^	int idpos;\/\/对应存贮模板的字段位置$/;"	m	struct:ds_field_info
index	ds_dat.h	/^	int index;\/\/该级需要比较的字段索引值,默认取值-1$/;"	m	struct:LastArgs
index_key	ds_dat.h	/^	unsigned char index_key;\/\/为1表示,可以根据关键字段直接定位$/;"	m	struct:ds_did_info
index_key	ds_dat.h	/^	unsigned char index_key;\/\/为1表示,可以根据关键字段直接定位$/;"	m	struct:ds_field_info
logfd	ds_dat.h	/^	int logfd;$/;"	m	struct:UserArgs
mCFInfo	ds_dat.h	/^	CidFieldInfo mCFInfo[3];\/\/0为一般字段,1为pfloat小数部分的压缩或者dtime毫秒数部分的压缩,2为dtime微秒数部分的压缩$/;"	m	struct:CidField
mCidInfo	ds_dat.h	/^	CidInfo  mCidInfo[1];\/\/相关方式信息$/;"	m	struct:Cids
mCloseTime	ds_dat.h	/^	WeekTime mCloseTime;$/;"	m	struct:SeqArgs
mCodeBitInfo	ds_dat.h	/^	CodeBitInfo  mCodeBitInfo[1];\/\/相关方式信息$/;"	m	struct:CodeBitIds
mDidName	ds_dat.h	/^	DidName mDidName[1];$/;"	m	struct:Dids
mLoadTime	ds_dat.h	/^	WeekTime mLoadTime;$/;"	m	struct:SeqArgs
mSeqBufArgs	ds_dat.h	/^	SeqBufArgs mSeqBufArgs;$/;"	m	struct:SeqArgs
mSeqBufArgs	ds_dat.h	/^	SeqBufArgs mSeqBufArgs;\/\/内存参数$/;"	m	struct:SeqDidFixHead
mSeqFilter	ds_dat.h	/^	SeqFilter mSeqFilter;$/;"	m	struct:SeqArgs
mSeqIdx	ds_dat.h	/^		SeqIdx mSeqIdx;$/;"	m	struct:MSeqIdx
mSeqNumArgs	ds_dat.h	/^	SeqNumArgs mSeqNumArgs;$/;"	m	struct:SeqArgs
mSeqNumArgs	ds_dat.h	/^	SeqNumArgs mSeqNumArgs;\/\/数目参数$/;"	m	struct:SeqDidFixHead
mStockHead	ds_dat.h	/^	stock_head mStockHead;\/\/总表更新数据$/;"	m	struct:first_head
mStrList	ds_dat.h	/^	StrList  mStrList[1];\/\/相关方式信息$/;"	m	struct:StrIds
mWeekDayTime	ds_dat.h	/^	WeekDayTime mWeekDayTime[7];$/;"	m	struct:WeekTime
m_byteDatType	ds_dat.h	/^	unsigned char m_byteDatType:7;\/\/0切片数据，1序列数据$/;"	m	struct:ds_did_info
m_byteEqual	ds_dat.h	/^	unsigned char m_byteEqual;\/\/该级字段长度，类型，位置完全一模一样为1$/;"	m	struct:ds_did_info
m_byteEqual	ds_dat.h	/^	unsigned char m_byteEqual;\/\/该级字段长度，类型，位置完全一模一样为1$/;"	m	struct:ds_field_info
m_byteFullPush	ds_dat.h	/^	unsigned char m_byteFullPush:1;\/\/全推，为1表示需要全推$/;"	m	struct:ds_did_info
m_byteInOutFlag	ds_dat.h	/^	BYTE m_byteInOutFlag;$/;"	m	struct:ExSH_L2_REPORT
m_byteInOutFlag	ds_dat.h	/^	BYTE m_byteInOutFlag;$/;"	m	struct:ExSH_L2_REPORTV2
m_byteMaxBits	ds_dat.h	/^	unsigned char m_byteMaxBits;\/\/编码最大长度$/;"	m	struct:ds_did_info
m_byteNum	ds_dat.h	/^	BYTE m_byteNum;$/;"	m	struct:WeekTime
m_byteReadFalg	ds_dat.h	/^	BYTE m_byteReadFalg;\/\/为0可读，为1不可读，需从内存访问$/;"	m	struct:SeqMemHead
m_byteSaveFlag	ds_dat.h	/^	unsigned char m_byteSaveFlag;\/\/表示客户端该级是否需求存贮$/;"	m	struct:ds_field_info
m_byteSortFlag	ds_dat.h	/^	unsigned char m_byteSortFlag;$/;"	m	struct:ds_field_info
m_byteTypeIndex	ds_dat.h	/^	unsigned char m_byteTypeIndex;\/\/数据类型索引$/;"	m	struct:ds_field_info
m_byteTypeSize	ds_dat.h	/^	unsigned char m_byteTypeSize;$/;"	m	struct:ds_type
m_byteTypeSize	ds_dat.h	/^	unsigned char m_byteTypeSize;\/\/数据类型大小$/;"	m	struct:ds_field_info
m_cBlockCmp	ds_dat.h	/^	BYTE m_cBlockCmp;\/\/一般为0，如果为1，需要对后面的字段与0做比较编码$/;"	m	struct:CidFieldInfo
m_cBmType	ds_dat.h	/^	BYTE m_cBmType;\/\/bmt$/;"	m	struct:CidFieldInfo
m_cCode	ds_dat.h	/^	char	m_cCode;		\/\/编码方法	  $/;"	m	struct:BitCodeField
m_cDatTypeName	ds_dat.h	/^	char m_cDatTypeName[MAX_FIELD_NAME+1];$/;"	m	struct:SeqFilter
m_cFunName	ds_dat.h	/^	char m_cFunName[MAX_FIELD_NAME+1];$/;"	m	struct:SeqFilter
m_cKeyFieldName	ds_dat.h	/^	char m_cKeyFieldName[MAX_FIELD_NAME+1];$/;"	m	struct:SeqFilter
m_cName	ds_dat.h	/^	char m_cName[MAX_FIELD_NAME+1];\/\/CID名称$/;"	m	struct:CidInfo
m_cName	ds_dat.h	/^	char m_cName[MAX_FIELD_NAME+1];\/\/CodeBit名称$/;"	m	struct:CodeBitInfo
m_cName	ds_dat.h	/^	char m_cName[MAX_FIELD_NAME+1];\/\/DID名称$/;"	m	struct:DidName
m_cName	ds_dat.h	/^	char m_cName[MAX_FIELD_NAME+1];\/\/DID名称$/;"	m	struct:ds_did_info
m_cName	ds_dat.h	/^	char m_cName[MAX_FIELD_NAME+1];\/\/strid名称$/;"	m	struct:StrList
m_cName	ds_dat.h	/^	char m_cName[MAX_FIELD_NAME+1];\/\/字段名称$/;"	m	struct:ds_field_info
m_cOperRules	ds_dat.h	/^	char m_cOperRules[MAX_ORULES_LEN];\/\/x2-x1,bmor$/;"	m	struct:CidFieldInfo
m_cOperType	ds_dat.h	/^	BYTE m_cOperType;\/\/m_cOperRules$/;"	m	struct:CidFieldInfo
m_cTypeLabel	ds_dat.h	/^	char m_cTypeLabel[MAX_TYPE_NAME];$/;"	m	struct:ds_type
m_cWeekDay	ds_dat.h	/^	char m_cWeekDay;$/;"	m	struct:WeekDayTime
m_dtEndTime	ds_dat.h	/^		dzh_time_t m_dtEndTime;\/\/数据结束时间$/;"	m	struct:SeqIdx
m_dtGmtMinTimes	ds_dat.h	/^	dzh_time_t m_dtGmtMinTimes;\/\/最小起始时间$/;"	m	struct:ds_did_info
m_dtStartTime	ds_dat.h	/^		dzh_time_t m_dtStartTime;\/\/数据起始时间$/;"	m	struct:SeqIdx
m_dtTime	ds_dat.h	/^	dzh_time_t m_dtTime;\/\/成交时间$/;"	m	struct:ExSH_L2_REPORT
m_dtTime	ds_dat.h	/^	dzh_time_t m_dtTime;\/\/成交时间$/;"	m	struct:ExSH_L2_REPORTV2
m_dtUpdateTime	ds_dat.h	/^	dzh_time_t m_dtUpdateTime;$/;"	m	struct:MmpBs
m_dwAllVRecSize	ds_dat.h	/^	unsigned int m_dwAllVRecSize;\/\/一条记录长度$/;"	m	struct:ds_did_info
m_dwBlkNum	ds_dat.h	/^	DWORD m_dwBlkNum;\/\/目前数据块数$/;"	m	struct:SeqDatHead
m_dwBlkSize	ds_dat.h	/^	DWORD m_dwBlkSize;\/\/每块大小$/;"	m	struct:SeqBufArgs
m_dwBuyCount	ds_dat.h	/^	DWORD m_dwBuyCount[10];$/;"	m	struct:MmpBs
m_dwBuyPriceNum	ds_dat.h	/^	DWORD m_dwBuyPriceNum;$/;"	m	struct:MmpBs
m_dwBuyWithdrawCount	ds_dat.h	/^	DWORD m_dwBuyWithdrawCount;$/;"	m	struct:MmpBs
m_dwCbId	ds_dat.h	/^	DWORD m_dwCbId;\/\/CodeBits ID,cbid$/;"	m	struct:CidFieldInfo
m_dwChangeStkNum	ds_dat.h	/^	DWORD m_dwChangeStkNum;\/\/有效股票数目$/;"	m	struct:SeqMemHead
m_dwCid	ds_dat.h	/^	DWORD m_dwCid;\/\/CID$/;"	m	struct:CidInfo
m_dwCid	ds_dat.h	/^	DWORD m_dwCid;\/\/CID$/;"	m	struct:CodeBitInfo
m_dwCodeCount	ds_dat.h	/^	DWORD	m_dwCodeCount;	\/\/频度$/;"	m	struct:BitCodeField
m_dwCrc	ds_dat.h	/^		DWORD m_dwCrc;\/\/该块数据的crc$/;"	m	struct:SeqIdx
m_dwCrc	ds_dat.h	/^	DWORD m_dwCrc;$/;"	m	struct:DidXmlInfo
m_dwCrc	ds_dat.h	/^	DWORD m_dwCrc;\/\/模板crc$/;"	m	struct:SeqDatHead
m_dwCrc	ds_dat.h	/^	DWORD m_dwCrc;\/\/模板crc$/;"	m	struct:SeqIdxHead
m_dwDCid	ds_dat.h	/^	DWORD m_dwDCid;\/\/当找不到比较的记录采用的压缩方式$/;"	m	struct:CidInfo
m_dwDatBitSize	ds_dat.h	/^		DWORD m_dwDatBitSize;\/\/该块数据压缩后的位长度$/;"	m	struct:SeqIdx
m_dwDid	ds_dat.h	/^	DWORD m_dwDid;$/;"	m	struct:DidName
m_dwDid	ds_dat.h	/^	DWORD m_dwDid;$/;"	m	struct:DidXmlInfo
m_dwDid	ds_dat.h	/^	DWORD m_dwDid;$/;"	m	struct:SinTableLastAddress
m_dwDid	ds_dat.h	/^	DWORD m_dwDid;\/\/did$/;"	m	struct:SeqDatHead
m_dwDid	ds_dat.h	/^	DWORD m_dwDid;\/\/数据did$/;"	m	struct:SeqDidFixHead
m_dwDiskSavePartsNum	ds_dat.h	/^	DWORD m_dwDiskSavePartsNum;\/\/最大存盘的索引条数$/;"	m	struct:SeqBufArgs
m_dwFid	ds_dat.h	/^	DWORD m_dwFid;\/\/id$/;"	m	struct:CidFieldInfo
m_dwFiledsNum	ds_dat.h	/^	DWORD m_dwFiledsNum;\/\/字段数目$/;"	m	struct:CidInfo
m_dwId	ds_dat.h	/^		DWORD m_dwId;\/\/位置,从1开始,对于所有数据来说$/;"	m	struct:SeqIdx
m_dwIndex	ds_dat.h	/^	DWORD m_dwIndex;$/;"	m	struct:SeqCodeIndex
m_dwLastBufSize	ds_dat.h	/^	DWORD m_dwLastBufSize;$/;"	m	struct:SeqNumArgs
m_dwLastMaxNum	ds_dat.h	/^	DWORD m_dwLastMaxNum;$/;"	m	struct:SeqNumArgs
m_dwLastPartSize	ds_dat.h	/^	DWORD m_dwLastPartSize;$/;"	m	struct:SeqNumArgs
m_dwLen	ds_dat.h	/^	DWORD m_dwLen;$/;"	m	struct:DidXmlInfo
m_dwMaxCodeNum	ds_dat.h	/^	DWORD m_dwMaxCodeNum;\/\/最大股票数目$/;"	m	struct:SeqNumArgs
m_dwMemMaxIndexNum	ds_dat.h	/^	DWORD m_dwMemMaxIndexNum;\/\/内存里保存的最大索引条数包括预留部分$/;"	m	struct:SeqNumArgs
m_dwMemSaveRevPartsNum	ds_dat.h	/^	DWORD m_dwMemSaveRevPartsNum;\/\/预留多少条索引的内存，一条索引指向一个固定时间段的数据，比如日线可以把90天划为一个固定时间段，一起压缩$/;"	m	struct:SeqBufArgs
m_dwNum	ds_dat.h	/^		DWORD m_dwNum;\/\/该块保存的数据数目$/;"	m	struct:SeqIdx
m_dwNum	ds_dat.h	/^		DWORD m_dwNum;\/\/实际索引数目$/;"	m	struct:SeqMemIdxHead
m_dwNum	ds_dat.h	/^	DWORD m_dwNum;\/\/编码数目$/;"	m	struct:CodeBitInfo
m_dwNum	ds_dat.h	/^	DWORD m_dwNum;\/\/记录数$/;"	m	struct:SeqDatHead
m_dwNum	ds_dat.h	/^	DWORD m_dwNum;\/\/数目$/;"	m	struct:SeqIdxHead
m_dwOffset	ds_dat.h	/^	unsigned int m_dwOffset;\/\/该字段距离记录头的长度$/;"	m	struct:ds_field_info
m_dwPosNum	ds_dat.h	/^	DWORD m_dwPosNum;\/\/存贮位置数目$/;"	m	struct:CircularBufferArgs
m_dwPutBitSize	ds_dat.h	/^		DWORD m_dwPutBitSize;\/\/该索引块数据在最后一块blk里已使用的位数$/;"	m	struct:MSeqIdx
m_dwPutBitStartPosByte	ds_dat.h	/^		DWORD m_dwPutBitStartPosByte;\/\/该索引块数据在最后一块blk里开始起始位置,如果最后一块blk只保存了一个索引块，为0$/;"	m	struct:MSeqIdx
m_dwROffset	ds_dat.h	/^	unsigned int m_dwROffset;\/\/该字段距离记录头的长度,包括R类型字段偏移地址$/;"	m	struct:ds_field_info
m_dwRRecSize	ds_dat.h	/^	unsigned int m_dwRRecSize;\/\/一条记录长度，每个R类型字段再加上一个偏移地址长度8字节$/;"	m	struct:ds_did_info
m_dwRRecSize	ds_dat.h	/^	unsigned int m_dwRRecSize;\/\/一条记录长度，每个R类型字段再加上一个偏移地址长度8字节$/;"	m	struct:ds_field_info
m_dwRcntBufSize	ds_dat.h	/^	DWORD m_dwRcntBufSize;$/;"	m	struct:SeqNumArgs
m_dwRcntPartNum	ds_dat.h	/^	DWORD m_dwRcntPartNum;$/;"	m	struct:SeqNumArgs
m_dwRcntPartSzie	ds_dat.h	/^	DWORD m_dwRcntPartSzie;$/;"	m	struct:SeqNumArgs
m_dwRecsNum	ds_dat.h	/^	unsigned int m_dwRecsNum;\/\/目前已有记录数，关键字为stkid,stkid最大值，否则就是已有记录数目$/;"	m	struct:first_head
m_dwSellCount	ds_dat.h	/^	DWORD m_dwSellCount[10];$/;"	m	struct:MmpBs
m_dwSellPriceNum	ds_dat.h	/^	DWORD m_dwSellPriceNum;$/;"	m	struct:MmpBs
m_dwSellWithdrawCount	ds_dat.h	/^	DWORD m_dwSellWithdrawCount;$/;"	m	struct:MmpBs
m_dwSeq	ds_dat.h	/^	DWORD m_dwSeq;$/;"	m	struct:SinTableLastAddress
m_dwStkID	ds_dat.h	/^	DWORD m_dwStkID;			$/;"	m	struct:ExSH_L2_REPORT
m_dwStkID	ds_dat.h	/^	DWORD m_dwStkID;			$/;"	m	struct:ExSH_L2_REPORTV2
m_dwStkID	ds_dat.h	/^	DWORD m_dwStkID;$/;"	m	struct:MmpBs
m_dwStrId	ds_dat.h	/^	DWORD m_dwStrId;\/\/strid$/;"	m	struct:StrList
m_dwVRecSize	ds_dat.h	/^	unsigned int m_dwVRecSize;\/\/一条记录长度$/;"	m	struct:ds_did_info
m_dwVRecSize	ds_dat.h	/^	unsigned int m_dwVRecSize;\/\/一条记录长度$/;"	m	struct:ds_field_info
m_dwVolume	ds_dat.h	/^	DWORD m_dwVolume;\/\/成交量$/;"	m	struct:ExSH_L2_REPORT
m_dwXmlCrc	ds_dat.h	/^	DWORD m_dwXmlCrc;\/\/did模板crc$/;"	m	struct:SeqDidFixHead
m_moDat	ds_dat.h	/^	MemOffsetLen m_moDat;\/\/全部数据内存,相对于基地址,m_pBase$/;"	m	struct:SeqMemHead
m_moIdx	ds_dat.h	/^	MemOffsetLen m_moIdx;\/\/idx索引内存，相对于基地址,m_pBase$/;"	m	struct:SeqMemHead
m_moLast	ds_dat.h	/^	MemOffsetLen m_moLast;\/\/最近一次变化内存,相对于基地址,m_pBase$/;"	m	struct:SeqMemHead
m_moRcnt	ds_dat.h	/^	MemOffsetLen m_moRcnt;\/\/最近n笔变化内存,相对于基地址,m_pBase$/;"	m	struct:SeqMemHead
m_moSeqMem	ds_dat.h	/^	MemOffsetLen m_moSeqMem;$/;"	m	struct:SeqDidFixHead
m_nCodeLen	ds_dat.h	/^	char	m_nCodeLen;		\/\/编码长度$/;"	m	struct:BitCodeField
m_nDataLen	ds_dat.h	/^	char	m_nDataLen;		\/\/编码后跟随的数据长度,单位Bit，最大64Bit$/;"	m	struct:BitCodeField
m_nMaxTimeMins	ds_dat.h	/^	int m_nMaxTimeMins;\/\/数据最大时间分钟数$/;"	m	struct:SeqFilter
m_nMinTimeMins	ds_dat.h	/^	int m_nMinTimeMins;\/\/数据最小时间分钟数，可以为负数$/;"	m	struct:SeqFilter
m_nTodayIndex	ds_dat.h	/^	int m_nTodayIndex;\/\/每次增加码表都要重新赋值和排序$/;"	m	struct:SeqCodeIndex
m_nUpdateDatType	ds_dat.h	/^	int m_nUpdateDatType;\/\/数据更新方式$/;"	m	struct:SeqFilter
m_pfPrice	ds_dat.h	/^	PFloat m_pfPrice;\/\/成交价格$/;"	m	struct:ExSH_L2_REPORT
m_pfPrice	ds_dat.h	/^	PFloat m_pfPrice;\/\/成交价格$/;"	m	struct:ExSH_L2_REPORTV2
m_qwBufferSize	ds_dat.h	/^	UINT64 m_qwBufferSize;\/\/存贮区总长度$/;"	m	struct:CircularBufferArgs
m_qwOffset	ds_dat.h	/^	UINT64 m_qwOffset;$/;"	m	struct:DidXmlInfo
m_sKeyFieldPos	ds_dat.h	/^	short m_sKeyFieldPos;\/\/关键字段位置$/;"	m	struct:ds_field_info
m_sKeyFieldPos	ds_dat.h	/^	short m_sKeyFieldPos;\/\/关键字段位置,每级目前只支持一个关键字段$/;"	m	struct:ds_did_info
m_tmTime	ds_dat.h	/^	timemyval m_tmTime;$/;"	m	struct:stock_head
m_uint64Address	ds_dat.h	/^	UINT64 m_uint64Address;\/\/地址$/;"	m	struct:SinTableLastAddress
m_uint64BmaVal	ds_dat.h	/^	UINT64 m_uint64BmaVal;\/\/可能取值:字段id,字符串列表id,实际数值,0xFFFFFFFFFFFFFFFF表示跟静态码表的日期bmav$/;"	m	struct:CidFieldInfo
m_uint64BmbVal	ds_dat.h	/^	UINT64 m_uint64BmbVal;\/\/可能取值:字段id m_vBmType为EQUAL有效bmbv$/;"	m	struct:CidFieldInfo
m_uint64BufLen	ds_dat.h	/^	UINT64 m_uint64BufLen;$/;"	m	struct:SeqFixHead
m_uint64BufSize	ds_dat.h	/^	UINT64 m_uint64BufSize;\/\/数据总内存大小$/;"	m	struct:SeqBufArgs
m_uint64BuyOrderId	ds_dat.h	/^	UINT64 m_uint64BuyOrderId;$/;"	m	struct:ExSH_L2_REPORT
m_uint64BuyOrderId	ds_dat.h	/^	UINT64 m_uint64BuyOrderId;$/;"	m	struct:ExSH_L2_REPORTV2
m_uint64CodeData	ds_dat.h	/^	UINT64	m_uint64CodeData;	\/\/编码数据$/;"	m	struct:BitCodeField
m_uint64DataBias	ds_dat.h	/^	UINT64	m_uint64DataBias;	\/\/编码数据偏移量$/;"	m	struct:BitCodeField
m_uint64FullCompressCurPos	ds_dat.h	/^	UINT64 m_uint64FullCompressCurPos;\/\/全量包当前数据存贮位置+1$/;"	m	struct:first_head
m_uint64FullCompressDatVer	ds_dat.h	/^	UINT64 m_uint64FullCompressDatVer;\/\/全量包当前数据版本号$/;"	m	struct:first_head
m_uint64Len	ds_dat.h	/^	UINT64 m_uint64Len;\/\/长度$/;"	m	struct:MemOffsetLen
m_uint64NewId	ds_dat.h	/^		UINT64 m_uint64NewId;\/\/最新id$/;"	m	struct:SeqMemIdxHead
m_uint64OffSet	ds_dat.h	/^	UINT64 m_uint64OffSet;\/\/偏移位置$/;"	m	struct:repeat_head
m_uint64OffSet	ds_dat.h	/^	UINT64 m_uint64OffSet;\/\/指向第四块已用的内存偏移$/;"	m	struct:SeqMemHead
m_uint64Offset	ds_dat.h	/^		UINT64 m_uint64Offset;\/\/该块数据的内存偏移地址,从m_pJSegBase算起$/;"	m	struct:SeqIdx
m_uint64Offset	ds_dat.h	/^	UINT64 m_uint64Offset;\/\/偏移$/;"	m	struct:MemOffsetLen
m_uint64Offset	ds_dat.h	/^	UINT64 m_uint64Offset;\/\/偏移量，指向具体编码信息$/;"	m	struct:CodeBitInfo
m_uint64Offset	ds_dat.h	/^	UINT64 m_uint64Offset;\/\/偏移量，指向具体的字符串列表$/;"	m	struct:StrList
m_uint64Offset	ds_dat.h	/^	UINT64 m_uint64Offset;\/\/偏移量，指向具体每个字段的压缩相关方式信息$/;"	m	struct:CidInfo
m_uint64Offset	ds_dat.h	/^	UINT64 m_uint64Offset;\/\/偏移量，指向嵌套的字段信息$/;"	m	struct:ds_field_info
m_uint64Segment	ds_dat.h	/^		UINT64 m_uint64Segment;\/\/第一块segment,从m_pJSegBase算起$/;"	m	struct:MSeqIdx
m_uint64SellOrderId	ds_dat.h	/^	UINT64 m_uint64SellOrderId;$/;"	m	struct:ExSH_L2_REPORT
m_uint64SellOrderId	ds_dat.h	/^	UINT64 m_uint64SellOrderId;$/;"	m	struct:ExSH_L2_REPORTV2
m_uint64TableCurOffset	ds_dat.h	/^	UINT64 m_uint64TableCurOffset;\/\/指向目前已分配的位置,单位bytes$/;"	m	struct:table_head
m_uint64TableDataOffset	ds_dat.h	/^	UINT64 m_uint64TableDataOffset;\/\/指向表记录数据信息$/;"	m	struct:table_head
m_uint64TableHeadOffset	ds_dat.h	/^	UINT64 m_uint64TableHeadOffset;\/\/指向first_head$/;"	m	struct:table_head
m_uint64TimeLen	ds_dat.h	/^	UINT64 m_uint64TimeLen;\/\/时间段$/;"	m	struct:ds_did_info
m_uint64TimeSec	ds_dat.h	/^	UINT64 m_uint64TimeSec;\/\/最后更新时间秒$/;"	m	struct:timemyval
m_uint64TimeUSec	ds_dat.h	/^	UINT64 m_uint64TimeUSec;\/\/最后更新时间微秒$/;"	m	struct:timemyval
m_uint64Ver	ds_dat.h	/^	UINT64 m_uint64Ver;\/\/版本号$/;"	m	struct:stock_head
m_uintTableBlockRecsNum	ds_dat.h	/^	unsigned int m_uintTableBlockRecsNum;\/\/表分块记录数目$/;"	m	struct:table_head
m_uintTableBlockSize	ds_dat.h	/^	unsigned int m_uintTableBlockSize;\/\/表分块大小,单位bytes=8+m_uintTableBlockRecsNum*RecSize$/;"	m	struct:table_head
m_uintTableRecsMaxNum	ds_dat.h	/^	unsigned int m_uintTableRecsMaxNum;\/\/表记录最大数目$/;"	m	struct:table_head
m_vfBuyWithdrawAmount	ds_dat.h	/^	VFloat m_vfBuyWithdrawAmount;$/;"	m	struct:MmpBs
m_vfBuyWithdrawVol	ds_dat.h	/^	VFloat m_vfBuyWithdrawVol;$/;"	m	struct:MmpBs
m_vfSellWithdrawAmount	ds_dat.h	/^	VFloat m_vfSellWithdrawAmount;$/;"	m	struct:MmpBs
m_vfSellWithdrawVol	ds_dat.h	/^	VFloat m_vfSellWithdrawVol;$/;"	m	struct:MmpBs
m_vfVolume	ds_dat.h	/^	VFloat m_vfVolume;\/\/成交量$/;"	m	struct:ExSH_L2_REPORTV2
m_wASize	ds_dat.h	/^	unsigned short m_wASize;\/\/数组大小$/;"	m	struct:ds_field_info
m_wAllFieldsNum	ds_dat.h	/^	unsigned short m_wAllFieldsNum;\/\/总字段数目$/;"	m	struct:ds_did_info
m_wCidsNum	ds_dat.h	/^	DWORD m_wCidsNum;\/\/有多少种压缩相关方式,一般有prev,last,now$/;"	m	struct:Cids
m_wCodeBitIdNum	ds_dat.h	/^	DWORD m_wCodeBitIdNum;\/\/有多少种codebitid$/;"	m	struct:CodeBitIds
m_wCodeBits	ds_dat.h	/^	WORD	m_wCodeBits;	\/\/编码$/;"	m	struct:BitCodeField
m_wDidNum	ds_dat.h	/^	WORD m_wDidNum;$/;"	m	struct:SeqFixHead
m_wDidsNum	ds_dat.h	/^	WORD m_wDidsNum;$/;"	m	struct:DidXmlHead
m_wDidsNum	ds_dat.h	/^	WORD m_wDidsNum;$/;"	m	struct:Dids
m_wEndTime	ds_dat.h	/^	WORD m_wEndTime;$/;"	m	struct:WeekDayTime
m_wFieldsNum	ds_dat.h	/^	unsigned short m_wFieldsNum;\/\/嵌套的字段数目,该值为0表示没嵌套$/;"	m	struct:ds_field_info
m_wFieldsNum	ds_dat.h	/^	unsigned short m_wFieldsNum;\/\/字段数目$/;"	m	struct:ds_did_info
m_wId	ds_dat.h	/^	unsigned short m_wId;$/;"	m	struct:ds_field_info
m_wMaxStrLen	ds_dat.h	/^	DWORD m_wMaxStrLen;\/\/最大字符串长度$/;"	m	struct:StrList
m_wSortSecs	ds_dat.h	/^	unsigned short m_wSortSecs;\/\/多少秒排一次序$/;"	m	struct:ds_did_info
m_wStartTime	ds_dat.h	/^	WORD m_wStartTime;$/;"	m	struct:WeekDayTime
m_wStrIdNum	ds_dat.h	/^	DWORD m_wStrIdNum;\/\/有多少个strid$/;"	m	struct:StrIds
m_wStrNum	ds_dat.h	/^	DWORD m_wStrNum;\/\/有多少个字符串$/;"	m	struct:StrList
m_wTablesNum	ds_dat.h	/^	unsigned short m_wTablesNum;\/\/结构体数目，表数目$/;"	m	struct:ds_did_info
num	ds_dat.h	/^	unsigned int num;\/\/数据量$/;"	m	struct:repeat_head
overwrite	ds_dat.h	/^		overwrite=2,$/;"	e	enum:SeqFilter::UPDATEDATATYPE
pF	ds_dat.h	/^	ds_field_info* pF;\/\/该层级字段信息起始位置$/;"	m	struct:LastArgs
pRec	ds_dat.h	/^	char* pRec;\/\/记录该层级起始地址$/;"	m	struct:LastArgs
pRevF	ds_dat.h	/^	ds_field_info* pRevF;\/\/前一级表述该级记录信息的字段，如果为应该取pDidStruct->mDidInfo$/;"	m	struct:LastArgs
repeat_head	ds_dat.h	/^struct repeat_head$/;"	s
seqid	ds_dat.h	/^	DWORD seqid;$/;"	m	struct:UserArgs
stock_head	ds_dat.h	/^struct stock_head$/;"	s
table_head	ds_dat.h	/^struct table_head$/;"	s
tableid	ds_dat.h	/^	unsigned short tableid;\/\/第几个table的$/;"	m	struct:ds_field_info
timemyval	ds_dat.h	/^struct timemyval$/;"	s
~JUncopyable	ds_dat.h	/^	~JUncopyable(){};$/;"	f	class:JUncopyable
BYTE	dscomapi.h	/^typedef unsigned char BYTE;$/;"	t
CDidStructApi	dscomapi.h	/^class COMPRESS_API CDidStructApi:private JUncopyable$/;"	c
CDsCompressApi	dscomapi.h	/^class COMPRESS_API CDsCompressApi:private JUncopyable$/;"	c
COMPRESS_API	dscomapi.h	17;"	d
COMPRESS_API	dscomapi.h	19;"	d
COMPRESS_API	dscomapi.h	21;"	d
LPGetBmData	dscomapi.h	/^typedef char* (*LPGetBmData)(int num,LastArgs* pLastArgs,LastArgs* pNowArgs,DWORD did,CDidStruct* pDidStruct,char* pUserArg,ds_field_info*& pSaveField);$/;"	t
LPSetBmData	dscomapi.h	/^typedef bool (*LPSetBmData)(LastArgs* pNowArgs,DWORD did,CDidStruct* pDidStruct,char* pUserArg,char* pRecBuf);$/;"	t
_DZH_DS_COMPRESS_API_H_	dscomapi.h	9;"	d
ds_crc32_table256	dscomapi.h	/^    static unsigned int ds_crc32_table256[];    \/\/计算crc用$/;"	m	class:CDidStructApi
mDidInfo	dscomapi.h	/^    ds_did_info mDidInfo;   \/\/字段$/;"	m	class:CDidStructApi
m_dwCrc	dscomapi.h	/^    DWORD m_dwCrc;  \/\/模板文件CRC$/;"	m	class:CDidStructApi
m_pCids	dscomapi.h	/^    Cids* m_pCids;  \/\/压缩算法数组$/;"	m	class:CDidStructApi
m_pCodeBitIds	dscomapi.h	/^    CodeBitIds* m_pCodeBitIds;  \/\/压缩编码数组$/;"	m	class:CDidStructApi
m_pDids	dscomapi.h	/^    Dids* m_pDids;  \/\/did列表$/;"	m	class:CDidStructApi
m_pFieldsInfo	dscomapi.h	/^    ds_field_info* m_pFieldsInfo;   \/\/字段数组$/;"	m	class:CDidStructApi
m_pStrIds	dscomapi.h	/^    StrIds* m_pStrIds;  \/\/字符串列表$/;"	m	class:CDidStructApi
AddMicroSecond	dzh_time_t.cpp	/^dzh_time_t& dzh_time_t::AddMicroSecond(UINT32 v)$/;"	f	class:dzh_time_t
AddMilliSecond	dzh_time_t.cpp	/^dzh_time_t& dzh_time_t::AddMilliSecond(WORD v)$/;"	f	class:dzh_time_t
AddSecond	dzh_time_t.cpp	/^dzh_time_t& dzh_time_t::AddSecond(UINT64 v)$/;"	f	class:dzh_time_t
CALC_LEAP_YEAR_NUM	dzh_time_t.cpp	57;"	d	file:
CDzhTimeLock	dzh_time_t.cpp	/^    CDzhTimeLock(){InitializeCriticalSection(&m_Mutex);}$/;"	f	class:CDzhTimeLock
CDzhTimeLock	dzh_time_t.cpp	/^class CDzhTimeLock $/;"	c	file:
CalcDivisbleNum	dzh_time_t.cpp	/^int CalcDivisbleNum(int iStart, int iEnd, int iBase)$/;"	f
DAY_BIAS_1601_1970	dzh_time_t.cpp	65;"	d	file:
DAY_BIAS_1601_1970	dzh_time_t.cpp	73;"	d	file:
DAY_BIAS_1900_1970	dzh_time_t.cpp	66;"	d	file:
DAY_BIAS_1900_1970	dzh_time_t.cpp	74;"	d	file:
DAY_SECOND	dzh_time_t.cpp	61;"	d	file:
DAY_SECOND	dzh_time_t.cpp	69;"	d	file:
DZH_TIME_STR_LEN	dzh_time_t.cpp	46;"	d	file:
DzhTM	dzh_time_t.cpp	/^struct TDzhTimeNumStruct dzh_time_t::DzhTM()$/;"	f	class:dzh_time_t
DzhTM	dzh_time_t.cpp	/^struct TDzhTimeNumStruct dzh_time_t::DzhTM(dzh_time_t& t)$/;"	f	class:dzh_time_t
DzhTimeNumStruct2DzhTime	dzh_time_t.cpp	/^dzh_time_t dzh_time_t::DzhTimeNumStruct2DzhTime(const struct TDzhTimeNumStruct& tTimeStruct)$/;"	f	class:dzh_time_t
IS_LEAP_YEAR	dzh_time_t.cpp	56;"	d	file:
IsDzhTimeStr	dzh_time_t.cpp	/^bool IsDzhTimeStr(const char* pStr, TDzhTimeNumStruct& tNumDzhTime)$/;"	f
IsNumberStrForTime	dzh_time_t.cpp	/^bool IsNumberStrForTime(const char* pStr)$/;"	f
Lock	dzh_time_t.cpp	/^    void Lock(){EnterCriticalSection(&m_Mutex);};$/;"	f	class:CDzhTimeLock
MAX_DZH_TIME_YEAR	dzh_time_t.cpp	48;"	d	file:
MAX_MICROSECOND	dzh_time_t.cpp	50;"	d	file:
MAX_MILLISECOND	dzh_time_t.cpp	49;"	d	file:
MIN_DZH_TIME_YEAR	dzh_time_t.cpp	47;"	d	file:
NANO_SECOND_BIAS_1601_1900	dzh_time_t.cpp	62;"	d	file:
NANO_SECOND_BIAS_1601_1900	dzh_time_t.cpp	70;"	d	file:
SAFE_ATOI	dzh_time_t.cpp	26;"	d	file:
SAFE_MEMCPY	dzh_time_t.cpp	29;"	d	file:
SAFE_STRCPY	dzh_time_t.cpp	27;"	d	file:
SAFE_STRNCPY	dzh_time_t.cpp	28;"	d	file:
SECOND_BIAS_1601_1970	dzh_time_t.cpp	63;"	d	file:
SECOND_BIAS_1601_1970	dzh_time_t.cpp	71;"	d	file:
SECOND_BIAS_1900_1970	dzh_time_t.cpp	64;"	d	file:
SECOND_BIAS_1900_1970	dzh_time_t.cpp	72;"	d	file:
SetMicroSecond	dzh_time_t.cpp	/^dzh_time_t&   dzh_time_t::SetMicroSecond(UINT32 v)$/;"	f	class:dzh_time_t
SetMilliSecond	dzh_time_t.cpp	/^dzh_time_t&   dzh_time_t::SetMilliSecond(WORD v)$/;"	f	class:dzh_time_t
SetSecond	dzh_time_t.cpp	/^dzh_time_t&   dzh_time_t::SetSecond(UINT64 v)$/;"	f	class:dzh_time_t
StringToTime	dzh_time_t.cpp	/^dzh_time_t dzh_time_t::StringToTime(const char* pStr, const char* fmt, short iZoneMinutes\/* = 0*\/)$/;"	f	class:dzh_time_t
SubMicroSecond	dzh_time_t.cpp	/^dzh_time_t& dzh_time_t::SubMicroSecond(UINT32 v)$/;"	f	class:dzh_time_t
SubMilliSecond	dzh_time_t.cpp	/^dzh_time_t& dzh_time_t::SubMilliSecond(WORD v)$/;"	f	class:dzh_time_t
SubSecond	dzh_time_t.cpp	/^dzh_time_t& dzh_time_t::SubSecond(UINT64 v)$/;"	f	class:dzh_time_t
TDzhTimeStrStruct	dzh_time_t.cpp	/^    TDzhTimeStrStruct(){memset(this, 0x0, sizeof(TDzhTimeStrStruct));}$/;"	f	struct:TDzhTimeStrStruct
TDzhTimeStrStruct	dzh_time_t.cpp	/^struct TDzhTimeStrStruct $/;"	s	file:
TM2DzhTime	dzh_time_t.cpp	/^void dzh_time_t::TM2DzhTime(struct tm* tmTime)    $/;"	f	class:dzh_time_t
Time2DzhTime	dzh_time_t.cpp	/^void dzh_time_t::Time2DzhTime(time_t &tTime)$/;"	f	class:dzh_time_t
ToGMTime	dzh_time_t.cpp	/^struct tm* dzh_time_t::ToGMTime(struct tm& tmTime)$/;"	f	class:dzh_time_t
ToLocalTime	dzh_time_t.cpp	/^struct tm* dzh_time_t::ToLocalTime(struct tm& tmTime, short iZoneMinutes\/*=0*\/)$/;"	f	class:dzh_time_t
ToTime	dzh_time_t.cpp	/^time_t dzh_time_t::ToTime()$/;"	f	class:dzh_time_t
UnLock	dzh_time_t.cpp	/^    void UnLock(){LeaveCriticalSection(&m_Mutex);};$/;"	f	class:CDzhTimeLock
VALID_HOUR	dzh_time_t.cpp	53;"	d	file:
VALID_MINUTE	dzh_time_t.cpp	54;"	d	file:
VALID_MONTH	dzh_time_t.cpp	52;"	d	file:
VALID_SECOND	dzh_time_t.cpp	55;"	d	file:
WEEK_DAY_1900_1_1	dzh_time_t.cpp	51;"	d	file:
YEAR_SECOND	dzh_time_t.cpp	60;"	d	file:
YEAR_SECOND	dzh_time_t.cpp	68;"	d	file:
_FormatTimeToString	dzh_time_t.cpp	/^const char* dzh_time_t::_FormatTimeToString(dzh_time_t& tTime$/;"	f	class:dzh_time_t
_GetCurrentTime	dzh_time_t.cpp	/^void dzh_time_t::_GetCurrentTime()$/;"	f	class:dzh_time_t
_StringToDzhTime	dzh_time_t.cpp	/^void dzh_time_t::_StringToDzhTime(const char* pStr, short iZoneMinutes\/*=0*\/)$/;"	f	class:dzh_time_t
day_tab	dzh_time_t.cpp	/^static BYTE day_tab[2][12]={{31,28,31,30,31,30,31,31,30,31,30,31},{31,29,31,30,31,30,31,31,30,31,30,31}}; $/;"	v	file:
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t()$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(UINT32 uDate, UINT32 uTime)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(UINT64 uDzhTime)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(UINT64 uSecFrom1900, WORD uMsec, WORD uUsec)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(const char* pTime\/*=NULL*\/, short iZoneMinutes\/*=0*\/)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(const char* pYear, const char* pMonth, const char* pDay$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(const dzh_time_t& uDzhTime)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(int y, int m, int d, int h, int minute, int s, int ms\/*=0*\/, int us\/*=0*\/, short iZoneMinutes\/*=0*\/)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(struct tm* pTime, short iZoneMinutes\/*=0*\/)$/;"	f	class:dzh_time_t
dzh_time_t	dzh_time_t.cpp	/^dzh_time_t::dzh_time_t(time_t &tTime)$/;"	f	class:dzh_time_t
g_DzhTimeLockXXX	dzh_time_t.cpp	/^CDzhTimeLock g_DzhTimeLockXXX;  \/\/大智慧时间锁$/;"	v
m_Mutex	dzh_time_t.cpp	/^    CRITICAL_SECTION m_Mutex;$/;"	m	class:CDzhTimeLock	file:
operator !=	dzh_time_t.cpp	/^bool dzh_time_t::operator!=(const UINT64& t) const$/;"	f	class:dzh_time_t
operator !=	dzh_time_t.cpp	/^bool dzh_time_t::operator!=(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
operator +	dzh_time_t.cpp	/^dzh_time_t dzh_time_t::operator+(const UINT64& t)$/;"	f	class:dzh_time_t
operator +	dzh_time_t.cpp	/^dzh_time_t dzh_time_t::operator+(const dzh_time_t& t)$/;"	f	class:dzh_time_t
operator +=	dzh_time_t.cpp	/^const dzh_time_t& dzh_time_t::operator+=(const UINT64& t)$/;"	f	class:dzh_time_t
operator +=	dzh_time_t.cpp	/^const dzh_time_t& dzh_time_t::operator+=(const dzh_time_t& t)$/;"	f	class:dzh_time_t
operator -	dzh_time_t.cpp	/^dzh_time_t dzh_time_t::operator-(const UINT64& t)$/;"	f	class:dzh_time_t
operator -	dzh_time_t.cpp	/^dzh_time_t dzh_time_t::operator-(const dzh_time_t& t)$/;"	f	class:dzh_time_t
operator -=	dzh_time_t.cpp	/^const dzh_time_t& dzh_time_t::operator-=(const UINT64& t)$/;"	f	class:dzh_time_t
operator -=	dzh_time_t.cpp	/^const dzh_time_t& dzh_time_t::operator-=(const dzh_time_t& t)$/;"	f	class:dzh_time_t
operator <	dzh_time_t.cpp	/^bool dzh_time_t::operator<(const UINT64& t) const$/;"	f	class:dzh_time_t
operator <	dzh_time_t.cpp	/^bool dzh_time_t::operator<(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
operator <=	dzh_time_t.cpp	/^bool dzh_time_t::operator<=(const UINT64& t) const$/;"	f	class:dzh_time_t
operator <=	dzh_time_t.cpp	/^bool dzh_time_t::operator<=(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
operator =	dzh_time_t.cpp	/^const dzh_time_t& dzh_time_t::operator=(const UINT64& t) const$/;"	f	class:dzh_time_t
operator =	dzh_time_t.cpp	/^const dzh_time_t& dzh_time_t::operator=(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
operator ==	dzh_time_t.cpp	/^bool dzh_time_t::operator==(const UINT64& t) const$/;"	f	class:dzh_time_t
operator ==	dzh_time_t.cpp	/^bool dzh_time_t::operator==(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
operator >	dzh_time_t.cpp	/^bool dzh_time_t::operator>(const UINT64& t) const$/;"	f	class:dzh_time_t
operator >	dzh_time_t.cpp	/^bool dzh_time_t::operator>(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
operator >=	dzh_time_t.cpp	/^bool dzh_time_t::operator>=(const UINT64& t) const$/;"	f	class:dzh_time_t
operator >=	dzh_time_t.cpp	/^bool dzh_time_t::operator>=(const dzh_time_t& t) const$/;"	f	class:dzh_time_t
sDay	dzh_time_t.cpp	/^    char sDay[3];$/;"	m	struct:TDzhTimeStrStruct	file:
sHour	dzh_time_t.cpp	/^    char sHour[3];$/;"	m	struct:TDzhTimeStrStruct	file:
sMinute	dzh_time_t.cpp	/^    char sMinute[3];$/;"	m	struct:TDzhTimeStrStruct	file:
sMonth	dzh_time_t.cpp	/^    char sMonth[3];$/;"	m	struct:TDzhTimeStrStruct	file:
sMsec	dzh_time_t.cpp	/^    char sMsec[4];$/;"	m	struct:TDzhTimeStrStruct	file:
sSecond	dzh_time_t.cpp	/^    char sSecond[3];$/;"	m	struct:TDzhTimeStrStruct	file:
sUsec	dzh_time_t.cpp	/^    char sUsec[4];$/;"	m	struct:TDzhTimeStrStruct	file:
sYear	dzh_time_t.cpp	/^    char sYear[5];$/;"	m	struct:TDzhTimeStrStruct	file:
snprintf	dzh_time_t.cpp	24;"	d	file:
~CDzhTimeLock	dzh_time_t.cpp	/^    ~CDzhTimeLock(){DeleteCriticalSection(&m_Mutex);}$/;"	f	class:CDzhTimeLock
BYTE	dzh_time_t.h	/^typedef unsigned char BYTE;$/;"	t
DZH_TIME_FORMAT_12HOUR	dzh_time_t.h	51;"	d
DZH_TIME_FORMAT_24HOUR	dzh_time_t.h	50;"	d
DZH_TIME_FORMAT_2YEAR	dzh_time_t.h	47;"	d
DZH_TIME_FORMAT_4YEAR	dzh_time_t.h	46;"	d
DZH_TIME_FORMAT_DAY	dzh_time_t.h	49;"	d
DZH_TIME_FORMAT_MINUTE	dzh_time_t.h	52;"	d
DZH_TIME_FORMAT_MONTH	dzh_time_t.h	48;"	d
DZH_TIME_FORMAT_SECOND	dzh_time_t.h	53;"	d
INT64	dzh_time_t.h	/^typedef __int64 INT64;$/;"	t
INT64	dzh_time_t.h	/^typedef long long INT64;$/;"	t
INVALID_DZH_TIME	dzh_time_t.h	32;"	d
INVALID_DZH_TIME	dzh_time_t.h	35;"	d
MAX_DZH_TIME_SECOND	dzh_time_t.h	31;"	d
MAX_DZH_TIME_SECOND	dzh_time_t.h	34;"	d
STR_TIME_FORMAT_1	dzh_time_t.h	54;"	d
STR_TIME_FORMAT_2	dzh_time_t.h	55;"	d
STR_TIME_FORMAT_3	dzh_time_t.h	56;"	d
STR_TIME_FORMAT_4	dzh_time_t.h	57;"	d
TDzhTimeNumStruct	dzh_time_t.h	/^    TDzhTimeNumStruct()$/;"	f	struct:TDzhTimeNumStruct
TDzhTimeNumStruct	dzh_time_t.h	/^    TDzhTimeNumStruct(const TDzhTimeNumStruct& t)$/;"	f	struct:TDzhTimeNumStruct
TDzhTimeNumStruct	dzh_time_t.h	/^struct TDzhTimeNumStruct$/;"	s
UINT32	dzh_time_t.h	/^typedef unsigned int  UINT32;$/;"	t
UINT64	dzh_time_t.h	/^typedef unsigned __int64 UINT64;$/;"	t
UINT64	dzh_time_t.h	/^typedef unsigned long long UINT64;$/;"	t
WORD	dzh_time_t.h	/^typedef unsigned short WORD;$/;"	t
ZONE_MINUTE_UTC000	dzh_time_t.h	75;"	d
ZONE_MINUTE_UTCN100	dzh_time_t.h	74;"	d
ZONE_MINUTE_UTCN1000	dzh_time_t.h	62;"	d
ZONE_MINUTE_UTCN1100	dzh_time_t.h	61;"	d
ZONE_MINUTE_UTCN1200	dzh_time_t.h	60;"	d
ZONE_MINUTE_UTCN200	dzh_time_t.h	73;"	d
ZONE_MINUTE_UTCN300	dzh_time_t.h	72;"	d
ZONE_MINUTE_UTCN330	dzh_time_t.h	71;"	d
ZONE_MINUTE_UTCN400	dzh_time_t.h	70;"	d
ZONE_MINUTE_UTCN430	dzh_time_t.h	69;"	d
ZONE_MINUTE_UTCN500	dzh_time_t.h	68;"	d
ZONE_MINUTE_UTCN600	dzh_time_t.h	67;"	d
ZONE_MINUTE_UTCN700	dzh_time_t.h	66;"	d
ZONE_MINUTE_UTCN800	dzh_time_t.h	65;"	d
ZONE_MINUTE_UTCN900	dzh_time_t.h	64;"	d
ZONE_MINUTE_UTCN930	dzh_time_t.h	63;"	d
ZONE_MINUTE_UTCP100	dzh_time_t.h	76;"	d
ZONE_MINUTE_UTCP1000	dzh_time_t.h	91;"	d
ZONE_MINUTE_UTCP1030	dzh_time_t.h	92;"	d
ZONE_MINUTE_UTCP1100	dzh_time_t.h	93;"	d
ZONE_MINUTE_UTCP1130	dzh_time_t.h	94;"	d
ZONE_MINUTE_UTCP1200	dzh_time_t.h	95;"	d
ZONE_MINUTE_UTCP1245	dzh_time_t.h	96;"	d
ZONE_MINUTE_UTCP1300	dzh_time_t.h	97;"	d
ZONE_MINUTE_UTCP1400	dzh_time_t.h	98;"	d
ZONE_MINUTE_UTCP200	dzh_time_t.h	77;"	d
ZONE_MINUTE_UTCP300	dzh_time_t.h	78;"	d
ZONE_MINUTE_UTCP330	dzh_time_t.h	79;"	d
ZONE_MINUTE_UTCP400	dzh_time_t.h	80;"	d
ZONE_MINUTE_UTCP430	dzh_time_t.h	81;"	d
ZONE_MINUTE_UTCP500	dzh_time_t.h	82;"	d
ZONE_MINUTE_UTCP530	dzh_time_t.h	83;"	d
ZONE_MINUTE_UTCP545	dzh_time_t.h	84;"	d
ZONE_MINUTE_UTCP600	dzh_time_t.h	85;"	d
ZONE_MINUTE_UTCP630	dzh_time_t.h	86;"	d
ZONE_MINUTE_UTCP700	dzh_time_t.h	87;"	d
ZONE_MINUTE_UTCP800	dzh_time_t.h	88;"	d
ZONE_MINUTE_UTCP900	dzh_time_t.h	89;"	d
ZONE_MINUTE_UTCP930	dzh_time_t.h	90;"	d
_DZH_TIME_T_H_	dzh_time_t.h	10;"	d
operator <<	dzh_time_t.h	/^inline std::ostream& operator<<(std::ostream& os, dzh_time_t& t)$/;"	f
uDay	dzh_time_t.h	/^    BYTE uDay;      \/*day from 1-31*\/$/;"	m	struct:TDzhTimeNumStruct
uHour	dzh_time_t.h	/^    BYTE uHour;     \/*hour from 0-23*\/$/;"	m	struct:TDzhTimeNumStruct
uMinute	dzh_time_t.h	/^    BYTE uMinute;   \/*minute from 0-59*\/$/;"	m	struct:TDzhTimeNumStruct
uMonth	dzh_time_t.h	/^    BYTE uMonth;    \/*month from 1-12*\/$/;"	m	struct:TDzhTimeNumStruct
uMsec	dzh_time_t.h	/^    WORD uMsec;     \/*millisecond from 0-999*\/$/;"	m	struct:TDzhTimeNumStruct
uSecond	dzh_time_t.h	/^    BYTE uSecond;   \/*second from 0-59*\/$/;"	m	struct:TDzhTimeNumStruct
uUsec	dzh_time_t.h	/^    WORD uUsec;     \/*microsecond from 0-999*\/$/;"	m	struct:TDzhTimeNumStruct
uWeekDay	dzh_time_t.h	/^    BYTE uWeekDay;  \/*week days since Sunday - [0,6]*\/$/;"	m	struct:TDzhTimeNumStruct
uYear	dzh_time_t.h	/^    WORD uYear;     \/*year, from 0*\/$/;"	m	struct:TDzhTimeNumStruct
ExpandL2MMPEx	extract_dc.cc	/^int ExtractDC::ExpandL2MMPEx(const BYTE* pData,int nDataLen,SH_L2_MMPEX* pMMPExBuf,int& nBufSize)$/;"	f	class:ExtractDC
ExtractData	extract_dc.cc	/^int ExtractDC::ExtractData(int dc_type, const unsigned char *pbufsrc, int bufsizesrc, unsigned char * pbufdes, int bufsizedes, STK_DYNA *pStkDyna, STK_STATIC *pStkStatic)$/;"	f	class:ExtractDC
ExtractDynaData	extract_dc.cc	/^int ExtractDC::ExtractDynaData(const BYTE* pData,int nDataLen,STK_DYNA* pDynaBuf,int& nBufSize,STK_DYNA *pStkDyna,STK_STATIC *pStkStatic)$/;"	f	class:ExtractDC
ExtractDynaStream	extract_dc.cc	/^ BOOL ExtractDC::ExtractDynaStream(CBitStream& stream,STK_DYNA* pDyna,WORD& wStockID,BYTE cVersion,STK_DYNA *pStkDyna,STK_STATIC *pStkStatic,const STK_DYNA* pOldDyna,const STK_STATIC* pStatic)$/;"	f	class:ExtractDC
ExtractStaticData	extract_dc.cc	/^int ExtractDC::ExtractStaticData(const BYTE* pData,int nDataLen,STK_STATIC* pStaticBuf,int& nBufSize)$/;"	f	class:ExtractDC
ExtractStaticStream	extract_dc.cc	/^BOOL ExtractDC::ExtractStaticStream(STK_STATIC* pStatic,WORD& wStockID,DWORD& dwLastLabel)$/;"	f	class:ExtractDC
GetDefaultHKSpread	extract_dc.cc	/^DWORD ExtractDC::GetDefaultHKSpread(DWORD dwPrice)$/;"	f	class:ExtractDC
GetOldDynaByID	extract_dc.cc	/^const struct STK_DYNA* ExtractDC::GetOldDynaByID(STK_DYNA * pStkDyna,WORD index)$/;"	f	class:ExtractDC
GetStkByID	extract_dc.cc	/^const struct STK_STATIC* ExtractDC::GetStkByID(STK_STATIC * pStkStatic, WORD index)$/;"	f	class:ExtractDC
COMPRESS_TYPE	extract_dc.h	/^    enum COMPRESS_TYPE$/;"	g	class:ExtractDC
CUR_DYNACPS_VER	extract_dc.h	14;"	d
DYNA	extract_dc.h	/^		DYNA = 0,			\/\/动态行情$/;"	e	enum:ExtractDC::COMPRESS_TYPE
DYNACPS_VER_0	extract_dc.h	13;"	d
ExtractDC	extract_dc.h	/^	ExtractDC() {$/;"	f	class:ExtractDC
ExtractDC	extract_dc.h	/^class ExtractDC$/;"	c
HasAmount	extract_dc.h	/^	BOOL HasAmount(){return m_cHeadAttr_&CPS_DYNA_HEAD::HAS_AMOUNT ? TRUE : FALSE;}$/;"	f	class:ExtractDC
HasTickCount	extract_dc.h	/^    BOOL HasTickCount(){return m_cHeadAttr_&CPS_DYNA_HEAD::HAS_TICK_COUNT ? TRUE : FALSE;}$/;"	f	class:ExtractDC
IsFExg	extract_dc.h	/^	BOOL IsFExg(){return (m_cHeadAttr_&CPS_DYNA_HEAD::TYPEMASK)==CPS_DYNA_HEAD::FOREIGN_EXG;}$/;"	f	class:ExtractDC
IsFuture	extract_dc.h	/^	BOOL IsFuture(){return (m_cHeadAttr_&CPS_DYNA_HEAD::TYPEMASK)==CPS_DYNA_HEAD::FUTURE;}$/;"	f	class:ExtractDC
IsFutureIndex	extract_dc.h	/^	BOOL IsFutureIndex(){return (m_cHeadAttr_&CPS_DYNA_HEAD::TYPEMASK)==CPS_DYNA_HEAD::FTR_IDX;}$/;"	f	class:ExtractDC
IsHKSec	extract_dc.h	/^	BOOL IsHKSec(){return (m_cHeadAttr_&CPS_DYNA_HEAD::TYPEMASK)==CPS_DYNA_HEAD::HKSEC;}$/;"	f	class:ExtractDC
MONITOR_EXTRACT_DC_H_	extract_dc.h	2;"	d
SEP_DYNA	extract_dc.h	/^		SEP_DYNA			\/\/单独压缩动态行情$/;"	e	enum:ExtractDC::COMPRESS_TYPE
TICK	extract_dc.h	/^		TICK,				\/\/逐笔成交$/;"	e	enum:ExtractDC::COMPRESS_TYPE
amountCode	extract_dc.h	/^static BITCODE amountCode[] =	\/\/非相关压缩 以成交量*最新*每手股数为基准(带符号数)$/;"	v
amountDiffCode	extract_dc.h	/^static BITCODE amountDiffCode[] =	\/\/相关压缩，以上一次的成交额+现手*为最新*每手股数为基准(带符号数)，指数除外$/;"	v
dynaPriceCode	extract_dc.h	/^static BITCODE dynaPriceCode[] =	\/\/非相关压缩价格$/;"	v
dynaPriceDiffCode	extract_dc.h	/^static BITCODE dynaPriceDiffCode[] = \/\/相关压缩价格$/;"	v
hkDiffVolCode	extract_dc.h	/^static BITCODE hkDiffVolCode[] =	\/\/相关压缩量$/;"	v
hkMmpDiffVolCode	extract_dc.h	/^static BITCODE hkMmpDiffVolCode[] =	\/\/相关压缩买卖盘量$/;"	v
hkMmpPosCode	extract_dc.h	/^static BITCODE hkMmpPosCode[] =	\/\/买卖盘位置$/;"	v
hkMmpVolCode	extract_dc.h	/^static BITCODE hkMmpVolCode[] =	\/\/非相关压缩量$/;"	v
hkSpreadCode	extract_dc.h	/^static BITCODE hkSpreadCode[] =	\/\/买卖盘价差$/;"	v
hkStkIDCode	extract_dc.h	/^static BITCODE hkStkIDCode[] =	\/\/StockID$/;"	v
hkVolCode	extract_dc.h	/^static BITCODE hkVolCode[6] =	\/\/非相关压缩量$/;"	v
hkVolZeroCode	extract_dc.h	/^static BITCODE hkVolZeroCode[] =	\/\/成交量0的个数$/;"	v
innerVolCode	extract_dc.h	/^static BITCODE innerVolCode[] =	\/\/内盘量$/;"	v
issudeCode	extract_dc.h	/^static BITCODE 	issudeCode[] = \/\/		流通股本\/总股本$/;"	v
labelCode	extract_dc.h	/^static BITCODE labelCode[] =		\/\/代码$/;"	v
lastCloseCode	extract_dc.h	/^static BITCODE lastCloseCode[] =	\/\/昨收$/;"	v
m_bFullData	extract_dc.h	/^    BOOL m_bFullData;$/;"	m	class:ExtractDC
m_bNoMMP	extract_dc.h	/^	BOOL m_bNoMMP;			\/\/无买卖盘压缩$/;"	m	class:ExtractDC
m_bSeqCompress_	extract_dc.h	/^    BOOL m_bSeqCompress_;$/;"	m	class:ExtractDC
m_baseTime_	extract_dc.h	/^	time_t m_baseTime_;		\/\/动态压缩基准时间$/;"	m	class:ExtractDC
m_cHeadAttr_	extract_dc.h	/^    BYTE m_cHeadAttr_;		\/\/CPS_TICK_HEAD::m_cAttrib or CPS_DYNA_HEAD::m_cAttrib$/;"	m	class:ExtractDC
m_compressType_	extract_dc.h	/^	} m_compressType_;$/;"	m	class:ExtractDC	typeref:enum:ExtractDC::COMPRESS_TYPE
m_pStaticHead	extract_dc.h	/^	CPS_STATIC_HEAD* m_pStaticHead;$/;"	m	class:ExtractDC
m_stream	extract_dc.h	/^	CBitStream m_stream;$/;"	m	class:ExtractDC
m_wMarket	extract_dc.h	/^	WORD m_wMarket;$/;"	m	class:ExtractDC
m_wMarketStatic	extract_dc.h	/^    WORD m_wMarketStatic;$/;"	m	class:ExtractDC
mmpDiffGapPosCode	extract_dc.h	/^static BITCODE mmpDiffGapPosCode[] =			\/\/买卖盘Gap位置、数量,相关压缩$/;"	v
mmpDiffVolCode	extract_dc.h	/^static BITCODE mmpDiffVolCode[] =	\/\/相关压缩买卖盘量$/;"	v
mmpErrorVolPosCode	extract_dc.h	/^static BITCODE mmpErrorVolPosCode[] =		\/\/错误买卖盘量的位置$/;"	v
mmpGapCode	extract_dc.h	/^static BITCODE mmpGapCode[] = \/\/买卖盘Gap大小$/;"	v
mmpGapPosCode	extract_dc.h	/^static BITCODE mmpGapPosCode[] =			\/\/买卖盘Gap位置、数量,非相关压缩$/;"	v
mmpInsCode	extract_dc.h	/^static BITCODE mmpInsCode[] =	\/\/相关压缩买卖盘新增价格$/;"	v
mmpPosCode	extract_dc.h	/^static BITCODE mmpPosCode[] = \/\/买1价格定位$/;"	v
mmpPriceDiffCode	extract_dc.h	/^static BITCODE mmpPriceDiffCode[] =		\/\/相关压缩买卖盘价格$/;"	v
mmpPriceNumCode	extract_dc.h	/^static BITCODE mmpPriceNumCode[] =			\/\/买卖盘数量$/;"	v
mmpVolCode	extract_dc.h	/^static BITCODE mmpVolCode[] =	\/\/非相关压缩买卖盘量$/;"	v
mmpVolPosDiffCode	extract_dc.h	/^static BITCODE mmpVolPosDiffCode[] =		\/\/相关压缩买卖盘量的位置$/;"	v
oiCode	extract_dc.h	/^static BITCODE oiCode[] =	\/\/持仓量$/;"	v
priceCode	extract_dc.h	/^static BITCODE priceCode[] =	\/\/昨收$/;"	v
priceDigitCode	extract_dc.h	/^static BITCODE priceDigitCode[]	=	\/\/			价格最小分辨率$/;"	v
set_static_before_dyna_tag	extract_dc.h	/^	void inline set_static_before_dyna_tag(bool tag)$/;"	f	class:ExtractDC
set_stk_total	extract_dc.h	/^	void set_stk_total(int stk_total)$/;"	f	class:ExtractDC
static_before_dyna_tag	extract_dc.h	/^	bool static_before_dyna_tag;$/;"	m	class:ExtractDC
static_tag	extract_dc.h	/^	bool static_tag;$/;"	m	class:ExtractDC
stkIDCode	extract_dc.h	/^static BITCODE stkIDCode[] =	\/\/StockID$/;"	v
stk_total_	extract_dc.h	/^	int stk_total_;$/;"	m	class:ExtractDC
tickcountCode	extract_dc.h	/^static BITCODE tickcountCode[] = \/\/成交笔数$/;"	v
timeCode	extract_dc.h	/^static BITCODE timeCode[] =		\/\/成交时间$/;"	v
updnPriceCode	extract_dc.h	/^static BITCODE updnPriceCode[] = \/\/	涨停\/跌停(以昨收*1.1,*0.9为基准)$/;"	v
volCode	extract_dc.h	/^static BITCODE volCode[] =	\/\/非相关压缩成交量$/;"	v
volDiffCode	extract_dc.h	/^static BITCODE volDiffCode[] = \/\/相关压缩成交量$/;"	v
volUnitCode	extract_dc.h	/^static BITCODE volUnitCode[] =		\/\/			成交量单位$/;"	v
~ExtractDC	extract_dc.h	/^    ~ExtractDC(){};$/;"	f	class:ExtractDC
ACK	flags.h	/^    ACK = 0x10,$/;"	e	enum:IpFlags
ASHARE	flags.h	/^    ASHARE	= 'A',			\/\/A股,仅对STOCK,WARRANT有效$/;"	e	enum:STK_SUBTYPE
BOOL	flags.h	/^typedef int                       BOOL;$/;"	t
BSHARE	flags.h	/^    BSHARE	= 'B',			\/\/B股,仅对STOCK,WARRANT有效$/;"	e	enum:STK_SUBTYPE
BUFFERSIZE	flags.h	/^const int BUFFERSIZE = 1024;$/;"	v
BYTE	flags.h	/^typedef unsigned char BYTE;$/;"	t
CAP_PACK_BUF_SIZE	flags.h	/^static const int CAP_PACK_BUF_SIZE = 2048;$/;"	v
DWORD_PTR	flags.h	/^typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;$/;"	t
ENT_BOND	flags.h	/^    ENT_BOND = 'O',			\/\/企业债,仅对BOND有效$/;"	e	enum:STK_SUBTYPE
ESP	flags.h	/^    ESP = 'E',\/\/ETF$/;"	e	enum:STK_SP
FIN	flags.h	/^    FIN = 0x01,$/;"	e	enum:IpFlags
FINACK	flags.h	/^    FINACK = 0x11,$/;"	e	enum:IpFlags
FINPSHACK	flags.h	/^    FINPSHACK = 0x19,$/;"	e	enum:IpFlags
FIN_BOND	flags.h	/^    FIN_BOND = 'F',			\/\/金融债,仅对BOND有效$/;"	e	enum:STK_SUBTYPE
FLOAT	flags.h	/^typedef float                     FLOAT;$/;"	t
FSP	flags.h	/^    FSP = 'F',\/\/非交易型开放式基金$/;"	e	enum:STK_SP
GOV_BOND	flags.h	/^    GOV_BOND = 'G',			\/\/国债,仅对BOND有效$/;"	e	enum:STK_SUBTYPE
INT	flags.h	/^typedef int                        INT;$/;"	t
INT64	flags.h	/^typedef __int64 INT64;$/;"	t
INT64	flags.h	/^typedef long long INT64;$/;"	t
IpFlags	flags.h	/^enum IpFlags$/;"	g
LPCSTR	flags.h	/^typedef const char * LPCSTR;$/;"	t
LSP	flags.h	/^    LSP = 'L',\/\/上市开放型基金（LOF）$/;"	e	enum:STK_SP
Lv4protocol	flags.h	/^enum Lv4protocol$/;"	g
MKT_BI	flags.h	58;"	d
MKT_BO	flags.h	65;"	d
MKT_CC	flags.h	55;"	d
MKT_DC	flags.h	54;"	d
MKT_DSM	flags.h	66;"	d
MKT_FE	flags.h	50;"	d
MKT_FI	flags.h	60;"	d
MKT_HK	flags.h	45;"	d
MKT_HS	flags.h	64;"	d
MKT_IX	flags.h	61;"	d
MKT_NSQ	flags.h	48;"	d
MKT_NW	flags.h	63;"	d
MKT_NY	flags.h	47;"	d
MKT_SC	flags.h	52;"	d
MKT_SF	flags.h	56;"	d
MKT_SG	flags.h	57;"	d
MKT_SH	flags.h	43;"	d
MKT_SS	flags.h	67;"	d
MKT_SZ	flags.h	44;"	d
MKT_TE	flags.h	69;"	d
MKT_TW	flags.h	46;"	d
MKT_UI	flags.h	59;"	d
MKT_Z$	flags.h	68;"	d
MKT_ZC	flags.h	53;"	d
MKT_ZI	flags.h	62;"	d
MONITOR_FLAGS_H_	flags.h	2;"	d
NILTYPE	flags.h	/^    NILTYPE = 0,$/;"	e	enum:STK_SUBTYPE
NSP	flags.h	/^    NSP	= 'N',\/\/正常$/;"	e	enum:STK_SP
NULLSP	flags.h	/^    NULLSP = 0,$/;"	e	enum:STK_SP
OSP	flags.h	/^    OSP = 'O',\/\/仅揭示净值的开放式基金$/;"	e	enum:STK_SP
PDWORD_PTR	flags.h	/^typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;$/;"	t
PSH	flags.h	/^    PSH = 0x08,$/;"	e	enum:IpFlags
PSHACK	flags.h	/^    PSHACK = 0x18,$/;"	e	enum:IpFlags
PSP	flags.h	/^    PSP = 'P',\/\/PT股$/;"	e	enum:STK_SP
PULONG_PTR	flags.h	/^typedef unsigned long ULONG_PTR, *PULONG_PTR;$/;"	t
RST	flags.h	/^    RST = 0x04,$/;"	e	enum:IpFlags
RSTACK	flags.h	/^    RSTACK = 0x14,$/;"	e	enum:IpFlags
SSP	flags.h	/^    SSP	= 'S',\/\/ST股$/;"	e	enum:STK_SP
STK_SP	flags.h	/^enum STK_SP\/\/股票属性$/;"	g
STK_SUBTYPE	flags.h	/^enum STK_SUBTYPE$/;"	g
SYN	flags.h	/^    SYN = 0x02,$/;"	e	enum:IpFlags
SYNACK	flags.h	/^    SYNACK = 0x12,$/;"	e	enum:IpFlags
TCP	flags.h	/^    TCP = 6,$/;"	e	enum:Lv4protocol
TSP	flags.h	/^    TSP = 'T',\/\/代办转让证券$/;"	e	enum:STK_SP
UDP	flags.h	/^    UDP = 17$/;"	e	enum:Lv4protocol
UINT	flags.h	/^typedef unsigned int           UINT;$/;"	t
UINT32	flags.h	/^typedef unsigned int  UINT32;$/;"	t
UINT64	flags.h	/^typedef unsigned __int64 UINT64;$/;"	t
UINT64	flags.h	/^typedef unsigned long long UINT64;$/;"	t
ULONG_PTR	flags.h	/^typedef unsigned long ULONG_PTR, *PULONG_PTR;$/;"	t
URG	flags.h	/^    URG = 0x20$/;"	e	enum:IpFlags
WORD	flags.h	/^typedef unsigned short       WORD;$/;"	t
WORD	flags.h	/^typedef unsigned short WORD;$/;"	t
ZMQ_RCVHWM_SIZE	flags.h	/^static const int ZMQ_RCVHWM_SIZE = 1024*1024;$/;"	v
ZMQ_SNDHWM_SIZE	flags.h	/^static const int ZMQ_SNDHWM_SIZE = 1024*1024;$/;"	v
ZSP	flags.h	/^    ZSP = 'Z',\/\/处于退市整理期的证券$/;"	e	enum:STK_SP
int64	flags.h	/^typedef long long               int64;$/;"	t
CompressGeneralData	generalcps.cpp	/^int CompressGeneralData(DC_GENERAL* pData,BYTE* pBuf,int nBufSize)$/;"	f
CompressHKDyna	generalcps.cpp	/^int CompressHKDyna(const STK_HKDYNA* pHKDyna,int nNum,CBitStream& stream)$/;"	f
CompressStaticEx	generalcps.cpp	/^int CompressStaticEx(const STK_STATICEx* pStatic,int nNum,CBitStream& stream)$/;"	f
ExpandGeneralData	generalcps.cpp	/^int ExpandGeneralData(const BYTE* pCpsData,int nDataLen,DC_GENERAL* pData,int& nBufSize)$/;"	f
ExpandHKDyna	generalcps.cpp	/^int ExpandHKDyna(CBitStream& stream,STK_HKDYNA* pBuf,int& nBufSize)$/;"	f
ExpandStaticEx	generalcps.cpp	/^int ExpandStaticEx(CBitStream& stream,STK_STATICEx* pBuf,int& nBufSize)$/;"	f
geStkIDCode	generalcps.cpp	/^static BITCODE geStkIDCode[] =	\/\/StockID$/;"	v	file:
hkBrokerCode	generalcps.cpp	/^static BITCODE hkBrokerCode[] =	\/\/经纪$/;"	v	file:
hkBrokerTypeCode	generalcps.cpp	/^static BITCODE hkBrokerTypeCode[] =	\/\/经纪$/;"	v	file:
hkOrderNumCode	generalcps.cpp	/^static BITCODE hkOrderNumCode[] =	\/\/单量$/;"	v	file:
hkPriceCode	generalcps.cpp	/^static BITCODE hkPriceCode[] =	\/\/价格$/;"	v	file:
seStatusCode	generalcps.cpp	/^static BITCODE seStatusCode[] =$/;"	v	file:
seSubTypeCode	generalcps.cpp	/^static BITCODE seSubTypeCode[] = \/\/子类型$/;"	v	file:
CPS_GENERAL_HEAD	generalcps.h	/^struct CPS_GENERAL_HEAD$/;"	s
_GENERAL_COMPRESS_H_INCLUDE	generalcps.h	2;"	d
m_dwDataAttr	generalcps.h	/^	DWORD	m_dwDataAttr;		\/\/数据属性$/;"	m	struct:CPS_GENERAL_HEAD
m_nDataSize	generalcps.h	/^	short	m_nDataSize;		\/\/每个数据的长度,对于变长数据,表示每个数据的最大值(0表示没有最大值，任意长度)$/;"	m	struct:CPS_GENERAL_HEAD
m_nTotalLen	generalcps.h	/^	UINT24	m_nTotalLen;		\/\/包含本数据头在内的数据总长度$/;"	m	struct:CPS_GENERAL_HEAD
m_wDataID	generalcps.h	/^	WORD	m_wDataID;			\/\/数据ID$/;"	m	struct:CPS_GENERAL_HEAD
m_wMarket	generalcps.h	/^	WORD	m_wMarket;			\/\/市场$/;"	m	struct:CPS_GENERAL_HEAD
m_wNum	generalcps.h	/^	WORD	m_wNum;$/;"	m	struct:CPS_GENERAL_HEAD
AddToZMQDequeEx	handle_net_packet.cc	/^void HandleNetPacket::AddToZMQDequeEx(int index)$/;"	f	class:HandleNetPacket
CreateDidConfContent	handle_net_packet.cc	/^void CreateDidConfContent(vector<DidStruct> & did_structs, char * out_str)$/;"	f
CreateThreadKey	handle_net_packet.cc	/^void CreateThreadKey()$/;"	f
DispatchData	handle_net_packet.cc	/^void DispatchData(zmq::socket_t * sock, void * data, int size)$/;"	f
IncreasePool	handle_net_packet.cc	/^bool HandleNetPacket::IncreasePool(int pool_size)$/;"	f	class:HandleNetPacket
Init	handle_net_packet.cc	/^void HandleNetPacket::Init()$/;"	f	class:HandleNetPacket
InitZMQEx	handle_net_packet.cc	/^void HandleNetPacket::InitZMQEx(int index)$/;"	f	class:HandleNetPacket
IsTcpConnection	handle_net_packet.cc	/^bool IsTcpConnection(unsigned char flags, int &tcpconntag, int &tcpconnstatus)$/;"	f
IsTcpDisConnection	handle_net_packet.cc	/^bool IsTcpDisConnection(unsigned char flags, int port, unsigned short src_port)$/;"	f
RunLuaRoutineThread	handle_net_packet.cc	/^void HandleNetPacket::RunLuaRoutineThread(int index)$/;"	f	class:HandleNetPacket
RunParseThread	handle_net_packet.cc	/^void HandleNetPacket::RunParseThread(int index)$/;"	f	class:HandleNetPacket
RunThreadFunc	handle_net_packet.cc	/^void * HandleNetPacket::RunThreadFunc()$/;"	f	class:HandleNetPacket
WriteDidConfFile	handle_net_packet.cc	/^void WriteDidConfFile(const char * file_name, vector<DidStruct> &did_structs)$/;"	f
get_inner_thread_params	handle_net_packet.cc	/^void * get_inner_thread_params()$/;"	f
key_handle_net_packet	handle_net_packet.cc	/^pthread_key_t key_handle_net_packet;$/;"	v
once_control_cap	handle_net_packet.cc	/^pthread_once_t once_control_cap = PTHREAD_ONCE_INIT;$/;"	v
set_inner_thread_params	handle_net_packet.cc	/^void set_inner_thread_params(const void * value)$/;"	f
AddZMQItemEx	handle_net_packet.h	/^	inline void AddZMQItemEx(ZMQItem item)$/;"	f	class:HandleNetPacket
HandleNetPacket	handle_net_packet.h	/^	HandleNetPacket(zmq::context_t *context,XML_ListeningItem &listening_item):context_(context),listening_item_(listening_item),curent_pool_size_(0)$/;"	f	class:HandleNetPacket
HandleNetPacket	handle_net_packet.h	/^class HandleNetPacket:public BaseThread$/;"	c
MONITOR_HANDLE_NET_PACKET_H	handle_net_packet.h	2;"	d
context_	handle_net_packet.h	/^	zmq::context_t *context_;$/;"	m	class:HandleNetPacket
curent_pool_size_	handle_net_packet.h	/^	int curent_pool_size_;$/;"	m	class:HandleNetPacket
kPoolSize	handle_net_packet.h	/^const int kPoolSize = 1;$/;"	v
listening_item_	handle_net_packet.h	/^	XML_ListeningItem listening_item_;$/;"	m	class:HandleNetPacket
lua_routine_deque_	handle_net_packet.h	/^	deque<LuaRoutine*> lua_routine_deque_;$/;"	m	class:HandleNetPacket
parse_deque_	handle_net_packet.h	/^	deque<Parse *> parse_deque_;$/;"	m	class:HandleNetPacket
sock_	handle_net_packet.h	/^	zmq::socket_t *sock_;$/;"	m	class:HandleNetPacket
sock_ex_deque_	handle_net_packet.h	/^	deque<zmq::socket_t *>sock_ex_deque_;$/;"	m	class:HandleNetPacket
sock_ex_map_	handle_net_packet.h	/^	map<std::string,zmq::socket_t *> sock_ex_map_;$/;"	m	class:HandleNetPacket
zmqitems_ex_	handle_net_packet.h	/^	std::vector<ZMQItem> zmqitems_ex_;$/;"	m	class:HandleNetPacket
~HandleNetPacket	handle_net_packet.h	/^	virtual ~HandleNetPacket()$/;"	f	class:HandleNetPacket
AddNewOrder	l2compress.cpp	/^void SZ_L2_ORDER_STAT::AddNewOrder(int nDir,DWORD dwPrice,DWORD dwVol,BYTE nPriceDigit)$/;"	f	class:SZ_L2_ORDER_STAT
AddNewWithdarw	l2compress.cpp	/^void SZ_L2_ORDER_STAT::AddNewWithdarw(int nDir,DWORD dwVol)$/;"	f	class:SZ_L2_ORDER_STAT
CompressL2AccuWD	l2compress.cpp	/^int CompressL2AccuWD(WORD wMarket,const DC_SHL2_ACCU_WD* pBuyWD,const DC_SHL2_ACCU_WD* pSellWD,SVRNetHead* pBuf,int& nBufSize)$/;"	f
CompressL2AccuWD	l2compress.cpp	/^int CompressL2AccuWD(WORD wMarket,const DC_SHL2_ACCU_WD* pWD,BYTE* pBuf,int& nBufSize)$/;"	f
CompressL2BigWD	l2compress.cpp	/^int CompressL2BigWD(WORD wMarket,const DC_SHL2_BIG_WD* pBuyWD,const DC_SHL2_BIG_WD* pSellWD,SVRNetHead* pBuf,int& nBufSize)$/;"	f
CompressL2BigWD	l2compress.cpp	/^int CompressL2BigWD(WORD wMarket,const DC_SHL2_BIG_WD* pWD,BYTE* pBuf,int& nBufSize)$/;"	f
CompressL2OrderStat	l2compress.cpp	/^BOOL CompressL2OrderStat(WORD wMarket,const DC_SZL2_ORDER_STAT* pStat,BYTE* pBuf,int& nBufSize)$/;"	f
CompressL2Queue	l2compress.cpp	/^int CompressL2Queue(WORD wMarket,const DWORD* pQueue,int nQueueLen,BYTE* pBuf,int& nBufSize,BOOL bOrderQueue)$/;"	f
CompressL2Report	l2compress.cpp	/^int CompressL2Report(WORD wMarket,const SH_L2_REPORT* pRep,int nNum,BYTE* pBuf,int& nBufSize)$/;"	f
ExpandL2AccuWD	l2compress.cpp	/^int ExpandL2AccuWD(const BYTE* pData,int nDataLen,WORD& wMarket,DC_SHL2_ACCU_WD* pWDBuf,int& nBufSize)$/;"	f
ExpandL2BigWD	l2compress.cpp	/^int ExpandL2BigWD(const BYTE* pData,int nDataLen,WORD& wMarket,DC_SHL2_BIG_WD* pWDBuf,int& nBufSize)$/;"	f
ExpandL2OrderStat	l2compress.cpp	/^int ExpandL2OrderStat(const BYTE* pData,int nDataLen,WORD& wMarket,DC_SZL2_ORDER_STAT* pStatBuf,int& nBufSize)$/;"	f
ExpandL2Queue	l2compress.cpp	/^int ExpandL2Queue(const BYTE* pData,int nDataLen,DWORD* pQueueBuf,int& nQueueBufSize,BOOL bOrderQueue)$/;"	f
ExpandL2Report	l2compress.cpp	/^int ExpandL2Report(const BYTE* pData,int nDataLen,WORD& wMarket,SH_L2_REPORT* pRepBuf,int& nBufSize)$/;"	f
Init	l2compress.cpp	/^void SZ_L2_ORDER_STAT::Init(WORD wStkID)$/;"	f	class:SZ_L2_ORDER_STAT
numWDCode	l2compress.cpp	/^static BITCODE numWDCode[] = $/;"	v	file:
osCountCode	l2compress.cpp	/^static BITCODE osCountCode[] =	\/\/单数$/;"	v	file:
osIDCode	l2compress.cpp	/^static BITCODE osIDCode[] =	\/\/StockID$/;"	v	file:
osVolCode	l2compress.cpp	/^static BITCODE osVolCode[] =	\/\/量$/;"	v	file:
queueNumberCode	l2compress.cpp	/^static BITCODE queueNumberCode[] =	$/;"	v	file:
queuePriceCode	l2compress.cpp	/^static BITCODE queuePriceCode[] =	$/;"	v	file:
queueTypeCode	l2compress.cpp	/^static BITCODE queueTypeCode[] =$/;"	v	file:
queueVolCode	l2compress.cpp	/^static BITCODE queueVolCode[] =$/;"	v	file:
repNumRepCode	l2compress.cpp	/^static BITCODE repNumRepCode[] = \/\/连续数量$/;"	v	file:
repPriceCode	l2compress.cpp	/^static BITCODE repPriceCode[] = \/\/首记录$/;"	v	file:
repPriceDiffCode	l2compress.cpp	/^static BITCODE repPriceDiffCode[] = \/\/之后以前一个价格为基准$/;"	v	file:
repStkIDCode	l2compress.cpp	/^static BITCODE repStkIDCode[] =	\/\/StockID$/;"	v	file:
repTimeCode	l2compress.cpp	/^static BITCODE repTimeCode[] =$/;"	v	file:
repVolumeCode	l2compress.cpp	/^static BITCODE repVolumeCode[] =	\/\/量; todo change to B$/;"	v	file:
wdPriceCode	l2compress.cpp	/^static BITCODE wdPriceCode[] =$/;"	v	file:
wdSbumitTimeCode	l2compress.cpp	/^static BITCODE wdSbumitTimeCode[] =$/;"	v	file:
wdTimeCode	l2compress.cpp	/^static BITCODE wdTimeCode[] =$/;"	v	file:
wdVolumeCode	l2compress.cpp	/^static BITCODE wdVolumeCode[] =	\/\/量$/;"	v	file:
_SHL2_COMPRESS_INCLUDE	l2compress.h	2;"	d
ASSERT	ldgloble.h	87;"	d
BABY_NONE	ldgloble.h	27;"	d
BABY_RD	ldgloble.h	29;"	d
BABY_RDWR	ldgloble.h	28;"	d
BABY_WR	ldgloble.h	30;"	d
BOOL	ldgloble.h	/^typedef int BOOL;$/;"	t
BYTE	ldgloble.h	/^typedef unsigned char BYTE;$/;"	t
DWORD	ldgloble.h	/^typedef unsigned int DWORD;$/;"	t
FALSE	ldgloble.h	47;"	d
HIWORD	ldgloble.h	75;"	d
LOWORD	ldgloble.h	74;"	d
LPCSTR	ldgloble.h	/^typedef const char * LPCSTR;$/;"	t
LPSTR	ldgloble.h	/^typedef char * LPSTR;$/;"	t
RESET_AUTO_PTR	ldgloble.h	32;"	d
SOCKET	ldgloble.h	/^typedef int SOCKET;$/;"	t
TRACE	ldgloble.h	80;"	d
TRACE3	ldgloble.h	81;"	d
TRUE	ldgloble.h	43;"	d
UINT	ldgloble.h	/^typedef unsigned int UINT;$/;"	t
WORD	ldgloble.h	/^typedef unsigned short WORD;$/;"	t
_GLOBLE_HEAD_	ldgloble.h	2;"	d
byte	ldgloble.h	/^typedef unsigned char byte;$/;"	t
__DOCB_PARSER_H__	libxml\DOCBparser.h	12;"	d
docbDocPtr	libxml\DOCBparser.h	/^typedef xmlDocPtr docbDocPtr;$/;"	t
docbParserCtxt	libxml\DOCBparser.h	/^typedef xmlParserCtxt docbParserCtxt;$/;"	t
docbParserCtxtPtr	libxml\DOCBparser.h	/^typedef xmlParserCtxtPtr docbParserCtxtPtr;$/;"	t
docbParserInput	libxml\DOCBparser.h	/^typedef xmlParserInput docbParserInput;$/;"	t
docbParserInputPtr	libxml\DOCBparser.h	/^typedef xmlParserInputPtr docbParserInputPtr;$/;"	t
docbSAXHandler	libxml\DOCBparser.h	/^typedef xmlSAXHandler docbSAXHandler;$/;"	t
docbSAXHandlerPtr	libxml\DOCBparser.h	/^typedef xmlSAXHandlerPtr docbSAXHandlerPtr;$/;"	t
HTML_DEPRECATED	libxml\HTMLparser.h	/^  HTML_DEPRECATED = 0x2 ,$/;"	e	enum:__anon20
HTML_INVALID	libxml\HTMLparser.h	/^  HTML_INVALID = 0x1 ,$/;"	e	enum:__anon20
HTML_NA	libxml\HTMLparser.h	/^  HTML_NA = 0 ,		\/* something we don't check at all *\/$/;"	e	enum:__anon20
HTML_PARSE_COMPACT	libxml\HTMLparser.h	/^    HTML_PARSE_COMPACT  = 1<<16 \/* compact small text nodes *\/$/;"	e	enum:__anon19
HTML_PARSE_NOBLANKS	libxml\HTMLparser.h	/^    HTML_PARSE_NOBLANKS	= 1<<8,	\/* remove blank nodes *\/$/;"	e	enum:__anon19
HTML_PARSE_NODEFDTD	libxml\HTMLparser.h	/^    HTML_PARSE_NODEFDTD = 1<<2, \/* do not default a doctype if not found *\/$/;"	e	enum:__anon19
HTML_PARSE_NOERROR	libxml\HTMLparser.h	/^    HTML_PARSE_NOERROR	= 1<<5,	\/* suppress error reports *\/$/;"	e	enum:__anon19
HTML_PARSE_NOIMPLIED	libxml\HTMLparser.h	/^    HTML_PARSE_NOIMPLIED= 1<<13,\/* Do not add implied html\/body... elements *\/$/;"	e	enum:__anon19
HTML_PARSE_NONET	libxml\HTMLparser.h	/^    HTML_PARSE_NONET	= 1<<11,\/* Forbid network access *\/$/;"	e	enum:__anon19
HTML_PARSE_NOWARNING	libxml\HTMLparser.h	/^    HTML_PARSE_NOWARNING= 1<<6,	\/* suppress warning reports *\/$/;"	e	enum:__anon19
HTML_PARSE_PEDANTIC	libxml\HTMLparser.h	/^    HTML_PARSE_PEDANTIC	= 1<<7,	\/* pedantic error reporting *\/$/;"	e	enum:__anon19
HTML_PARSE_RECOVER	libxml\HTMLparser.h	/^    HTML_PARSE_RECOVER  = 1<<0, \/* Relaxed parsing *\/$/;"	e	enum:__anon19
HTML_REQUIRED	libxml\HTMLparser.h	/^  HTML_REQUIRED = 0xc \/* VALID bit set so ( & HTML_VALID ) is TRUE *\/$/;"	e	enum:__anon20
HTML_VALID	libxml\HTMLparser.h	/^  HTML_VALID = 0x4 ,$/;"	e	enum:__anon20
__HTML_PARSER_H__	libxml\HTMLparser.h	14;"	d
_htmlElemDesc	libxml\HTMLparser.h	/^struct _htmlElemDesc {$/;"	s
_htmlEntityDesc	libxml\HTMLparser.h	/^struct _htmlEntityDesc {$/;"	s
attrs_depr	libxml\HTMLparser.h	/^    const char** attrs_depr;		\/* Additional deprecated attributes *\/$/;"	m	struct:_htmlElemDesc
attrs_opt	libxml\HTMLparser.h	/^    const char** attrs_opt;		\/* Optional Attributes *\/$/;"	m	struct:_htmlElemDesc
attrs_req	libxml\HTMLparser.h	/^    const char** attrs_req;		\/* Required attributes *\/$/;"	m	struct:_htmlElemDesc
defaultsubelt	libxml\HTMLparser.h	/^    const char* defaultsubelt;	\/* subelement for suggested auto-repair$/;"	m	struct:_htmlElemDesc
depr	libxml\HTMLparser.h	/^    char depr;          \/* Is this a deprecated element ? *\/$/;"	m	struct:_htmlElemDesc
desc	libxml\HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlElemDesc
desc	libxml\HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlEntityDesc
dtd	libxml\HTMLparser.h	/^    char dtd;           \/* 1: only in Loose DTD, 2: only Frameset one *\/$/;"	m	struct:_htmlElemDesc
empty	libxml\HTMLparser.h	/^    char empty;         \/* Is this an empty element ? *\/$/;"	m	struct:_htmlElemDesc
endTag	libxml\HTMLparser.h	/^    char endTag;        \/* Whether the end tag can be implied *\/$/;"	m	struct:_htmlElemDesc
htmlDefaultSubelement	libxml\HTMLparser.h	278;"	d
htmlDocPtr	libxml\HTMLparser.h	/^typedef xmlDocPtr htmlDocPtr;$/;"	t
htmlElemDesc	libxml\HTMLparser.h	/^typedef struct _htmlElemDesc htmlElemDesc;$/;"	t	typeref:struct:_htmlElemDesc
htmlElemDescPtr	libxml\HTMLparser.h	/^typedef htmlElemDesc *htmlElemDescPtr;$/;"	t
htmlElementAllowedHereDesc	libxml\HTMLparser.h	289;"	d
htmlEntityDesc	libxml\HTMLparser.h	/^typedef struct _htmlEntityDesc htmlEntityDesc;$/;"	t	typeref:struct:_htmlEntityDesc
htmlEntityDescPtr	libxml\HTMLparser.h	/^typedef htmlEntityDesc *htmlEntityDescPtr;$/;"	t
htmlNodePtr	libxml\HTMLparser.h	/^typedef xmlNodePtr htmlNodePtr;$/;"	t
htmlParserCtxt	libxml\HTMLparser.h	/^typedef xmlParserCtxt htmlParserCtxt;$/;"	t
htmlParserCtxtPtr	libxml\HTMLparser.h	/^typedef xmlParserCtxtPtr htmlParserCtxtPtr;$/;"	t
htmlParserInput	libxml\HTMLparser.h	/^typedef xmlParserInput htmlParserInput;$/;"	t
htmlParserInputPtr	libxml\HTMLparser.h	/^typedef xmlParserInputPtr htmlParserInputPtr;$/;"	t
htmlParserNodeInfo	libxml\HTMLparser.h	/^typedef xmlParserNodeInfo htmlParserNodeInfo;$/;"	t
htmlParserOption	libxml\HTMLparser.h	/^} htmlParserOption;$/;"	t	typeref:enum:__anon19
htmlRequiredAttrs	libxml\HTMLparser.h	297;"	d
htmlSAXHandler	libxml\HTMLparser.h	/^typedef xmlSAXHandler htmlSAXHandler;$/;"	t
htmlSAXHandlerPtr	libxml\HTMLparser.h	/^typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;$/;"	t
htmlStatus	libxml\HTMLparser.h	/^} htmlStatus ;$/;"	t	typeref:enum:__anon20
isinline	libxml\HTMLparser.h	/^    char isinline;      \/* is this a block 0 or inline 1 element *\/$/;"	m	struct:_htmlElemDesc
name	libxml\HTMLparser.h	/^    const char *name;	\/* The entity name *\/$/;"	m	struct:_htmlEntityDesc
name	libxml\HTMLparser.h	/^    const char *name;	\/* The tag name *\/$/;"	m	struct:_htmlElemDesc
saveEndTag	libxml\HTMLparser.h	/^    char saveEndTag;    \/* Whether the end tag should be saved *\/$/;"	m	struct:_htmlElemDesc
startTag	libxml\HTMLparser.h	/^    char startTag;      \/* Whether the start tag can be implied *\/$/;"	m	struct:_htmlElemDesc
subelts	libxml\HTMLparser.h	/^    const char** subelts;		\/* allowed sub-elements of this element *\/$/;"	m	struct:_htmlElemDesc
value	libxml\HTMLparser.h	/^    unsigned int value;	\/* the UNICODE value for the character *\/$/;"	m	struct:_htmlEntityDesc
HTML_COMMENT_NODE	libxml\HTMLtree.h	46;"	d
HTML_ENTITY_REF_NODE	libxml\HTMLtree.h	39;"	d
HTML_PI_NODE	libxml\HTMLtree.h	60;"	d
HTML_PRESERVE_NODE	libxml\HTMLtree.h	53;"	d
HTML_TEXT_NODE	libxml\HTMLtree.h	32;"	d
__HTML_TREE_H__	libxml\HTMLtree.h	12;"	d
__XML_SAX_H__	libxml\SAX.h	13;"	d
__XML_SAX2_H__	libxml\SAX2.h	13;"	d
XML_C14N_1_0	libxml\c14n.h	/^    XML_C14N_1_0            = 0,    \/* Origianal C14N 1.0 spec *\/$/;"	e	enum:__anon14
XML_C14N_1_1	libxml\c14n.h	/^    XML_C14N_1_1            = 2     \/* C14N 1.1 spec *\/$/;"	e	enum:__anon14
XML_C14N_EXCLUSIVE_1_0	libxml\c14n.h	/^    XML_C14N_EXCLUSIVE_1_0  = 1,    \/* Exclusive C14N 1.0 spec *\/$/;"	e	enum:__anon14
__XML_C14N_H__	libxml\c14n.h	18;"	d
xmlC14NIsVisibleCallback	libxml\c14n.h	/^typedef int (*xmlC14NIsVisibleCallback)	(void* user_data,$/;"	t
xmlC14NMode	libxml\c14n.h	/^} xmlC14NMode;$/;"	t	typeref:enum:__anon14
XML_CATALOGS_NAMESPACE	libxml\catalog.h	37;"	d
XML_CATALOG_PI	libxml\catalog.h	44;"	d
XML_CATA_ALLOW_ALL	libxml\catalog.h	/^    XML_CATA_ALLOW_ALL = 3$/;"	e	enum:__anon16
XML_CATA_ALLOW_DOCUMENT	libxml\catalog.h	/^    XML_CATA_ALLOW_DOCUMENT = 2,$/;"	e	enum:__anon16
XML_CATA_ALLOW_GLOBAL	libxml\catalog.h	/^    XML_CATA_ALLOW_GLOBAL = 1,$/;"	e	enum:__anon16
XML_CATA_ALLOW_NONE	libxml\catalog.h	/^    XML_CATA_ALLOW_NONE = 0,$/;"	e	enum:__anon16
XML_CATA_PREFER_NONE	libxml\catalog.h	/^    XML_CATA_PREFER_NONE = 0,$/;"	e	enum:__anon15
XML_CATA_PREFER_PUBLIC	libxml\catalog.h	/^    XML_CATA_PREFER_PUBLIC = 1,$/;"	e	enum:__anon15
XML_CATA_PREFER_SYSTEM	libxml\catalog.h	/^    XML_CATA_PREFER_SYSTEM$/;"	e	enum:__anon15
__XML_CATALOG_H__	libxml\catalog.h	18;"	d
xmlCatalog	libxml\catalog.h	/^typedef struct _xmlCatalog xmlCatalog;$/;"	t	typeref:struct:_xmlCatalog
xmlCatalogAllow	libxml\catalog.h	/^} xmlCatalogAllow;$/;"	t	typeref:enum:__anon16
xmlCatalogPrefer	libxml\catalog.h	/^} xmlCatalogPrefer;$/;"	t	typeref:enum:__anon15
xmlCatalogPtr	libxml\catalog.h	/^typedef xmlCatalog *xmlCatalogPtr;$/;"	t
__XML_CHVALID_H__	libxml\chvalid.h	15;"	d
_xmlChLRange	libxml\chvalid.h	/^struct _xmlChLRange {$/;"	s
_xmlChRangeGroup	libxml\chvalid.h	/^struct _xmlChRangeGroup {$/;"	s
_xmlChSRange	libxml\chvalid.h	/^struct _xmlChSRange {$/;"	s
high	libxml\chvalid.h	/^    unsigned int	high;$/;"	m	struct:_xmlChLRange
high	libxml\chvalid.h	/^    unsigned short	high;$/;"	m	struct:_xmlChSRange
longRange	libxml\chvalid.h	/^    const xmlChLRange	*longRange;$/;"	m	struct:_xmlChRangeGroup
low	libxml\chvalid.h	/^    unsigned int	low;$/;"	m	struct:_xmlChLRange
low	libxml\chvalid.h	/^    unsigned short	low;$/;"	m	struct:_xmlChSRange
nbLongRange	libxml\chvalid.h	/^    int			nbLongRange;$/;"	m	struct:_xmlChRangeGroup
nbShortRange	libxml\chvalid.h	/^    int			nbShortRange;$/;"	m	struct:_xmlChRangeGroup
shortRange	libxml\chvalid.h	/^    const xmlChSRange	*shortRange;	\/* points to an array of ranges *\/$/;"	m	struct:_xmlChRangeGroup
xmlChLRange	libxml\chvalid.h	/^typedef struct _xmlChLRange xmlChLRange;$/;"	t	typeref:struct:_xmlChLRange
xmlChLRangePtr	libxml\chvalid.h	/^typedef xmlChLRange *xmlChLRangePtr;$/;"	t
xmlChRangeGroup	libxml\chvalid.h	/^typedef struct _xmlChRangeGroup xmlChRangeGroup;$/;"	t	typeref:struct:_xmlChRangeGroup
xmlChRangeGroupPtr	libxml\chvalid.h	/^typedef xmlChRangeGroup *xmlChRangeGroupPtr;$/;"	t
xmlChSRange	libxml\chvalid.h	/^typedef struct _xmlChSRange xmlChSRange;$/;"	t	typeref:struct:_xmlChSRange
xmlChSRangePtr	libxml\chvalid.h	/^typedef xmlChSRange *xmlChSRangePtr;$/;"	t
xmlIsBaseCharGroup	libxml\chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsBaseCharGroup;$/;"	v
xmlIsBaseCharQ	libxml\chvalid.h	76;"	d
xmlIsBaseChar_ch	libxml\chvalid.h	64;"	d
xmlIsBlankQ	libxml\chvalid.h	98;"	d
xmlIsBlank_ch	libxml\chvalid.h	88;"	d
xmlIsCharGroup	libxml\chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsCharGroup;$/;"	v
xmlIsCharQ	libxml\chvalid.h	118;"	d
xmlIsChar_ch	libxml\chvalid.h	108;"	d
xmlIsCombiningGroup	libxml\chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsCombiningGroup;$/;"	v
xmlIsCombiningQ	libxml\chvalid.h	132;"	d
xmlIsDigitGroup	libxml\chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsDigitGroup;$/;"	v
xmlIsDigitQ	libxml\chvalid.h	152;"	d
xmlIsDigit_ch	libxml\chvalid.h	144;"	d
xmlIsExtenderGroup	libxml\chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsExtenderGroup;$/;"	v
xmlIsExtenderQ	libxml\chvalid.h	172;"	d
xmlIsExtender_ch	libxml\chvalid.h	164;"	d
xmlIsIdeographicGroup	libxml\chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsIdeographicGroup;$/;"	v
xmlIsIdeographicQ	libxml\chvalid.h	184;"	d
xmlIsPubidCharQ	libxml\chvalid.h	207;"	d
xmlIsPubidChar_ch	libxml\chvalid.h	199;"	d
xmlIsPubidChar_tab	libxml\chvalid.h	/^XMLPUBVAR const unsigned char xmlIsPubidChar_tab[256];$/;"	v
__DEBUG_XML__	libxml\debugXML.h	12;"	d
_xmlShellCtxt	libxml\debugXML.h	/^struct _xmlShellCtxt {$/;"	s
doc	libxml\debugXML.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlShellCtxt
filename	libxml\debugXML.h	/^    char *filename;$/;"	m	struct:_xmlShellCtxt
input	libxml\debugXML.h	/^    xmlShellReadlineFunc input;$/;"	m	struct:_xmlShellCtxt
loaded	libxml\debugXML.h	/^    int loaded;$/;"	m	struct:_xmlShellCtxt
node	libxml\debugXML.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlShellCtxt
output	libxml\debugXML.h	/^    FILE *output;$/;"	m	struct:_xmlShellCtxt
pctxt	libxml\debugXML.h	/^    xmlXPathContextPtr pctxt;$/;"	m	struct:_xmlShellCtxt
xmlShellCmd	libxml\debugXML.h	/^typedef int (* xmlShellCmd) (xmlShellCtxtPtr ctxt,$/;"	t
xmlShellCtxt	libxml\debugXML.h	/^typedef struct _xmlShellCtxt xmlShellCtxt;$/;"	t	typeref:struct:_xmlShellCtxt
xmlShellCtxtPtr	libxml\debugXML.h	/^typedef xmlShellCtxt *xmlShellCtxtPtr;$/;"	t
xmlShellReadlineFunc	libxml\debugXML.h	/^typedef char * (* xmlShellReadlineFunc)(char *prompt);$/;"	t
__XML_DICT_H__	libxml\dict.h	12;"	d
xmlDict	libxml\dict.h	/^typedef struct _xmlDict xmlDict;$/;"	t	typeref:struct:_xmlDict
xmlDictPtr	libxml\dict.h	/^typedef xmlDict *xmlDictPtr;$/;"	t
XML_CHAR_ENCODING_2022_JP	libxml\encoding.h	/^    XML_CHAR_ENCODING_2022_JP=  19,\/* ISO-2022-JP *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_1	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_1=	10,\/* ISO-8859-1 ISO Latin 1 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_2	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_2=	11,\/* ISO-8859-2 ISO Latin 2 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_3	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_3=	12,\/* ISO-8859-3 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_4	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_4=	13,\/* ISO-8859-4 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_5	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_5=	14,\/* ISO-8859-5 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_6	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_6=	15,\/* ISO-8859-6 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_7	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_7=	16,\/* ISO-8859-7 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_8	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_8=	17,\/* ISO-8859-8 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_8859_9	libxml\encoding.h	/^    XML_CHAR_ENCODING_8859_9=	18,\/* ISO-8859-9 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_ASCII	libxml\encoding.h	/^    XML_CHAR_ENCODING_ASCII=    22 \/* pure ASCII *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_EBCDIC	libxml\encoding.h	/^    XML_CHAR_ENCODING_EBCDIC=	6, \/* EBCDIC uh! *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_ERROR	libxml\encoding.h	/^    XML_CHAR_ENCODING_ERROR=   -1, \/* No char encoding detected *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_EUC_JP	libxml\encoding.h	/^    XML_CHAR_ENCODING_EUC_JP=   21,\/* EUC-JP *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_NONE	libxml\encoding.h	/^    XML_CHAR_ENCODING_NONE=	0, \/* No char encoding detected *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_SHIFT_JIS	libxml\encoding.h	/^    XML_CHAR_ENCODING_SHIFT_JIS=20,\/* Shift_JIS *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UCS2	libxml\encoding.h	/^    XML_CHAR_ENCODING_UCS2=	9, \/* UCS-2 *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UCS4BE	libxml\encoding.h	/^    XML_CHAR_ENCODING_UCS4BE=	5, \/* UCS-4 big endian *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UCS4LE	libxml\encoding.h	/^    XML_CHAR_ENCODING_UCS4LE=	4, \/* UCS-4 little endian *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UCS4_2143	libxml\encoding.h	/^    XML_CHAR_ENCODING_UCS4_2143=7, \/* UCS-4 unusual ordering *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UCS4_3412	libxml\encoding.h	/^    XML_CHAR_ENCODING_UCS4_3412=8, \/* UCS-4 unusual ordering *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UTF16BE	libxml\encoding.h	/^    XML_CHAR_ENCODING_UTF16BE=	3, \/* UTF-16 big endian *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UTF16LE	libxml\encoding.h	/^    XML_CHAR_ENCODING_UTF16LE=	2, \/* UTF-16 little endian *\/$/;"	e	enum:__anon17
XML_CHAR_ENCODING_UTF8	libxml\encoding.h	/^    XML_CHAR_ENCODING_UTF8=	1, \/* UTF-8 *\/$/;"	e	enum:__anon17
__XML_CHAR_ENCODING_H__	libxml\encoding.h	23;"	d
_uconv_t	libxml\encoding.h	/^struct _uconv_t {$/;"	s
_xmlCharEncodingHandler	libxml\encoding.h	/^struct _xmlCharEncodingHandler {$/;"	s
iconv_in	libxml\encoding.h	/^    iconv_t                    iconv_in;$/;"	m	struct:_xmlCharEncodingHandler
iconv_out	libxml\encoding.h	/^    iconv_t                    iconv_out;$/;"	m	struct:_xmlCharEncodingHandler
input	libxml\encoding.h	/^    xmlCharEncodingInputFunc   input;$/;"	m	struct:_xmlCharEncodingHandler
name	libxml\encoding.h	/^    char                       *name;$/;"	m	struct:_xmlCharEncodingHandler
output	libxml\encoding.h	/^    xmlCharEncodingOutputFunc  output;$/;"	m	struct:_xmlCharEncodingHandler
uconv	libxml\encoding.h	/^  UConverter *uconv; \/* for conversion between an encoding and UTF-16 *\/$/;"	m	struct:_uconv_t
uconv_in	libxml\encoding.h	/^    uconv_t                    *uconv_in;$/;"	m	struct:_xmlCharEncodingHandler
uconv_out	libxml\encoding.h	/^    uconv_t                    *uconv_out;$/;"	m	struct:_xmlCharEncodingHandler
uconv_t	libxml\encoding.h	/^typedef struct _uconv_t uconv_t;$/;"	t	typeref:struct:_uconv_t
utf8	libxml\encoding.h	/^  UConverter *utf8; \/* for conversion between UTF-8 and UTF-16 *\/$/;"	m	struct:_uconv_t
xmlCharEncoding	libxml\encoding.h	/^} xmlCharEncoding;$/;"	t	typeref:enum:__anon17
xmlCharEncodingHandler	libxml\encoding.h	/^typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;$/;"	t	typeref:struct:_xmlCharEncodingHandler
xmlCharEncodingHandlerPtr	libxml\encoding.h	/^typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;$/;"	t
xmlCharEncodingInputFunc	libxml\encoding.h	/^typedef int (* xmlCharEncodingInputFunc)(unsigned char *out, int *outlen,$/;"	t
xmlCharEncodingOutputFunc	libxml\encoding.h	/^typedef int (* xmlCharEncodingOutputFunc)(unsigned char *out, int *outlen,$/;"	t
ExternalID	libxml\entities.h	/^    const xmlChar    *ExternalID;	\/* External identifier for PUBLIC *\/$/;"	m	struct:_xmlEntity
SystemID	libxml\entities.h	/^    const xmlChar      *SystemID;	\/* URI for a SYSTEM or PUBLIC Entity *\/$/;"	m	struct:_xmlEntity
URI	libxml\entities.h	/^    const xmlChar           *URI;	\/* the full URI as computed *\/$/;"	m	struct:_xmlEntity
XML_EXTERNAL_GENERAL_PARSED_ENTITY	libxml\entities.h	/^    XML_EXTERNAL_GENERAL_PARSED_ENTITY = 2,$/;"	e	enum:__anon18
XML_EXTERNAL_GENERAL_UNPARSED_ENTITY	libxml\entities.h	/^    XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 3,$/;"	e	enum:__anon18
XML_EXTERNAL_PARAMETER_ENTITY	libxml\entities.h	/^    XML_EXTERNAL_PARAMETER_ENTITY = 5,$/;"	e	enum:__anon18
XML_INTERNAL_GENERAL_ENTITY	libxml\entities.h	/^    XML_INTERNAL_GENERAL_ENTITY = 1,$/;"	e	enum:__anon18
XML_INTERNAL_PARAMETER_ENTITY	libxml\entities.h	/^    XML_INTERNAL_PARAMETER_ENTITY = 4,$/;"	e	enum:__anon18
XML_INTERNAL_PREDEFINED_ENTITY	libxml\entities.h	/^    XML_INTERNAL_PREDEFINED_ENTITY = 6$/;"	e	enum:__anon18
__XML_ENTITIES_H__	libxml\entities.h	12;"	d
_private	libxml\entities.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlEntity
_xmlEntity	libxml\entities.h	/^struct _xmlEntity {$/;"	s
checked	libxml\entities.h	/^    int			 checked;	\/* was the entity content checked *\/$/;"	m	struct:_xmlEntity
children	libxml\entities.h	/^    struct _xmlNode    *children;	\/* First child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
content	libxml\entities.h	/^    xmlChar             *content;	\/* content or ndata if unparsed *\/$/;"	m	struct:_xmlEntity
doc	libxml\entities.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDoc
etype	libxml\entities.h	/^    xmlEntityType          etype;	\/* The entity type *\/$/;"	m	struct:_xmlEntity
last	libxml\entities.h	/^    struct _xmlNode        *last;	\/* Last child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
length	libxml\entities.h	/^    int                   length;	\/* the content length *\/$/;"	m	struct:_xmlEntity
name	libxml\entities.h	/^    const xmlChar          *name;	\/* Entity name *\/$/;"	m	struct:_xmlEntity
next	libxml\entities.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
nexte	libxml\entities.h	/^    struct _xmlEntity     *nexte;	\/* unused *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlEntity
orig	libxml\entities.h	/^    xmlChar                *orig;	\/* content without ref substitution *\/$/;"	m	struct:_xmlEntity
owner	libxml\entities.h	/^    int                    owner;	\/* does the entity own the childrens *\/$/;"	m	struct:_xmlEntity
parent	libxml\entities.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDtd
prev	libxml\entities.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
type	libxml\entities.h	/^    xmlElementType          type;       \/* XML_ENTITY_DECL, must be second ! *\/$/;"	m	struct:_xmlEntity
xmlEntitiesTable	libxml\entities.h	/^typedef struct _xmlHashTable xmlEntitiesTable;$/;"	t	typeref:struct:_xmlHashTable
xmlEntitiesTablePtr	libxml\entities.h	/^typedef xmlEntitiesTable *xmlEntitiesTablePtr;$/;"	t
xmlEntityType	libxml\entities.h	/^} xmlEntityType;$/;"	t	typeref:enum:__anon18
__XML_GLOBALS_H	libxml\globals.h	15;"	d
_xmlGlobalState	libxml\globals.h	/^struct _xmlGlobalState$/;"	s
docbDefaultSAXHandler	libxml\globals.h	/^	xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState
docbDefaultSAXHandler	libxml\globals.h	/^XMLPUBVAR xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	v
docbDefaultSAXHandler	libxml\globals.h	253;"	d
docbDefaultSAXHandler	libxml\globals.h	67;"	d
htmlDefaultSAXHandler	libxml\globals.h	/^	xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState
htmlDefaultSAXHandler	libxml\globals.h	/^XMLPUBVAR xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	v
htmlDefaultSAXHandler	libxml\globals.h	263;"	d
htmlDefaultSAXHandler	libxml\globals.h	68;"	d
oldXMLWDcompatibility	libxml\globals.h	/^	int oldXMLWDcompatibility;$/;"	m	struct:_xmlGlobalState
oldXMLWDcompatibility	libxml\globals.h	/^XMLPUBVAR int oldXMLWDcompatibility;$/;"	v
oldXMLWDcompatibility	libxml\globals.h	287;"	d
oldXMLWDcompatibility	libxml\globals.h	69;"	d
xmlBufferAllocScheme	libxml\globals.h	/^	xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	m	struct:_xmlGlobalState
xmlBufferAllocScheme	libxml\globals.h	/^XMLPUBVAR xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	v
xmlBufferAllocScheme	libxml\globals.h	295;"	d
xmlBufferAllocScheme	libxml\globals.h	70;"	d
xmlDefaultBufferSize	libxml\globals.h	/^	int xmlDefaultBufferSize;$/;"	m	struct:_xmlGlobalState
xmlDefaultBufferSize	libxml\globals.h	/^XMLPUBVAR int xmlDefaultBufferSize;$/;"	v
xmlDefaultBufferSize	libxml\globals.h	304;"	d
xmlDefaultBufferSize	libxml\globals.h	71;"	d
xmlDefaultSAXHandler	libxml\globals.h	/^	xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState
xmlDefaultSAXHandler	libxml\globals.h	/^XMLPUBVAR xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	v
xmlDefaultSAXHandler	libxml\globals.h	313;"	d
xmlDefaultSAXHandler	libxml\globals.h	72;"	d
xmlDefaultSAXLocator	libxml\globals.h	/^	xmlSAXLocator xmlDefaultSAXLocator;$/;"	m	struct:_xmlGlobalState
xmlDefaultSAXLocator	libxml\globals.h	/^XMLPUBVAR xmlSAXLocator xmlDefaultSAXLocator;$/;"	v
xmlDefaultSAXLocator	libxml\globals.h	321;"	d
xmlDefaultSAXLocator	libxml\globals.h	73;"	d
xmlDeregisterNodeDefaultValue	libxml\globals.h	/^	xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlDeregisterNodeDefaultValue	libxml\globals.h	/^XMLPUBVAR xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	v
xmlDeregisterNodeDefaultValue	libxml\globals.h	476;"	d
xmlDeregisterNodeDefaultValue	libxml\globals.h	96;"	d
xmlDeregisterNodeFunc	libxml\globals.h	/^typedef void (*xmlDeregisterNodeFunc) (xmlNodePtr node);$/;"	t
xmlDoValidityCheckingDefaultValue	libxml\globals.h	/^	int xmlDoValidityCheckingDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlDoValidityCheckingDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlDoValidityCheckingDefaultValue;$/;"	v
xmlDoValidityCheckingDefaultValue	libxml\globals.h	329;"	d
xmlDoValidityCheckingDefaultValue	libxml\globals.h	74;"	d
xmlFree	libxml\globals.h	/^	xmlFreeFunc xmlFree;$/;"	m	struct:_xmlGlobalState
xmlFree	libxml\globals.h	/^XMLPUBVAR xmlFreeFunc xmlFree;$/;"	v
xmlFree	libxml\globals.h	228;"	d
xmlFree	libxml\globals.h	75;"	d
xmlGenericError	libxml\globals.h	/^	xmlGenericErrorFunc xmlGenericError;$/;"	m	struct:_xmlGlobalState
xmlGenericError	libxml\globals.h	/^XMLPUBVAR xmlGenericErrorFunc xmlGenericError;$/;"	v
xmlGenericError	libxml\globals.h	338;"	d
xmlGenericError	libxml\globals.h	76;"	d
xmlGenericErrorContext	libxml\globals.h	/^	void *xmlGenericErrorContext;$/;"	m	struct:_xmlGlobalState
xmlGenericErrorContext	libxml\globals.h	/^XMLPUBVAR void * xmlGenericErrorContext;$/;"	v
xmlGenericErrorContext	libxml\globals.h	354;"	d
xmlGenericErrorContext	libxml\globals.h	78;"	d
xmlGetWarningsDefaultValue	libxml\globals.h	/^	int xmlGetWarningsDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlGetWarningsDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlGetWarningsDefaultValue;$/;"	v
xmlGetWarningsDefaultValue	libxml\globals.h	370;"	d
xmlGetWarningsDefaultValue	libxml\globals.h	80;"	d
xmlGlobalState	libxml\globals.h	/^typedef struct _xmlGlobalState xmlGlobalState;$/;"	t	typeref:struct:_xmlGlobalState
xmlGlobalStatePtr	libxml\globals.h	/^typedef xmlGlobalState *xmlGlobalStatePtr;$/;"	t
xmlIndentTreeOutput	libxml\globals.h	/^	int xmlIndentTreeOutput;$/;"	m	struct:_xmlGlobalState
xmlIndentTreeOutput	libxml\globals.h	/^XMLPUBVAR int xmlIndentTreeOutput;$/;"	v
xmlIndentTreeOutput	libxml\globals.h	379;"	d
xmlIndentTreeOutput	libxml\globals.h	81;"	d
xmlKeepBlanksDefaultValue	libxml\globals.h	/^	int xmlKeepBlanksDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlKeepBlanksDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlKeepBlanksDefaultValue;$/;"	v
xmlKeepBlanksDefaultValue	libxml\globals.h	397;"	d
xmlKeepBlanksDefaultValue	libxml\globals.h	83;"	d
xmlLastError	libxml\globals.h	/^	xmlError xmlLastError;$/;"	m	struct:_xmlGlobalState
xmlLastError	libxml\globals.h	/^XMLPUBVAR xmlError xmlLastError;$/;"	v
xmlLastError	libxml\globals.h	272;"	d
xmlLastError	libxml\globals.h	97;"	d
xmlLineNumbersDefaultValue	libxml\globals.h	/^	int xmlLineNumbersDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlLineNumbersDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlLineNumbersDefaultValue;$/;"	v
xmlLineNumbersDefaultValue	libxml\globals.h	406;"	d
xmlLineNumbersDefaultValue	libxml\globals.h	84;"	d
xmlLoadExtDtdDefaultValue	libxml\globals.h	/^	int xmlLoadExtDtdDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlLoadExtDtdDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlLoadExtDtdDefaultValue;$/;"	v
xmlLoadExtDtdDefaultValue	libxml\globals.h	415;"	d
xmlLoadExtDtdDefaultValue	libxml\globals.h	85;"	d
xmlMalloc	libxml\globals.h	/^	xmlMallocFunc xmlMalloc;$/;"	m	struct:_xmlGlobalState
xmlMalloc	libxml\globals.h	/^XMLPUBVAR xmlMallocFunc xmlMalloc;$/;"	v
xmlMalloc	libxml\globals.h	204;"	d
xmlMalloc	libxml\globals.h	86;"	d
xmlMallocAtomic	libxml\globals.h	/^	xmlMallocFunc xmlMallocAtomic;$/;"	m	struct:_xmlGlobalState
xmlMallocAtomic	libxml\globals.h	/^XMLPUBVAR xmlMallocFunc xmlMallocAtomic;$/;"	v
xmlMallocAtomic	libxml\globals.h	212;"	d
xmlMallocAtomic	libxml\globals.h	87;"	d
xmlMemStrdup	libxml\globals.h	/^	xmlStrdupFunc xmlMemStrdup;$/;"	m	struct:_xmlGlobalState
xmlMemStrdup	libxml\globals.h	/^XMLPUBVAR xmlStrdupFunc xmlMemStrdup;$/;"	v
xmlMemStrdup	libxml\globals.h	236;"	d
xmlMemStrdup	libxml\globals.h	88;"	d
xmlOutputBufferCreateFilenameFunc	libxml\globals.h	/^typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc) (const char *URI, xmlCharEncodingHandlerPtr encoder, int compression);$/;"	t
xmlOutputBufferCreateFilenameValue	libxml\globals.h	/^	xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState
xmlOutputBufferCreateFilenameValue	libxml\globals.h	/^XMLPUBVAR xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	v
xmlOutputBufferCreateFilenameValue	libxml\globals.h	492;"	d
xmlOutputBufferCreateFilenameValue	libxml\globals.h	99;"	d
xmlParserDebugEntities	libxml\globals.h	/^	int xmlParserDebugEntities;$/;"	m	struct:_xmlGlobalState
xmlParserDebugEntities	libxml\globals.h	/^XMLPUBVAR int xmlParserDebugEntities;$/;"	v
xmlParserDebugEntities	libxml\globals.h	424;"	d
xmlParserDebugEntities	libxml\globals.h	89;"	d
xmlParserInputBufferCreateFilenameFunc	libxml\globals.h	/^typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc) (const char *URI, xmlCharEncoding enc);$/;"	t
xmlParserInputBufferCreateFilenameValue	libxml\globals.h	/^	xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState
xmlParserInputBufferCreateFilenameValue	libxml\globals.h	/^XMLPUBVAR xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	v
xmlParserInputBufferCreateFilenameValue	libxml\globals.h	484;"	d
xmlParserInputBufferCreateFilenameValue	libxml\globals.h	98;"	d
xmlParserVersion	libxml\globals.h	/^	const char *xmlParserVersion;$/;"	m	struct:_xmlGlobalState
xmlParserVersion	libxml\globals.h	/^XMLPUBVAR const char * xmlParserVersion;$/;"	v
xmlParserVersion	libxml\globals.h	433;"	d
xmlParserVersion	libxml\globals.h	90;"	d
xmlPedanticParserDefaultValue	libxml\globals.h	/^	int xmlPedanticParserDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlPedanticParserDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlPedanticParserDefaultValue;$/;"	v
xmlPedanticParserDefaultValue	libxml\globals.h	441;"	d
xmlPedanticParserDefaultValue	libxml\globals.h	91;"	d
xmlRealloc	libxml\globals.h	/^	xmlReallocFunc xmlRealloc;$/;"	m	struct:_xmlGlobalState
xmlRealloc	libxml\globals.h	/^XMLPUBVAR xmlReallocFunc xmlRealloc;$/;"	v
xmlRealloc	libxml\globals.h	220;"	d
xmlRealloc	libxml\globals.h	92;"	d
xmlRegisterNodeDefaultValue	libxml\globals.h	/^	xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlRegisterNodeDefaultValue	libxml\globals.h	/^XMLPUBVAR xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	v
xmlRegisterNodeDefaultValue	libxml\globals.h	468;"	d
xmlRegisterNodeDefaultValue	libxml\globals.h	95;"	d
xmlRegisterNodeFunc	libxml\globals.h	/^typedef void (*xmlRegisterNodeFunc) (xmlNodePtr node);$/;"	t
xmlSaveNoEmptyTags	libxml\globals.h	/^	int xmlSaveNoEmptyTags;$/;"	m	struct:_xmlGlobalState
xmlSaveNoEmptyTags	libxml\globals.h	/^XMLPUBVAR int xmlSaveNoEmptyTags;$/;"	v
xmlSaveNoEmptyTags	libxml\globals.h	450;"	d
xmlSaveNoEmptyTags	libxml\globals.h	93;"	d
xmlStructuredError	libxml\globals.h	/^	xmlStructuredErrorFunc xmlStructuredError;$/;"	m	struct:_xmlGlobalState
xmlStructuredError	libxml\globals.h	/^XMLPUBVAR xmlStructuredErrorFunc xmlStructuredError;$/;"	v
xmlStructuredError	libxml\globals.h	346;"	d
xmlStructuredError	libxml\globals.h	77;"	d
xmlStructuredErrorContext	libxml\globals.h	/^	void *xmlStructuredErrorContext;$/;"	m	struct:_xmlGlobalState
xmlStructuredErrorContext	libxml\globals.h	/^XMLPUBVAR void * xmlStructuredErrorContext;$/;"	v
xmlStructuredErrorContext	libxml\globals.h	362;"	d
xmlStructuredErrorContext	libxml\globals.h	79;"	d
xmlSubstituteEntitiesDefaultValue	libxml\globals.h	/^	int xmlSubstituteEntitiesDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlSubstituteEntitiesDefaultValue	libxml\globals.h	/^XMLPUBVAR int xmlSubstituteEntitiesDefaultValue;$/;"	v
xmlSubstituteEntitiesDefaultValue	libxml\globals.h	459;"	d
xmlSubstituteEntitiesDefaultValue	libxml\globals.h	94;"	d
xmlTreeIndentString	libxml\globals.h	/^	const char *xmlTreeIndentString;$/;"	m	struct:_xmlGlobalState
xmlTreeIndentString	libxml\globals.h	/^XMLPUBVAR const char * xmlTreeIndentString;$/;"	v
xmlTreeIndentString	libxml\globals.h	388;"	d
xmlTreeIndentString	libxml\globals.h	82;"	d
XML_CAST_FPTR	libxml\hash.h	56;"	d
__XML_HASH_H__	libxml\hash.h	12;"	d
xmlHashCopier	libxml\hash.h	/^typedef void *(*xmlHashCopier)(void *payload, xmlChar *name);$/;"	t
xmlHashDeallocator	libxml\hash.h	/^typedef void (*xmlHashDeallocator)(void *payload, xmlChar *name);$/;"	t
xmlHashScanner	libxml\hash.h	/^typedef void (*xmlHashScanner)(void *payload, void *data, xmlChar *name);$/;"	t
xmlHashScannerFull	libxml\hash.h	/^typedef void (*xmlHashScannerFull)(void *payload, void *data,$/;"	t
xmlHashTable	libxml\hash.h	/^typedef struct _xmlHashTable xmlHashTable;$/;"	t	typeref:struct:_xmlHashTable
xmlHashTablePtr	libxml\hash.h	/^typedef xmlHashTable *xmlHashTablePtr;$/;"	t
__XML_LINK_INCLUDE__	libxml\list.h	12;"	d
xmlLink	libxml\list.h	/^typedef struct _xmlLink xmlLink;$/;"	t	typeref:struct:_xmlLink
xmlLinkPtr	libxml\list.h	/^typedef xmlLink *xmlLinkPtr;$/;"	t
xmlList	libxml\list.h	/^typedef struct _xmlList xmlList;$/;"	t	typeref:struct:_xmlList
xmlListDataCompare	libxml\list.h	/^typedef int  (*xmlListDataCompare) (const void *data0, const void *data1);$/;"	t
xmlListDeallocator	libxml\list.h	/^typedef void (*xmlListDeallocator) (xmlLinkPtr lk);$/;"	t
xmlListPtr	libxml\list.h	/^typedef xmlList *xmlListPtr;$/;"	t
xmlListWalker	libxml\list.h	/^typedef int (*xmlListWalker) (const void *data, const void *user);$/;"	t
INVALID_SOCKET	libxml\nanoftp.h	34;"	d
SOCKET	libxml\nanoftp.h	27;"	d
__NANO_FTP_H__	libxml\nanoftp.h	12;"	d
ftpDataCallback	libxml\nanoftp.h	/^typedef void (*ftpDataCallback) (void *userData,$/;"	t
ftpListCallback	libxml\nanoftp.h	/^typedef void (*ftpListCallback) (void *userData,$/;"	t
__NANO_HTTP_H__	libxml\nanohttp.h	12;"	d
XML_COMPLETE_ATTRS	libxml\parser.h	148;"	d
XML_DEFAULT_VERSION	libxml\parser.h	33;"	d
XML_DETECT_IDS	libxml\parser.h	139;"	d
XML_PARSER_ATTRIBUTE_VALUE	libxml\parser.h	/^    XML_PARSER_ATTRIBUTE_VALUE,	\/* within an attribute value *\/$/;"	e	enum:__anon21
XML_PARSER_CDATA_SECTION	libxml\parser.h	/^    XML_PARSER_CDATA_SECTION,	\/* within a CDATA section *\/$/;"	e	enum:__anon21
XML_PARSER_COMMENT	libxml\parser.h	/^    XML_PARSER_COMMENT,		\/* within a comment *\/$/;"	e	enum:__anon21
XML_PARSER_CONTENT	libxml\parser.h	/^    XML_PARSER_CONTENT,		\/* within the content *\/$/;"	e	enum:__anon21
XML_PARSER_DTD	libxml\parser.h	/^    XML_PARSER_DTD,		\/* within some DTD content *\/$/;"	e	enum:__anon21
XML_PARSER_END_TAG	libxml\parser.h	/^    XML_PARSER_END_TAG,		\/* within a closing tag *\/$/;"	e	enum:__anon21
XML_PARSER_ENTITY_DECL	libxml\parser.h	/^    XML_PARSER_ENTITY_DECL,	\/* within an entity declaration *\/$/;"	e	enum:__anon21
XML_PARSER_ENTITY_VALUE	libxml\parser.h	/^    XML_PARSER_ENTITY_VALUE,	\/* within an entity value in a decl *\/$/;"	e	enum:__anon21
XML_PARSER_EOF	libxml\parser.h	/^    XML_PARSER_EOF = -1,	\/* nothing is to be parsed *\/$/;"	e	enum:__anon21
XML_PARSER_EPILOG	libxml\parser.h	/^    XML_PARSER_EPILOG, 		\/* the Misc* after the last end tag *\/$/;"	e	enum:__anon21
XML_PARSER_IGNORE	libxml\parser.h	/^    XML_PARSER_IGNORE,		\/* within an IGNORED section *\/$/;"	e	enum:__anon21
XML_PARSER_MISC	libxml\parser.h	/^    XML_PARSER_MISC,		\/* Misc* before int subset *\/$/;"	e	enum:__anon21
XML_PARSER_PI	libxml\parser.h	/^    XML_PARSER_PI,		\/* Within a processing instruction *\/$/;"	e	enum:__anon21
XML_PARSER_PROLOG	libxml\parser.h	/^    XML_PARSER_PROLOG,		\/* Misc* after internal subset *\/$/;"	e	enum:__anon21
XML_PARSER_PUBLIC_LITERAL	libxml\parser.h	/^    XML_PARSER_PUBLIC_LITERAL 	\/* within a PUBLIC value *\/$/;"	e	enum:__anon21
XML_PARSER_START	libxml\parser.h	/^    XML_PARSER_START = 0,	\/* nothing has been parsed *\/$/;"	e	enum:__anon21
XML_PARSER_START_TAG	libxml\parser.h	/^    XML_PARSER_START_TAG,	\/* within a start tag *\/$/;"	e	enum:__anon21
XML_PARSER_SYSTEM_LITERAL	libxml\parser.h	/^    XML_PARSER_SYSTEM_LITERAL,	\/* within a SYSTEM value *\/$/;"	e	enum:__anon21
XML_PARSE_COMPACT	libxml\parser.h	/^    XML_PARSE_COMPACT   = 1<<16,\/* compact small text nodes; no modification of$/;"	e	enum:__anon23
XML_PARSE_DOM	libxml\parser.h	/^    XML_PARSE_DOM = 1,$/;"	e	enum:__anon22
XML_PARSE_DTDATTR	libxml\parser.h	/^    XML_PARSE_DTDATTR	= 1<<3,	\/* default DTD attributes *\/$/;"	e	enum:__anon23
XML_PARSE_DTDLOAD	libxml\parser.h	/^    XML_PARSE_DTDLOAD	= 1<<2,	\/* load the external subset *\/$/;"	e	enum:__anon23
XML_PARSE_DTDVALID	libxml\parser.h	/^    XML_PARSE_DTDVALID	= 1<<4,	\/* validate with the DTD *\/$/;"	e	enum:__anon23
XML_PARSE_HUGE	libxml\parser.h	/^    XML_PARSE_HUGE      = 1<<19, \/* relax any hardcoded limit from the parser *\/$/;"	e	enum:__anon23
XML_PARSE_NOBASEFIX	libxml\parser.h	/^    XML_PARSE_NOBASEFIX = 1<<18,\/* do not fixup XINCLUDE xml:base uris *\/$/;"	e	enum:__anon23
XML_PARSE_NOBLANKS	libxml\parser.h	/^    XML_PARSE_NOBLANKS	= 1<<8,	\/* remove blank nodes *\/$/;"	e	enum:__anon23
XML_PARSE_NOCDATA	libxml\parser.h	/^    XML_PARSE_NOCDATA	= 1<<14,\/* merge CDATA as text nodes *\/$/;"	e	enum:__anon23
XML_PARSE_NODICT	libxml\parser.h	/^    XML_PARSE_NODICT	= 1<<12,\/* Do not reuse the context dictionnary *\/$/;"	e	enum:__anon23
XML_PARSE_NOENT	libxml\parser.h	/^    XML_PARSE_NOENT	= 1<<1,	\/* substitute entities *\/$/;"	e	enum:__anon23
XML_PARSE_NOERROR	libxml\parser.h	/^    XML_PARSE_NOERROR	= 1<<5,	\/* suppress error reports *\/$/;"	e	enum:__anon23
XML_PARSE_NONET	libxml\parser.h	/^    XML_PARSE_NONET	= 1<<11,\/* Forbid network access *\/$/;"	e	enum:__anon23
XML_PARSE_NOWARNING	libxml\parser.h	/^    XML_PARSE_NOWARNING	= 1<<6,	\/* suppress warning reports *\/$/;"	e	enum:__anon23
XML_PARSE_NOXINCNODE	libxml\parser.h	/^    XML_PARSE_NOXINCNODE= 1<<15,\/* do not generate XINCLUDE START\/END nodes *\/$/;"	e	enum:__anon23
XML_PARSE_NSCLEAN	libxml\parser.h	/^    XML_PARSE_NSCLEAN	= 1<<13,\/* remove redundant namespaces declarations *\/$/;"	e	enum:__anon23
XML_PARSE_OLD10	libxml\parser.h	/^    XML_PARSE_OLD10	= 1<<17,\/* parse using XML-1.0 before update 5 *\/$/;"	e	enum:__anon23
XML_PARSE_OLDSAX	libxml\parser.h	/^    XML_PARSE_OLDSAX    = 1<<20 \/* parse using SAX2 interface from before 2.7.0 *\/$/;"	e	enum:__anon23
XML_PARSE_PEDANTIC	libxml\parser.h	/^    XML_PARSE_PEDANTIC	= 1<<7,	\/* pedantic error reporting *\/$/;"	e	enum:__anon23
XML_PARSE_PUSH_DOM	libxml\parser.h	/^    XML_PARSE_PUSH_DOM = 3,$/;"	e	enum:__anon22
XML_PARSE_PUSH_SAX	libxml\parser.h	/^    XML_PARSE_PUSH_SAX = 4,$/;"	e	enum:__anon22
XML_PARSE_READER	libxml\parser.h	/^    XML_PARSE_READER = 5$/;"	e	enum:__anon22
XML_PARSE_RECOVER	libxml\parser.h	/^    XML_PARSE_RECOVER	= 1<<0,	\/* recover on errors *\/$/;"	e	enum:__anon23
XML_PARSE_SAX	libxml\parser.h	/^    XML_PARSE_SAX = 2,$/;"	e	enum:__anon22
XML_PARSE_SAX1	libxml\parser.h	/^    XML_PARSE_SAX1	= 1<<9,	\/* use the SAX1 interface internally *\/$/;"	e	enum:__anon23
XML_PARSE_UNKNOWN	libxml\parser.h	/^    XML_PARSE_UNKNOWN = 0,$/;"	e	enum:__anon22
XML_PARSE_XINCLUDE	libxml\parser.h	/^    XML_PARSE_XINCLUDE	= 1<<10,\/* Implement XInclude substitition  *\/$/;"	e	enum:__anon23
XML_SAX2_MAGIC	libxml\parser.h	668;"	d
XML_SKIP_IDS	libxml\parser.h	156;"	d
XML_WITH_AUTOMATA	libxml\parser.h	/^    XML_WITH_AUTOMATA = 23,$/;"	e	enum:__anon24
XML_WITH_C14N	libxml\parser.h	/^    XML_WITH_C14N = 14,$/;"	e	enum:__anon24
XML_WITH_CATALOG	libxml\parser.h	/^    XML_WITH_CATALOG = 15,$/;"	e	enum:__anon24
XML_WITH_DEBUG	libxml\parser.h	/^    XML_WITH_DEBUG = 28,$/;"	e	enum:__anon24
XML_WITH_DEBUG_MEM	libxml\parser.h	/^    XML_WITH_DEBUG_MEM = 29,$/;"	e	enum:__anon24
XML_WITH_DEBUG_RUN	libxml\parser.h	/^    XML_WITH_DEBUG_RUN = 30,$/;"	e	enum:__anon24
XML_WITH_EXPR	libxml\parser.h	/^    XML_WITH_EXPR = 24,$/;"	e	enum:__anon24
XML_WITH_FTP	libxml\parser.h	/^    XML_WITH_FTP = 9,$/;"	e	enum:__anon24
XML_WITH_HTML	libxml\parser.h	/^    XML_WITH_HTML = 12,$/;"	e	enum:__anon24
XML_WITH_HTTP	libxml\parser.h	/^    XML_WITH_HTTP = 10,$/;"	e	enum:__anon24
XML_WITH_ICONV	libxml\parser.h	/^    XML_WITH_ICONV = 19,$/;"	e	enum:__anon24
XML_WITH_ICU	libxml\parser.h	/^    XML_WITH_ICU = 32,$/;"	e	enum:__anon24
XML_WITH_ISO8859X	libxml\parser.h	/^    XML_WITH_ISO8859X = 20,$/;"	e	enum:__anon24
XML_WITH_LEGACY	libxml\parser.h	/^    XML_WITH_LEGACY = 13,$/;"	e	enum:__anon24
XML_WITH_MODULES	libxml\parser.h	/^    XML_WITH_MODULES = 27,$/;"	e	enum:__anon24
XML_WITH_NONE	libxml\parser.h	/^    XML_WITH_NONE = 99999 \/* just to be sure of allocation size *\/$/;"	e	enum:__anon24
XML_WITH_OUTPUT	libxml\parser.h	/^    XML_WITH_OUTPUT = 3,$/;"	e	enum:__anon24
XML_WITH_PATTERN	libxml\parser.h	/^    XML_WITH_PATTERN = 6,$/;"	e	enum:__anon24
XML_WITH_PUSH	libxml\parser.h	/^    XML_WITH_PUSH = 4,$/;"	e	enum:__anon24
XML_WITH_READER	libxml\parser.h	/^    XML_WITH_READER = 5,$/;"	e	enum:__anon24
XML_WITH_REGEXP	libxml\parser.h	/^    XML_WITH_REGEXP = 22,$/;"	e	enum:__anon24
XML_WITH_SAX1	libxml\parser.h	/^    XML_WITH_SAX1 = 8,$/;"	e	enum:__anon24
XML_WITH_SCHEMAS	libxml\parser.h	/^    XML_WITH_SCHEMAS = 25,$/;"	e	enum:__anon24
XML_WITH_SCHEMATRON	libxml\parser.h	/^    XML_WITH_SCHEMATRON = 26,$/;"	e	enum:__anon24
XML_WITH_THREAD	libxml\parser.h	/^    XML_WITH_THREAD = 1,$/;"	e	enum:__anon24
XML_WITH_TREE	libxml\parser.h	/^    XML_WITH_TREE = 2,$/;"	e	enum:__anon24
XML_WITH_UNICODE	libxml\parser.h	/^    XML_WITH_UNICODE = 21,$/;"	e	enum:__anon24
XML_WITH_VALID	libxml\parser.h	/^    XML_WITH_VALID = 11,$/;"	e	enum:__anon24
XML_WITH_WRITER	libxml\parser.h	/^    XML_WITH_WRITER = 7,$/;"	e	enum:__anon24
XML_WITH_XINCLUDE	libxml\parser.h	/^    XML_WITH_XINCLUDE = 18,$/;"	e	enum:__anon24
XML_WITH_XPATH	libxml\parser.h	/^    XML_WITH_XPATH = 16,$/;"	e	enum:__anon24
XML_WITH_XPTR	libxml\parser.h	/^    XML_WITH_XPTR = 17,$/;"	e	enum:__anon24
XML_WITH_ZLIB	libxml\parser.h	/^    XML_WITH_ZLIB = 31,$/;"	e	enum:__anon24
__XML_PARSER_H__	libxml\parser.h	11;"	d
_private	libxml\parser.h	/^    void              *_private;      \/* For user data, libxml won't touch it *\/$/;"	m	struct:_xmlParserCtxt
_private	libxml\parser.h	/^    void *_private;$/;"	m	struct:_xmlSAXHandler
_xmlParserCtxt	libxml\parser.h	/^struct _xmlParserCtxt {$/;"	s
_xmlParserInput	libxml\parser.h	/^struct _xmlParserInput {$/;"	s
_xmlParserNodeInfo	libxml\parser.h	/^struct _xmlParserNodeInfo {$/;"	s
_xmlParserNodeInfoSeq	libxml\parser.h	/^struct _xmlParserNodeInfoSeq {$/;"	s
_xmlSAXHandler	libxml\parser.h	/^struct _xmlSAXHandler {$/;"	s
_xmlSAXHandlerV1	libxml\parser.h	/^struct _xmlSAXHandlerV1 {$/;"	s
_xmlSAXLocator	libxml\parser.h	/^struct _xmlSAXLocator {$/;"	s
attallocs	libxml\parser.h	/^    int               *attallocs;     \/* which attribute were allocated *\/$/;"	m	struct:_xmlParserCtxt
attributeDecl	libxml\parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandler
attributeDecl	libxml\parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandlerV1
attributeDeclSAXFunc	libxml\parser.h	/^typedef void (*attributeDeclSAXFunc)(void *ctx,$/;"	t
attributeSAXFunc	libxml\parser.h	/^typedef void (*attributeSAXFunc) (void *ctx,$/;"	t
atts	libxml\parser.h	/^    const xmlChar *   *atts;          \/* array for the attributes callbacks *\/$/;"	m	struct:_xmlParserCtxt
attsDefault	libxml\parser.h	/^    xmlHashTablePtr    attsDefault;   \/* defaulted attributes if any *\/$/;"	m	struct:_xmlParserCtxt
attsSpecial	libxml\parser.h	/^    xmlHashTablePtr    attsSpecial;   \/* non-CDATA attributes if any *\/$/;"	m	struct:_xmlParserCtxt
base	libxml\parser.h	/^    const xmlChar *base;              \/* Base of the array to parse *\/$/;"	m	struct:_xmlParserInput
begin_line	libxml\parser.h	/^  unsigned long begin_line;$/;"	m	struct:_xmlParserNodeInfo
begin_pos	libxml\parser.h	/^  unsigned long begin_pos;$/;"	m	struct:_xmlParserNodeInfo
buf	libxml\parser.h	/^    xmlParserInputBufferPtr buf;      \/* UTF-8 encoded buffer *\/$/;"	m	struct:_xmlParserInput
buffer	libxml\parser.h	/^  xmlParserNodeInfo* buffer;$/;"	m	struct:_xmlParserNodeInfoSeq
catalogs	libxml\parser.h	/^    void              *catalogs;      \/* document's own catalog *\/$/;"	m	struct:_xmlParserCtxt
cdataBlock	libxml\parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandler
cdataBlock	libxml\parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandlerV1
cdataBlockSAXFunc	libxml\parser.h	/^typedef void (*cdataBlockSAXFunc) ($/;"	t
characters	libxml\parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandler
characters	libxml\parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandlerV1
charactersSAXFunc	libxml\parser.h	/^typedef void (*charactersSAXFunc) (void *ctx,$/;"	t
charset	libxml\parser.h	/^    int                charset;       \/* encoding of the in-memory content$/;"	m	struct:_xmlParserCtxt
checkIndex	libxml\parser.h	/^    long            checkIndex;       \/* used by progressive parsing lookup *\/$/;"	m	struct:_xmlParserCtxt
col	libxml\parser.h	/^    int col;                          \/* Current column *\/$/;"	m	struct:_xmlParserInput
comment	libxml\parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandler
comment	libxml\parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandlerV1
commentSAXFunc	libxml\parser.h	/^typedef void (*commentSAXFunc) (void *ctx,$/;"	t
consumed	libxml\parser.h	/^    unsigned long consumed;           \/* How many xmlChars already consumed *\/$/;"	m	struct:_xmlParserInput
cur	libxml\parser.h	/^    const xmlChar *cur;               \/* Current char being parsed *\/$/;"	m	struct:_xmlParserInput
depth	libxml\parser.h	/^    int                depth;         \/* to prevent entity substitution loops *\/$/;"	m	struct:_xmlParserCtxt
dict	libxml\parser.h	/^    xmlDictPtr         dict;          \/* dictionnary for the parser *\/$/;"	m	struct:_xmlParserCtxt
dictNames	libxml\parser.h	/^    int               dictNames;    \/* Use dictionary names for the tree *\/$/;"	m	struct:_xmlParserCtxt
directory	libxml\parser.h	/^    char           *directory;        \/* the data directory *\/$/;"	m	struct:_xmlParserCtxt
directory	libxml\parser.h	/^    const char *directory;            \/* the directory\/base of the file *\/$/;"	m	struct:_xmlParserInput
disableSAX	libxml\parser.h	/^    int             disableSAX;       \/* SAX callbacks are disabled *\/$/;"	m	struct:_xmlParserCtxt
docdict	libxml\parser.h	/^    int                docdict;       \/* use strings from dict to build tree *\/$/;"	m	struct:_xmlParserCtxt
elementDecl	libxml\parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandler
elementDecl	libxml\parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandlerV1
elementDeclSAXFunc	libxml\parser.h	/^typedef void (*elementDeclSAXFunc)(void *ctx,$/;"	t
encoding	libxml\parser.h	/^    const xmlChar   *encoding;        \/* the declared encoding, if any *\/$/;"	m	struct:_xmlParserCtxt
encoding	libxml\parser.h	/^    const xmlChar *encoding;          \/* the encoding string for entity *\/$/;"	m	struct:_xmlParserInput
end	libxml\parser.h	/^    const xmlChar *end;               \/* end of the array to parse *\/$/;"	m	struct:_xmlParserInput
endDocument	libxml\parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandler
endDocument	libxml\parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandlerV1
endDocumentSAXFunc	libxml\parser.h	/^typedef void (*endDocumentSAXFunc) (void *ctx);$/;"	t
endElement	libxml\parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandler
endElement	libxml\parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandlerV1
endElementNs	libxml\parser.h	/^    endElementNsSAX2Func endElementNs;$/;"	m	struct:_xmlSAXHandler
endElementNsSAX2Func	libxml\parser.h	/^typedef void (*endElementNsSAX2Func)   (void *ctx,$/;"	t
endElementSAXFunc	libxml\parser.h	/^typedef void (*endElementSAXFunc) (void *ctx,$/;"	t
end_line	libxml\parser.h	/^  unsigned long end_line;$/;"	m	struct:_xmlParserNodeInfo
end_pos	libxml\parser.h	/^  unsigned long end_pos;$/;"	m	struct:_xmlParserNodeInfo
entity	libxml\parser.h	/^    xmlParserInputPtr  entity;        \/* used to check entities boundaries *\/$/;"	m	struct:_xmlParserCtxt
entityDecl	libxml\parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandler
entityDecl	libxml\parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandlerV1
entityDeclSAXFunc	libxml\parser.h	/^typedef void (*entityDeclSAXFunc) (void *ctx,$/;"	t
errNo	libxml\parser.h	/^    int errNo;                        \/* error code *\/$/;"	m	struct:_xmlParserCtxt
error	libxml\parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandler
error	libxml\parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandlerV1
extSubSystem	libxml\parser.h	/^    xmlChar *          extSubSystem;  \/* SYSTEM ID of external subset *\/$/;"	m	struct:_xmlParserCtxt
extSubURI	libxml\parser.h	/^    xmlChar *          extSubURI;     \/* URI of external subset *\/$/;"	m	struct:_xmlParserCtxt
external	libxml\parser.h	/^    int              external;        \/* are we parsing an external entity *\/$/;"	m	struct:_xmlParserCtxt
externalSubset	libxml\parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandler
externalSubset	libxml\parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandlerV1
externalSubsetSAXFunc	libxml\parser.h	/^typedef void (*externalSubsetSAXFunc) (void *ctx,$/;"	t
fatalError	libxml\parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandler
fatalError	libxml\parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandlerV1
filename	libxml\parser.h	/^    const char *filename;             \/* The file analyzed, if any *\/$/;"	m	struct:_xmlParserInput
free	libxml\parser.h	/^    xmlParserInputDeallocate free;    \/* function to deallocate the base *\/$/;"	m	struct:_xmlParserInput
freeAttrs	libxml\parser.h	/^    xmlAttrPtr        freeAttrs;    \/* List of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt
freeAttrsNr	libxml\parser.h	/^    int               freeAttrsNr;  \/* number of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt
freeElems	libxml\parser.h	/^    xmlNodePtr        freeElems;    \/* List of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt
freeElemsNr	libxml\parser.h	/^    int               freeElemsNr;  \/* number of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt
getColumnNumber	libxml\parser.h	/^    int (*getColumnNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getEntity	libxml\parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandler
getEntity	libxml\parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandlerV1
getEntitySAXFunc	libxml\parser.h	/^typedef xmlEntityPtr (*getEntitySAXFunc) (void *ctx,$/;"	t
getLineNumber	libxml\parser.h	/^    int (*getLineNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getParameterEntity	libxml\parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandler
getParameterEntity	libxml\parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandlerV1
getParameterEntitySAXFunc	libxml\parser.h	/^typedef xmlEntityPtr (*getParameterEntitySAXFunc) (void *ctx,$/;"	t
getPublicId	libxml\parser.h	/^    const xmlChar *(*getPublicId)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getSystemId	libxml\parser.h	/^    const xmlChar *(*getSystemId)(void *ctx);$/;"	m	struct:_xmlSAXLocator
hasExternalSubset	libxml\parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandler
hasExternalSubset	libxml\parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandlerV1
hasExternalSubset	libxml\parser.h	/^    int     hasExternalSubset;        \/* reference and external subset *\/$/;"	m	struct:_xmlParserCtxt
hasExternalSubsetSAXFunc	libxml\parser.h	/^typedef int (*hasExternalSubsetSAXFunc) (void *ctx);$/;"	t
hasInternalSubset	libxml\parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandler
hasInternalSubset	libxml\parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandlerV1
hasInternalSubsetSAXFunc	libxml\parser.h	/^typedef int (*hasInternalSubsetSAXFunc) (void *ctx);$/;"	t
hasPErefs	libxml\parser.h	/^    int             hasPErefs;        \/* the internal subset has PE refs *\/$/;"	m	struct:_xmlParserCtxt
html	libxml\parser.h	/^    int                  html;        \/* an HTML(1)\/Docbook(2) document$/;"	m	struct:_xmlParserCtxt
id	libxml\parser.h	/^    int id;                           \/* an unique identifier for the entity *\/$/;"	m	struct:_xmlParserInput
ignorableWhitespace	libxml\parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandler
ignorableWhitespace	libxml\parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandlerV1
ignorableWhitespaceSAXFunc	libxml\parser.h	/^typedef void (*ignorableWhitespaceSAXFunc) (void *ctx,$/;"	t
inSubset	libxml\parser.h	/^    int               inSubset;       \/* Parsing is in int 1\/ext 2 subset *\/$/;"	m	struct:_xmlParserCtxt
initialized	libxml\parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandler
initialized	libxml\parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandlerV1
input	libxml\parser.h	/^    xmlParserInputPtr  input;         \/* Current input stream *\/$/;"	m	struct:_xmlParserCtxt
inputMax	libxml\parser.h	/^    int                inputMax;      \/* Max number of input streams *\/$/;"	m	struct:_xmlParserCtxt
inputNr	libxml\parser.h	/^    int                inputNr;       \/* Number of current input streams *\/$/;"	m	struct:_xmlParserCtxt
inputTab	libxml\parser.h	/^    xmlParserInputPtr *inputTab;      \/* stack of inputs *\/$/;"	m	struct:_xmlParserCtxt
instate	libxml\parser.h	/^    xmlParserInputState instate;      \/* current type of input *\/$/;"	m	struct:_xmlParserCtxt
intSubName	libxml\parser.h	/^    const xmlChar *    intSubName;    \/* name of subset *\/$/;"	m	struct:_xmlParserCtxt
internalSubset	libxml\parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandler
internalSubset	libxml\parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandlerV1
internalSubsetSAXFunc	libxml\parser.h	/^typedef void (*internalSubsetSAXFunc) (void *ctx,$/;"	t
isStandalone	libxml\parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandler
isStandalone	libxml\parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandlerV1
isStandaloneSAXFunc	libxml\parser.h	/^typedef int (*isStandaloneSAXFunc) (void *ctx);$/;"	t
keepBlanks	libxml\parser.h	/^    int             keepBlanks;       \/* ugly but ... *\/$/;"	m	struct:_xmlParserCtxt
lastError	libxml\parser.h	/^    xmlError          lastError;$/;"	m	struct:_xmlParserCtxt
length	libxml\parser.h	/^    int length;                       \/* length if known *\/$/;"	m	struct:_xmlParserInput
length	libxml\parser.h	/^  unsigned long length;$/;"	m	struct:_xmlParserNodeInfoSeq
line	libxml\parser.h	/^    int line;                         \/* Current line *\/$/;"	m	struct:_xmlParserInput
linenumbers	libxml\parser.h	/^    int                linenumbers;   \/* set line number in element content *\/$/;"	m	struct:_xmlParserCtxt
loadsubset	libxml\parser.h	/^    int                loadsubset;    \/* should the external subset be loaded *\/$/;"	m	struct:_xmlParserCtxt
maxatts	libxml\parser.h	/^    int                maxatts;       \/* the size of the array *\/$/;"	m	struct:_xmlParserCtxt
maximum	libxml\parser.h	/^  unsigned long maximum;$/;"	m	struct:_xmlParserNodeInfoSeq
myDoc	libxml\parser.h	/^    xmlDocPtr           myDoc;        \/* the document being built *\/$/;"	m	struct:_xmlParserCtxt
name	libxml\parser.h	/^    const xmlChar     *name;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt
nameMax	libxml\parser.h	/^    int                nameMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nameNr	libxml\parser.h	/^    int                nameNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nameTab	libxml\parser.h	/^    const xmlChar *   *nameTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt
nbChars	libxml\parser.h	/^    long               nbChars;       \/* number of xmlChar processed *\/$/;"	m	struct:_xmlParserCtxt
nbentities	libxml\parser.h	/^    unsigned long    nbentities;    \/* number of entities references *\/$/;"	m	struct:_xmlParserCtxt
node	libxml\parser.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt
node	libxml\parser.h	/^  const struct _xmlNode* node;$/;"	m	struct:_xmlParserNodeInfo	typeref:struct:_xmlParserNodeInfo::_xmlNode
nodeInfo	libxml\parser.h	/^    xmlParserNodeInfo *nodeInfo;      \/* Current NodeInfo *\/$/;"	m	struct:_xmlParserCtxt
nodeInfoMax	libxml\parser.h	/^    int                nodeInfoMax;   \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nodeInfoNr	libxml\parser.h	/^    int                nodeInfoNr;    \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nodeInfoTab	libxml\parser.h	/^    xmlParserNodeInfo *nodeInfoTab;   \/* array of nodeInfos *\/$/;"	m	struct:_xmlParserCtxt
nodeMax	libxml\parser.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nodeNr	libxml\parser.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nodeTab	libxml\parser.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt
node_seq	libxml\parser.h	/^    xmlParserNodeInfoSeq node_seq;    \/* info about each node parsed *\/$/;"	m	struct:_xmlParserCtxt
nodelen	libxml\parser.h	/^    int                nodelen;       \/* Those two fields are there to *\/$/;"	m	struct:_xmlParserCtxt
nodemem	libxml\parser.h	/^    int                nodemem;       \/* Speed up large node parsing *\/$/;"	m	struct:_xmlParserCtxt
notationDecl	libxml\parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandler
notationDecl	libxml\parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandlerV1
notationDeclSAXFunc	libxml\parser.h	/^typedef void (*notationDeclSAXFunc)(void *ctx,$/;"	t
nsMax	libxml\parser.h	/^    int                nsMax;         \/* the size of the arrays *\/$/;"	m	struct:_xmlParserCtxt
nsNr	libxml\parser.h	/^    int                nsNr;          \/* the number of inherited namespaces *\/$/;"	m	struct:_xmlParserCtxt
nsTab	libxml\parser.h	/^    const xmlChar *   *nsTab;         \/* the array of prefix\/namespace name *\/$/;"	m	struct:_xmlParserCtxt
nsWellFormed	libxml\parser.h	/^    int                nsWellFormed;  \/* is the document XML Nanespace okay *\/$/;"	m	struct:_xmlParserCtxt
options	libxml\parser.h	/^    int                options;       \/* Extra options *\/$/;"	m	struct:_xmlParserCtxt
parseMode	libxml\parser.h	/^    xmlParserMode     parseMode;    \/* the parser mode *\/$/;"	m	struct:_xmlParserCtxt
pedantic	libxml\parser.h	/^    int                pedantic;      \/* signal pedantic warnings *\/$/;"	m	struct:_xmlParserCtxt
processingInstruction	libxml\parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandler
processingInstruction	libxml\parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandlerV1
processingInstructionSAXFunc	libxml\parser.h	/^typedef void (*processingInstructionSAXFunc) (void *ctx,$/;"	t
progressive	libxml\parser.h	/^    int                progressive;   \/* is this a progressive parsing *\/$/;"	m	struct:_xmlParserCtxt
pushTab	libxml\parser.h	/^    void *            *pushTab;       \/* array of data for push *\/$/;"	m	struct:_xmlParserCtxt
record_info	libxml\parser.h	/^    int record_info;                  \/* Whether node info should be kept *\/$/;"	m	struct:_xmlParserCtxt
recovery	libxml\parser.h	/^    int                recovery;      \/* run in recovery mode *\/$/;"	m	struct:_xmlParserCtxt
reference	libxml\parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandler
reference	libxml\parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandlerV1
referenceSAXFunc	libxml\parser.h	/^typedef void (*referenceSAXFunc) (void *ctx,$/;"	t
replaceEntities	libxml\parser.h	/^    int       replaceEntities;        \/* shall we replace entities ? *\/$/;"	m	struct:_xmlParserCtxt
resolveEntity	libxml\parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandler
resolveEntity	libxml\parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandlerV1
resolveEntitySAXFunc	libxml\parser.h	/^typedef xmlParserInputPtr (*resolveEntitySAXFunc) (void *ctx,$/;"	t
sax	libxml\parser.h	/^    struct _xmlSAXHandler *sax;       \/* The SAX handler *\/$/;"	m	struct:_xmlParserCtxt	typeref:struct:_xmlParserCtxt::_xmlSAXHandler
sax2	libxml\parser.h	/^    int                sax2;          \/* operating in the new SAX mode *\/$/;"	m	struct:_xmlParserCtxt
serror	libxml\parser.h	/^    xmlStructuredErrorFunc serror;$/;"	m	struct:_xmlSAXHandler
setDocumentLocator	libxml\parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandler
setDocumentLocator	libxml\parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandlerV1
setDocumentLocatorSAXFunc	libxml\parser.h	/^typedef void (*setDocumentLocatorSAXFunc) (void *ctx,$/;"	t
sizeentities	libxml\parser.h	/^    unsigned long  sizeentities;    \/* size of parsed entities *\/$/;"	m	struct:_xmlParserCtxt
space	libxml\parser.h	/^    int *              space;         \/* Should the parser preserve spaces *\/$/;"	m	struct:_xmlParserCtxt
spaceMax	libxml\parser.h	/^    int                spaceMax;      \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
spaceNr	libxml\parser.h	/^    int                spaceNr;       \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
spaceTab	libxml\parser.h	/^    int *              spaceTab;      \/* array of space infos *\/$/;"	m	struct:_xmlParserCtxt
standalone	libxml\parser.h	/^    int            standalone;        \/* standalone document *\/$/;"	m	struct:_xmlParserCtxt
standalone	libxml\parser.h	/^    int standalone;                   \/* Was that entity marked standalone *\/$/;"	m	struct:_xmlParserInput
startDocument	libxml\parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandler
startDocument	libxml\parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandlerV1
startDocumentSAXFunc	libxml\parser.h	/^typedef void (*startDocumentSAXFunc) (void *ctx);$/;"	t
startElement	libxml\parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandler
startElement	libxml\parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandlerV1
startElementNs	libxml\parser.h	/^    startElementNsSAX2Func startElementNs;$/;"	m	struct:_xmlSAXHandler
startElementNsSAX2Func	libxml\parser.h	/^typedef void (*startElementNsSAX2Func) (void *ctx,$/;"	t
startElementSAXFunc	libxml\parser.h	/^typedef void (*startElementSAXFunc) (void *ctx,$/;"	t
str_xml	libxml\parser.h	/^    const xmlChar *str_xml;$/;"	m	struct:_xmlParserCtxt
str_xml_ns	libxml\parser.h	/^    const xmlChar *str_xml_ns;$/;"	m	struct:_xmlParserCtxt
str_xmlns	libxml\parser.h	/^    const xmlChar *str_xmlns;$/;"	m	struct:_xmlParserCtxt
token	libxml\parser.h	/^    int                 token;        \/* next char look-ahead *\/    $/;"	m	struct:_xmlParserCtxt
unparsedEntityDecl	libxml\parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandler
unparsedEntityDecl	libxml\parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandlerV1
unparsedEntityDeclSAXFunc	libxml\parser.h	/^typedef void (*unparsedEntityDeclSAXFunc)(void *ctx,$/;"	t
userData	libxml\parser.h	/^    void            *userData;        \/* For SAX interface only, used by DOM build *\/$/;"	m	struct:_xmlParserCtxt
valid	libxml\parser.h	/^    int                 valid;        \/* is the document valid *\/$/;"	m	struct:_xmlParserCtxt
validate	libxml\parser.h	/^    int              validate;        \/* shall we try to validate ? *\/$/;"	m	struct:_xmlParserCtxt
vctxt	libxml\parser.h	/^    xmlValidCtxt        vctxt;        \/* The validity context *\/$/;"	m	struct:_xmlParserCtxt
version	libxml\parser.h	/^    const xmlChar    *version;        \/* the XML version string *\/$/;"	m	struct:_xmlParserCtxt
version	libxml\parser.h	/^    const xmlChar *version;           \/* the version string for entity *\/$/;"	m	struct:_xmlParserInput
warning	libxml\parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandler
warning	libxml\parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandlerV1
wellFormed	libxml\parser.h	/^    int            wellFormed;        \/* is the document well formed *\/$/;"	m	struct:_xmlParserCtxt
xmlExternalEntityLoader	libxml\parser.h	/^typedef xmlParserInputPtr (*xmlExternalEntityLoader) (const char *URL,$/;"	t
xmlFeature	libxml\parser.h	/^} xmlFeature;$/;"	t	typeref:enum:__anon24
xmlParserInputDeallocate	libxml\parser.h	/^typedef void (* xmlParserInputDeallocate)(xmlChar *str);$/;"	t
xmlParserInputState	libxml\parser.h	/^} xmlParserInputState;$/;"	t	typeref:enum:__anon21
xmlParserMode	libxml\parser.h	/^} xmlParserMode;$/;"	t	typeref:enum:__anon22
xmlParserNodeInfo	libxml\parser.h	/^typedef struct _xmlParserNodeInfo xmlParserNodeInfo;$/;"	t	typeref:struct:_xmlParserNodeInfo
xmlParserNodeInfoPtr	libxml\parser.h	/^typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;$/;"	t
xmlParserNodeInfoSeq	libxml\parser.h	/^typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;$/;"	t	typeref:struct:_xmlParserNodeInfoSeq
xmlParserNodeInfoSeqPtr	libxml\parser.h	/^typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;$/;"	t
xmlParserOption	libxml\parser.h	/^} xmlParserOption;$/;"	t	typeref:enum:__anon23
xmlSAXHandlerV1	libxml\parser.h	/^typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1;$/;"	t	typeref:struct:_xmlSAXHandlerV1
xmlSAXHandlerV1Ptr	libxml\parser.h	/^typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;$/;"	t
INPUT_CHUNK	libxml\parserInternals.h	56;"	d
IS_ASCII_DIGIT	libxml\parserInternals.h	227;"	d
IS_ASCII_LETTER	libxml\parserInternals.h	217;"	d
IS_BASECHAR	libxml\parserInternals.h	120;"	d
IS_BLANK	libxml\parserInternals.h	102;"	d
IS_BLANK_CH	libxml\parserInternals.h	110;"	d
IS_BYTE_CHAR	libxml\parserInternals.h	72;"	d
IS_CHAR	libxml\parserInternals.h	84;"	d
IS_CHAR_CH	libxml\parserInternals.h	92;"	d
IS_COMBINING	libxml\parserInternals.h	148;"	d
IS_COMBINING_CH	libxml\parserInternals.h	156;"	d
IS_DIGIT	libxml\parserInternals.h	130;"	d
IS_DIGIT_CH	libxml\parserInternals.h	138;"	d
IS_EXTENDER	libxml\parserInternals.h	169;"	d
IS_EXTENDER_CH	libxml\parserInternals.h	177;"	d
IS_IDEOGRAPHIC	libxml\parserInternals.h	188;"	d
IS_LETTER	libxml\parserInternals.h	199;"	d
IS_LETTER_CH	libxml\parserInternals.h	208;"	d
IS_PUBIDCHAR	libxml\parserInternals.h	238;"	d
IS_PUBIDCHAR_CH	libxml\parserInternals.h	246;"	d
MOVETO_ENDTAG	libxml\parserInternals.h	264;"	d
MOVETO_STARTTAG	libxml\parserInternals.h	273;"	d
SKIP_EOL	libxml\parserInternals.h	254;"	d
XML_MAX_NAMELEN	libxml\parserInternals.h	48;"	d
XML_MAX_TEXT_LENGTH	libxml\parserInternals.h	40;"	d
XML_SUBSTITUTE_BOTH	libxml\parserInternals.h	486;"	d
XML_SUBSTITUTE_NONE	libxml\parserInternals.h	468;"	d
XML_SUBSTITUTE_PEREF	libxml\parserInternals.h	480;"	d
XML_SUBSTITUTE_REF	libxml\parserInternals.h	474;"	d
__XML_PARSER_INTERNALS_H__	libxml\parserInternals.h	13;"	d
xmlEntityReferenceFunc	libxml\parserInternals.h	/^typedef	void	(*xmlEntityReferenceFunc)	(xmlEntityPtr ent,$/;"	t
xmlParserMaxDepth	libxml\parserInternals.h	/^XMLPUBVAR unsigned int xmlParserMaxDepth;$/;"	v
xmlStringComment	libxml\parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringComment[];$/;"	v
xmlStringText	libxml\parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringText[];$/;"	v
xmlStringTextNoenc	libxml\parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringTextNoenc[];$/;"	v
XML_PATTERN_DEFAULT	libxml\pattern.h	/^    XML_PATTERN_DEFAULT		= 0,	\/* simple pattern match *\/$/;"	e	enum:__anon25
XML_PATTERN_XPATH	libxml\pattern.h	/^    XML_PATTERN_XPATH		= 1<<0,	\/* standard XPath pattern *\/$/;"	e	enum:__anon25
XML_PATTERN_XSFIELD	libxml\pattern.h	/^    XML_PATTERN_XSFIELD		= 1<<2	\/* XPath subset for schema field *\/$/;"	e	enum:__anon25
XML_PATTERN_XSSEL	libxml\pattern.h	/^    XML_PATTERN_XSSEL		= 1<<1,	\/* XPath subset for schema selector *\/$/;"	e	enum:__anon25
__XML_PATTERN_H__	libxml\pattern.h	12;"	d
xmlPattern	libxml\pattern.h	/^typedef struct _xmlPattern xmlPattern;$/;"	t	typeref:struct:_xmlPattern
xmlPatternFlags	libxml\pattern.h	/^} xmlPatternFlags;$/;"	t	typeref:enum:__anon25
xmlPatternPtr	libxml\pattern.h	/^typedef xmlPattern *xmlPatternPtr;$/;"	t
xmlStreamCtxt	libxml\pattern.h	/^typedef struct _xmlStreamCtxt xmlStreamCtxt;$/;"	t	typeref:struct:_xmlStreamCtxt
xmlStreamCtxtPtr	libxml\pattern.h	/^typedef xmlStreamCtxt *xmlStreamCtxtPtr;$/;"	t
XML_RELAXNGP_CRNG	libxml\relaxng.h	/^    XML_RELAXNGP_CRNG = 2$/;"	e	enum:__anon27
XML_RELAXNGP_FREE_DOC	libxml\relaxng.h	/^    XML_RELAXNGP_FREE_DOC = 1,$/;"	e	enum:__anon27
XML_RELAXNGP_NONE	libxml\relaxng.h	/^    XML_RELAXNGP_NONE = 0,$/;"	e	enum:__anon27
XML_RELAXNG_ERR_ATTREXTRANS	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ATTREXTRANS,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ATTRNAME	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ATTRNAME,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ATTRNONS	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ATTRNONS,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ATTRVALID	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ATTRVALID,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ATTRWRONGNS	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ATTRWRONGNS,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_CONTENTVALID	libxml\relaxng.h	/^    XML_RELAXNG_ERR_CONTENTVALID,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_DATAELEM	libxml\relaxng.h	/^    XML_RELAXNG_ERR_DATAELEM,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_DATATYPE	libxml\relaxng.h	/^    XML_RELAXNG_ERR_DATATYPE,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_DUPID	libxml\relaxng.h	/^    XML_RELAXNG_ERR_DUPID,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ELEMEXTRANS	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ELEMEXTRANS,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ELEMNAME	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ELEMNAME,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ELEMNONS	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ELEMNONS,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ELEMNOTEMPTY	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ELEMNOTEMPTY,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ELEMWRONG	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ELEMWRONG,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_ELEMWRONGNS	libxml\relaxng.h	/^    XML_RELAXNG_ERR_ELEMWRONGNS,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_EXTRACONTENT	libxml\relaxng.h	/^    XML_RELAXNG_ERR_EXTRACONTENT,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_EXTRADATA	libxml\relaxng.h	/^    XML_RELAXNG_ERR_EXTRADATA,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_INTEREXTRA	libxml\relaxng.h	/^    XML_RELAXNG_ERR_INTEREXTRA,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_INTERNAL	libxml\relaxng.h	/^    XML_RELAXNG_ERR_INTERNAL,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_INTERNODATA	libxml\relaxng.h	/^    XML_RELAXNG_ERR_INTERNODATA,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_INTERSEQ	libxml\relaxng.h	/^    XML_RELAXNG_ERR_INTERSEQ,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_INVALIDATTR	libxml\relaxng.h	/^    XML_RELAXNG_ERR_INVALIDATTR,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_LACKDATA	libxml\relaxng.h	/^    XML_RELAXNG_ERR_LACKDATA,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_LIST	libxml\relaxng.h	/^    XML_RELAXNG_ERR_LIST,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_LISTELEM	libxml\relaxng.h	/^    XML_RELAXNG_ERR_LISTELEM,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_LISTEMPTY	libxml\relaxng.h	/^    XML_RELAXNG_ERR_LISTEMPTY,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_LISTEXTRA	libxml\relaxng.h	/^    XML_RELAXNG_ERR_LISTEXTRA,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_MEMORY	libxml\relaxng.h	/^    XML_RELAXNG_ERR_MEMORY,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_NODEFINE	libxml\relaxng.h	/^    XML_RELAXNG_ERR_NODEFINE,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_NOELEM	libxml\relaxng.h	/^    XML_RELAXNG_ERR_NOELEM,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_NOGRAMMAR	libxml\relaxng.h	/^    XML_RELAXNG_ERR_NOGRAMMAR,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_NOSTATE	libxml\relaxng.h	/^    XML_RELAXNG_ERR_NOSTATE,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_NOTELEM	libxml\relaxng.h	/^    XML_RELAXNG_ERR_NOTELEM,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_TEXTWRONG	libxml\relaxng.h	/^    XML_RELAXNG_ERR_TEXTWRONG$/;"	e	enum:__anon26
XML_RELAXNG_ERR_TYPE	libxml\relaxng.h	/^    XML_RELAXNG_ERR_TYPE,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_TYPECMP	libxml\relaxng.h	/^    XML_RELAXNG_ERR_TYPECMP,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_TYPEVAL	libxml\relaxng.h	/^    XML_RELAXNG_ERR_TYPEVAL,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_VALELEM	libxml\relaxng.h	/^    XML_RELAXNG_ERR_VALELEM,$/;"	e	enum:__anon26
XML_RELAXNG_ERR_VALUE	libxml\relaxng.h	/^    XML_RELAXNG_ERR_VALUE,$/;"	e	enum:__anon26
XML_RELAXNG_OK	libxml\relaxng.h	/^    XML_RELAXNG_OK = 0,$/;"	e	enum:__anon26
__XML_RELAX_NG__	libxml\relaxng.h	11;"	d
xmlRelaxNG	libxml\relaxng.h	/^typedef struct _xmlRelaxNG xmlRelaxNG;$/;"	t	typeref:struct:_xmlRelaxNG
xmlRelaxNGParserCtxt	libxml\relaxng.h	/^typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;$/;"	t	typeref:struct:_xmlRelaxNGParserCtxt
xmlRelaxNGParserCtxtPtr	libxml\relaxng.h	/^typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;$/;"	t
xmlRelaxNGParserFlag	libxml\relaxng.h	/^} xmlRelaxNGParserFlag;$/;"	t	typeref:enum:__anon27
xmlRelaxNGPtr	libxml\relaxng.h	/^typedef xmlRelaxNG *xmlRelaxNGPtr;$/;"	t
xmlRelaxNGValidCtxt	libxml\relaxng.h	/^typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;$/;"	t	typeref:struct:_xmlRelaxNGValidCtxt
xmlRelaxNGValidCtxtPtr	libxml\relaxng.h	/^typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;$/;"	t
xmlRelaxNGValidErr	libxml\relaxng.h	/^} xmlRelaxNGValidErr;$/;"	t	typeref:enum:__anon26
XML_SCHEMAS_ANYATTR_LAX	libxml\schemasInternals.h	168;"	d
XML_SCHEMAS_ANYATTR_SKIP	libxml\schemasInternals.h	161;"	d
XML_SCHEMAS_ANYATTR_STRICT	libxml\schemasInternals.h	175;"	d
XML_SCHEMAS_ANYSIMPLETYPE	libxml\schemasInternals.h	/^    XML_SCHEMAS_ANYSIMPLETYPE$/;"	e	enum:__anon28
XML_SCHEMAS_ANYTYPE	libxml\schemasInternals.h	/^    XML_SCHEMAS_ANYTYPE,$/;"	e	enum:__anon28
XML_SCHEMAS_ANYURI	libxml\schemasInternals.h	/^    XML_SCHEMAS_ANYURI,$/;"	e	enum:__anon28
XML_SCHEMAS_ANY_LAX	libxml\schemasInternals.h	188;"	d
XML_SCHEMAS_ANY_SKIP	libxml\schemasInternals.h	181;"	d
XML_SCHEMAS_ANY_STRICT	libxml\schemasInternals.h	195;"	d
XML_SCHEMAS_ATTRGROUP_GLOBAL	libxml\schemasInternals.h	332;"	d
XML_SCHEMAS_ATTRGROUP_HAS_REFS	libxml\schemasInternals.h	351;"	d
XML_SCHEMAS_ATTRGROUP_MARKED	libxml\schemasInternals.h	338;"	d
XML_SCHEMAS_ATTRGROUP_REDEFINED	libxml\schemasInternals.h	345;"	d
XML_SCHEMAS_ATTRGROUP_WILDCARD_BUILDED	libxml\schemasInternals.h	326;"	d
XML_SCHEMAS_ATTR_FIXED	libxml\schemasInternals.h	239;"	d
XML_SCHEMAS_ATTR_GLOBAL	libxml\schemasInternals.h	220;"	d
XML_SCHEMAS_ATTR_INTERNAL_RESOLVED	libxml\schemasInternals.h	233;"	d
XML_SCHEMAS_ATTR_NSDEFAULT	libxml\schemasInternals.h	226;"	d
XML_SCHEMAS_ATTR_USE_OPTIONAL	libxml\schemasInternals.h	214;"	d
XML_SCHEMAS_ATTR_USE_PROHIBITED	libxml\schemasInternals.h	202;"	d
XML_SCHEMAS_ATTR_USE_REQUIRED	libxml\schemasInternals.h	208;"	d
XML_SCHEMAS_BASE64BINARY	libxml\schemasInternals.h	/^    XML_SCHEMAS_BASE64BINARY,$/;"	e	enum:__anon28
XML_SCHEMAS_BLOCK_DEFAULT_EXTENSION	libxml\schemasInternals.h	898;"	d
XML_SCHEMAS_BLOCK_DEFAULT_RESTRICTION	libxml\schemasInternals.h	904;"	d
XML_SCHEMAS_BLOCK_DEFAULT_SUBSTITUTION	libxml\schemasInternals.h	910;"	d
XML_SCHEMAS_BOOLEAN	libxml\schemasInternals.h	/^    XML_SCHEMAS_BOOLEAN,$/;"	e	enum:__anon28
XML_SCHEMAS_BYTE	libxml\schemasInternals.h	/^    XML_SCHEMAS_BYTE,$/;"	e	enum:__anon28
XML_SCHEMAS_DATE	libxml\schemasInternals.h	/^    XML_SCHEMAS_DATE,$/;"	e	enum:__anon28
XML_SCHEMAS_DATETIME	libxml\schemasInternals.h	/^    XML_SCHEMAS_DATETIME,$/;"	e	enum:__anon28
XML_SCHEMAS_DECIMAL	libxml\schemasInternals.h	/^    XML_SCHEMAS_DECIMAL,$/;"	e	enum:__anon28
XML_SCHEMAS_DOUBLE	libxml\schemasInternals.h	/^    XML_SCHEMAS_DOUBLE,$/;"	e	enum:__anon28
XML_SCHEMAS_DURATION	libxml\schemasInternals.h	/^    XML_SCHEMAS_DURATION,$/;"	e	enum:__anon28
XML_SCHEMAS_ELEM_ABSTRACT	libxml\schemasInternals.h	673;"	d
XML_SCHEMAS_ELEM_BLOCK_ABSENT	libxml\schemasInternals.h	712;"	d
XML_SCHEMAS_ELEM_BLOCK_EXTENSION	libxml\schemasInternals.h	718;"	d
XML_SCHEMAS_ELEM_BLOCK_RESTRICTION	libxml\schemasInternals.h	724;"	d
XML_SCHEMAS_ELEM_BLOCK_SUBSTITUTION	libxml\schemasInternals.h	730;"	d
XML_SCHEMAS_ELEM_CIRCULAR	libxml\schemasInternals.h	706;"	d
XML_SCHEMAS_ELEM_DEFAULT	libxml\schemasInternals.h	661;"	d
XML_SCHEMAS_ELEM_FINAL_ABSENT	libxml\schemasInternals.h	736;"	d
XML_SCHEMAS_ELEM_FINAL_EXTENSION	libxml\schemasInternals.h	742;"	d
XML_SCHEMAS_ELEM_FINAL_RESTRICTION	libxml\schemasInternals.h	748;"	d
XML_SCHEMAS_ELEM_FIXED	libxml\schemasInternals.h	667;"	d
XML_SCHEMAS_ELEM_GLOBAL	libxml\schemasInternals.h	655;"	d
XML_SCHEMAS_ELEM_INTERNAL_CHECKED	libxml\schemasInternals.h	761;"	d
XML_SCHEMAS_ELEM_INTERNAL_RESOLVED	libxml\schemasInternals.h	700;"	d
XML_SCHEMAS_ELEM_NILLABLE	libxml\schemasInternals.h	649;"	d
XML_SCHEMAS_ELEM_NSDEFAULT	libxml\schemasInternals.h	693;"	d
XML_SCHEMAS_ELEM_REF	libxml\schemasInternals.h	686;"	d
XML_SCHEMAS_ELEM_SUBST_GROUP_HEAD	libxml\schemasInternals.h	754;"	d
XML_SCHEMAS_ELEM_TOPLEVEL	libxml\schemasInternals.h	680;"	d
XML_SCHEMAS_ENTITIES	libxml\schemasInternals.h	/^    XML_SCHEMAS_ENTITIES,$/;"	e	enum:__anon28
XML_SCHEMAS_ENTITY	libxml\schemasInternals.h	/^    XML_SCHEMAS_ENTITY,$/;"	e	enum:__anon28
XML_SCHEMAS_FACET_COLLAPSE	libxml\schemasInternals.h	819;"	d
XML_SCHEMAS_FACET_PRESERVE	libxml\schemasInternals.h	807;"	d
XML_SCHEMAS_FACET_REPLACE	libxml\schemasInternals.h	813;"	d
XML_SCHEMAS_FACET_UNKNOWN	libxml\schemasInternals.h	801;"	d
XML_SCHEMAS_FINAL_DEFAULT_EXTENSION	libxml\schemasInternals.h	874;"	d
XML_SCHEMAS_FINAL_DEFAULT_LIST	libxml\schemasInternals.h	886;"	d
XML_SCHEMAS_FINAL_DEFAULT_RESTRICTION	libxml\schemasInternals.h	880;"	d
XML_SCHEMAS_FINAL_DEFAULT_UNION	libxml\schemasInternals.h	892;"	d
XML_SCHEMAS_FLOAT	libxml\schemasInternals.h	/^    XML_SCHEMAS_FLOAT,$/;"	e	enum:__anon28
XML_SCHEMAS_GDAY	libxml\schemasInternals.h	/^    XML_SCHEMAS_GDAY,$/;"	e	enum:__anon28
XML_SCHEMAS_GMONTH	libxml\schemasInternals.h	/^    XML_SCHEMAS_GMONTH,$/;"	e	enum:__anon28
XML_SCHEMAS_GMONTHDAY	libxml\schemasInternals.h	/^    XML_SCHEMAS_GMONTHDAY,$/;"	e	enum:__anon28
XML_SCHEMAS_GYEAR	libxml\schemasInternals.h	/^    XML_SCHEMAS_GYEAR,$/;"	e	enum:__anon28
XML_SCHEMAS_GYEARMONTH	libxml\schemasInternals.h	/^    XML_SCHEMAS_GYEARMONTH,$/;"	e	enum:__anon28
XML_SCHEMAS_HEXBINARY	libxml\schemasInternals.h	/^    XML_SCHEMAS_HEXBINARY,$/;"	e	enum:__anon28
XML_SCHEMAS_ID	libxml\schemasInternals.h	/^    XML_SCHEMAS_ID,$/;"	e	enum:__anon28
XML_SCHEMAS_IDREF	libxml\schemasInternals.h	/^    XML_SCHEMAS_IDREF,$/;"	e	enum:__anon28
XML_SCHEMAS_IDREFS	libxml\schemasInternals.h	/^    XML_SCHEMAS_IDREFS,$/;"	e	enum:__anon28
XML_SCHEMAS_INCLUDING_CONVERT_NS	libxml\schemasInternals.h	917;"	d
XML_SCHEMAS_INT	libxml\schemasInternals.h	/^    XML_SCHEMAS_INT,$/;"	e	enum:__anon28
XML_SCHEMAS_INTEGER	libxml\schemasInternals.h	/^    XML_SCHEMAS_INTEGER,$/;"	e	enum:__anon28
XML_SCHEMAS_LANGUAGE	libxml\schemasInternals.h	/^    XML_SCHEMAS_LANGUAGE,$/;"	e	enum:__anon28
XML_SCHEMAS_LONG	libxml\schemasInternals.h	/^    XML_SCHEMAS_LONG,$/;"	e	enum:__anon28
XML_SCHEMAS_NAME	libxml\schemasInternals.h	/^    XML_SCHEMAS_NAME,$/;"	e	enum:__anon28
XML_SCHEMAS_NCNAME	libxml\schemasInternals.h	/^    XML_SCHEMAS_NCNAME,$/;"	e	enum:__anon28
XML_SCHEMAS_NINTEGER	libxml\schemasInternals.h	/^    XML_SCHEMAS_NINTEGER,$/;"	e	enum:__anon28
XML_SCHEMAS_NMTOKEN	libxml\schemasInternals.h	/^    XML_SCHEMAS_NMTOKEN,$/;"	e	enum:__anon28
XML_SCHEMAS_NMTOKENS	libxml\schemasInternals.h	/^    XML_SCHEMAS_NMTOKENS,$/;"	e	enum:__anon28
XML_SCHEMAS_NNINTEGER	libxml\schemasInternals.h	/^    XML_SCHEMAS_NNINTEGER,$/;"	e	enum:__anon28
XML_SCHEMAS_NORMSTRING	libxml\schemasInternals.h	/^    XML_SCHEMAS_NORMSTRING,$/;"	e	enum:__anon28
XML_SCHEMAS_NOTATION	libxml\schemasInternals.h	/^    XML_SCHEMAS_NOTATION,$/;"	e	enum:__anon28
XML_SCHEMAS_NPINTEGER	libxml\schemasInternals.h	/^    XML_SCHEMAS_NPINTEGER,$/;"	e	enum:__anon28
XML_SCHEMAS_PINTEGER	libxml\schemasInternals.h	/^    XML_SCHEMAS_PINTEGER,$/;"	e	enum:__anon28
XML_SCHEMAS_QNAME	libxml\schemasInternals.h	/^    XML_SCHEMAS_QNAME,$/;"	e	enum:__anon28
XML_SCHEMAS_QUALIF_ATTR	libxml\schemasInternals.h	868;"	d
XML_SCHEMAS_QUALIF_ELEM	libxml\schemasInternals.h	861;"	d
XML_SCHEMAS_SHORT	libxml\schemasInternals.h	/^    XML_SCHEMAS_SHORT,$/;"	e	enum:__anon28
XML_SCHEMAS_STRING	libxml\schemasInternals.h	/^    XML_SCHEMAS_STRING,$/;"	e	enum:__anon28
XML_SCHEMAS_TIME	libxml\schemasInternals.h	/^    XML_SCHEMAS_TIME,$/;"	e	enum:__anon28
XML_SCHEMAS_TOKEN	libxml\schemasInternals.h	/^    XML_SCHEMAS_TOKEN,$/;"	e	enum:__anon28
XML_SCHEMAS_TYPE_ABSTRACT	libxml\schemasInternals.h	527;"	d
XML_SCHEMAS_TYPE_BLOCK_DEFAULT	libxml\schemasInternals.h	509;"	d
XML_SCHEMAS_TYPE_BLOCK_EXTENSION	libxml\schemasInternals.h	515;"	d
XML_SCHEMAS_TYPE_BLOCK_RESTRICTION	libxml\schemasInternals.h	521;"	d
XML_SCHEMAS_TYPE_BUILTIN_PRIMITIVE	libxml\schemasInternals.h	496;"	d
XML_SCHEMAS_TYPE_DERIVATION_METHOD_EXTENSION	libxml\schemasInternals.h	414;"	d
XML_SCHEMAS_TYPE_DERIVATION_METHOD_RESTRICTION	libxml\schemasInternals.h	420;"	d
XML_SCHEMAS_TYPE_FACETSNEEDVALUE	libxml\schemasInternals.h	533;"	d
XML_SCHEMAS_TYPE_FINAL_DEFAULT	libxml\schemasInternals.h	490;"	d
XML_SCHEMAS_TYPE_FINAL_EXTENSION	libxml\schemasInternals.h	466;"	d
XML_SCHEMAS_TYPE_FINAL_LIST	libxml\schemasInternals.h	478;"	d
XML_SCHEMAS_TYPE_FINAL_RESTRICTION	libxml\schemasInternals.h	472;"	d
XML_SCHEMAS_TYPE_FINAL_UNION	libxml\schemasInternals.h	484;"	d
XML_SCHEMAS_TYPE_FIXUP_1	libxml\schemasInternals.h	582;"	d
XML_SCHEMAS_TYPE_GLOBAL	libxml\schemasInternals.h	426;"	d
XML_SCHEMAS_TYPE_HAS_FACETS	libxml\schemasInternals.h	569;"	d
XML_SCHEMAS_TYPE_INTERNAL_INVALID	libxml\schemasInternals.h	545;"	d
XML_SCHEMAS_TYPE_INTERNAL_RESOLVED	libxml\schemasInternals.h	539;"	d
XML_SCHEMAS_TYPE_MARKED	libxml\schemasInternals.h	502;"	d
XML_SCHEMAS_TYPE_MIXED	libxml\schemasInternals.h	408;"	d
XML_SCHEMAS_TYPE_NORMVALUENEEDED	libxml\schemasInternals.h	575;"	d
XML_SCHEMAS_TYPE_OWNED_ATTR_WILDCARD	libxml\schemasInternals.h	433;"	d
XML_SCHEMAS_TYPE_REDEFINED	libxml\schemasInternals.h	589;"	d
XML_SCHEMAS_TYPE_VARIETY_ABSENT	libxml\schemasInternals.h	442;"	d
XML_SCHEMAS_TYPE_VARIETY_ATOMIC	libxml\schemasInternals.h	460;"	d
XML_SCHEMAS_TYPE_VARIETY_LIST	libxml\schemasInternals.h	448;"	d
XML_SCHEMAS_TYPE_VARIETY_UNION	libxml\schemasInternals.h	454;"	d
XML_SCHEMAS_TYPE_WHITESPACE_COLLAPSE	libxml\schemasInternals.h	563;"	d
XML_SCHEMAS_TYPE_WHITESPACE_PRESERVE	libxml\schemasInternals.h	551;"	d
XML_SCHEMAS_TYPE_WHITESPACE_REPLACE	libxml\schemasInternals.h	557;"	d
XML_SCHEMAS_UBYTE	libxml\schemasInternals.h	/^    XML_SCHEMAS_UBYTE,$/;"	e	enum:__anon28
XML_SCHEMAS_UINT	libxml\schemasInternals.h	/^    XML_SCHEMAS_UINT,$/;"	e	enum:__anon28
XML_SCHEMAS_ULONG	libxml\schemasInternals.h	/^    XML_SCHEMAS_ULONG,$/;"	e	enum:__anon28
XML_SCHEMAS_UNKNOWN	libxml\schemasInternals.h	/^    XML_SCHEMAS_UNKNOWN = 0,$/;"	e	enum:__anon28
XML_SCHEMAS_USHORT	libxml\schemasInternals.h	/^    XML_SCHEMAS_USHORT,$/;"	e	enum:__anon28
XML_SCHEMAS_WILDCARD_COMPLETE	libxml\schemasInternals.h	288;"	d
XML_SCHEMA_CONTENT_ANY	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_ANY$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_BASIC	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_BASIC,$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_ELEMENTS	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_ELEMENTS,$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_EMPTY	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_EMPTY = 1,$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_MIXED	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_MIXED,$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS, \/* Obsolete *\/$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_SIMPLE	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_SIMPLE,$/;"	e	enum:__anon30
XML_SCHEMA_CONTENT_UNKNOWN	libxml\schemasInternals.h	/^    XML_SCHEMA_CONTENT_UNKNOWN = 0,$/;"	e	enum:__anon30
XML_SCHEMA_EXTRA_ATTR_USE_PROHIB	libxml\schemasInternals.h	/^    XML_SCHEMA_EXTRA_ATTR_USE_PROHIB$/;"	e	enum:__anon29
XML_SCHEMA_EXTRA_QNAMEREF	libxml\schemasInternals.h	/^    XML_SCHEMA_EXTRA_QNAMEREF = 2000,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_ENUMERATION	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_ENUMERATION,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_FRACTIONDIGITS	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_FRACTIONDIGITS,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_LENGTH	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_LENGTH,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_MAXEXCLUSIVE	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_MAXEXCLUSIVE,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_MAXINCLUSIVE	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_MAXINCLUSIVE,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_MAXLENGTH	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_MAXLENGTH,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_MINEXCLUSIVE	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_MINEXCLUSIVE,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_MININCLUSIVE	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_MININCLUSIVE = 1000,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_MINLENGTH	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_MINLENGTH,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_PATTERN	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_PATTERN,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_TOTALDIGITS	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_TOTALDIGITS,$/;"	e	enum:__anon29
XML_SCHEMA_FACET_WHITESPACE	libxml\schemasInternals.h	/^    XML_SCHEMA_FACET_WHITESPACE,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ALL	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ALL,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ANY	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ANY,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ANY_ATTRIBUTE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ANY_ATTRIBUTE,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ATTRIBUTE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTE,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ATTRIBUTEGROUP	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTEGROUP,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ATTRIBUTE_USE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTE_USE, $/;"	e	enum:__anon29
XML_SCHEMA_TYPE_BASIC	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_BASIC = 1, \/* A built-in datatype *\/$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_CHOICE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_CHOICE,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_COMPLEX	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_COMPLEX,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_COMPLEX_CONTENT	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_COMPLEX_CONTENT,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_ELEMENT	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_ELEMENT,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_EXTENSION	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_EXTENSION,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_FACET	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_FACET,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_GROUP	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_GROUP,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_IDC_KEY	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_KEY,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_IDC_KEYREF	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_KEYREF,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_IDC_UNIQUE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_UNIQUE,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_LIST	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_LIST,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_NOTATION	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_NOTATION,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_PARTICLE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_PARTICLE = 25, $/;"	e	enum:__anon29
XML_SCHEMA_TYPE_RESTRICTION	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_RESTRICTION,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_SEQUENCE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_SEQUENCE = 6,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_SIMPLE	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_SIMPLE,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_SIMPLE_CONTENT	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_SIMPLE_CONTENT,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_UNION	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_UNION,$/;"	e	enum:__anon29
XML_SCHEMA_TYPE_UR	libxml\schemasInternals.h	/^    XML_SCHEMA_TYPE_UR,$/;"	e	enum:__anon29
__XML_SCHEMA_INTERNALS_H__	libxml\schemasInternals.h	15;"	d
_private	libxml\schemasInternals.h	/^    void *_private;        \/* unused by the library for users or bindings *\/$/;"	m	struct:_xmlSchema
_xmlSchema	libxml\schemasInternals.h	/^struct _xmlSchema {$/;"	s
_xmlSchemaAnnot	libxml\schemasInternals.h	/^struct _xmlSchemaAnnot {$/;"	s
_xmlSchemaAttribute	libxml\schemasInternals.h	/^struct _xmlSchemaAttribute {$/;"	s
_xmlSchemaAttributeGroup	libxml\schemasInternals.h	/^struct _xmlSchemaAttributeGroup {$/;"	s
_xmlSchemaAttributeLink	libxml\schemasInternals.h	/^struct _xmlSchemaAttributeLink {$/;"	s
_xmlSchemaElement	libxml\schemasInternals.h	/^struct _xmlSchemaElement {$/;"	s
_xmlSchemaFacet	libxml\schemasInternals.h	/^struct _xmlSchemaFacet {$/;"	s
_xmlSchemaFacetLink	libxml\schemasInternals.h	/^struct _xmlSchemaFacetLink {$/;"	s
_xmlSchemaNotation	libxml\schemasInternals.h	/^struct _xmlSchemaNotation {$/;"	s
_xmlSchemaType	libxml\schemasInternals.h	/^struct _xmlSchemaType {$/;"	s
_xmlSchemaTypeLink	libxml\schemasInternals.h	/^struct _xmlSchemaTypeLink {$/;"	s
_xmlSchemaWildcard	libxml\schemasInternals.h	/^struct _xmlSchemaWildcard {$/;"	s
_xmlSchemaWildcardNs	libxml\schemasInternals.h	/^struct _xmlSchemaWildcardNs {$/;"	s
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchema
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttribute
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttributeGroup
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaElement
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaFacet
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaNotation
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaType
annot	libxml\schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaWildcard
any	libxml\schemasInternals.h	/^    int any; \/* Indicates if the ns constraint is of ##any *\/$/;"	m	struct:_xmlSchemaWildcard
attr	libxml\schemasInternals.h	/^    struct _xmlSchemaAttribute *attr;\/* the linked attribute *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttribute
attrDecl	libxml\schemasInternals.h	/^    xmlHashTablePtr attrDecl;$/;"	m	struct:_xmlSchema
attrUses	libxml\schemasInternals.h	/^    void *attrUses;$/;"	m	struct:_xmlSchemaAttributeGroup
attrUses	libxml\schemasInternals.h	/^    void *attrUses;$/;"	m	struct:_xmlSchemaType
attrgrpDecl	libxml\schemasInternals.h	/^    xmlHashTablePtr attrgrpDecl;$/;"	m	struct:_xmlSchema
attributeUses	libxml\schemasInternals.h	/^    xmlSchemaAttributeLinkPtr *attributeUses; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
attributeWildcard	libxml\schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaAttributeGroup
attributeWildcard	libxml\schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaType
attributes	libxml\schemasInternals.h	/^    xmlSchemaAttributePtr attributes; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup
attributes	libxml\schemasInternals.h	/^    xmlSchemaAttributePtr attributes; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
attributes	libxml\schemasInternals.h	/^    xmlSchemaAttributePtr attributes;$/;"	m	struct:_xmlSchemaElement
base	libxml\schemasInternals.h	/^    const xmlChar *base; \/* Base type's local name *\/$/;"	m	struct:_xmlSchemaType
base	libxml\schemasInternals.h	/^    xmlSchemaTypePtr base; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
baseNs	libxml\schemasInternals.h	/^    const xmlChar *baseNs; \/* Base type's target namespace *\/$/;"	m	struct:_xmlSchemaType
baseType	libxml\schemasInternals.h	/^    xmlSchemaTypePtr baseType; \/* The base type component *\/$/;"	m	struct:_xmlSchemaType
builtInType	libxml\schemasInternals.h	/^    int builtInType; \/* Type of built-in types. *\/$/;"	m	struct:_xmlSchemaType
contModel	libxml\schemasInternals.h	/^    xmlRegexpPtr contModel; \/* Holds the automaton of the content model *\/$/;"	m	struct:_xmlSchemaType
contModel	libxml\schemasInternals.h	/^    xmlRegexpPtr contModel; \/* Obsolete for WXS, maybe used for RelaxNG *\/$/;"	m	struct:_xmlSchemaElement
content	libxml\schemasInternals.h	/^    xmlNodePtr content;         \/* the annotation *\/$/;"	m	struct:_xmlSchemaAnnot
contentType	libxml\schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaElement
contentType	libxml\schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaType
contentTypeDef	libxml\schemasInternals.h	/^    xmlSchemaTypePtr contentTypeDef; \/* Used for the simple content of complex types.$/;"	m	struct:_xmlSchemaType
counter	libxml\schemasInternals.h	/^    int counter; \/* used to give ononymous components unique names *\/$/;"	m	struct:_xmlSchema
defVal	libxml\schemasInternals.h	/^    xmlSchemaValPtr defVal; \/* The compiled value constraint *\/$/;"	m	struct:_xmlSchemaAttribute
defVal	libxml\schemasInternals.h	/^    xmlSchemaValPtr defVal; \/* The compiled value contraint. *\/$/;"	m	struct:_xmlSchemaElement
defValue	libxml\schemasInternals.h	/^    const xmlChar *defValue; \/* The initial value of the value constraint *\/$/;"	m	struct:_xmlSchemaAttribute
dict	libxml\schemasInternals.h	/^    xmlDictPtr      dict;$/;"	m	struct:_xmlSchema
doc	libxml\schemasInternals.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlSchema
elemDecl	libxml\schemasInternals.h	/^    xmlHashTablePtr elemDecl;$/;"	m	struct:_xmlSchema
facet	libxml\schemasInternals.h	/^    xmlSchemaFacetPtr facet;\/* the linked facet *\/$/;"	m	struct:_xmlSchemaFacetLink
facetSet	libxml\schemasInternals.h	/^    xmlSchemaFacetLinkPtr facetSet; \/* All facets (incl. inherited) *\/$/;"	m	struct:_xmlSchemaType
facets	libxml\schemasInternals.h	/^    xmlSchemaFacetPtr facets; \/* Local facets *\/$/;"	m	struct:_xmlSchemaType
fixed	libxml\schemasInternals.h	/^    int fixed; \/* XML_SCHEMAS_FACET_PRESERVE, etc. *\/$/;"	m	struct:_xmlSchemaFacet
flags	libxml\schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchema
flags	libxml\schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttribute
flags	libxml\schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttributeGroup
flags	libxml\schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaElement
flags	libxml\schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaType
flags	libxml\schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaWildcard
groupDecl	libxml\schemasInternals.h	/^    xmlHashTablePtr groupDecl;$/;"	m	struct:_xmlSchema
id	libxml\schemasInternals.h	/^    const xmlChar *id ; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
id	libxml\schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
id	libxml\schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement
id	libxml\schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard
id	libxml\schemasInternals.h	/^    const xmlChar *id; \/* Obsolete *\/$/;"	m	struct:_xmlSchema
id	libxml\schemasInternals.h	/^    const xmlChar *id; \/* Obsolete *\/$/;"	m	struct:_xmlSchemaFacet
id	libxml\schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaAttributeGroup
idcDef	libxml\schemasInternals.h	/^    xmlHashTablePtr idcDef; \/* All identity-constraint defs. *\/$/;"	m	struct:_xmlSchema
idcs	libxml\schemasInternals.h	/^    void *idcs; \/* The identity-constraint defs *\/$/;"	m	struct:_xmlSchemaElement
identifier	libxml\schemasInternals.h	/^    const xmlChar *identifier;$/;"	m	struct:_xmlSchemaNotation
includes	libxml\schemasInternals.h	/^    void *includes;     \/* the includes, this is opaque for now *\/$/;"	m	struct:_xmlSchema
maxOccurs	libxml\schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement
maxOccurs	libxml\schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
maxOccurs	libxml\schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard
memberTypes	libxml\schemasInternals.h	/^    xmlSchemaTypeLinkPtr memberTypes; \/* member-types if a union type. *\/$/;"	m	struct:_xmlSchemaType
minOccurs	libxml\schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement
minOccurs	libxml\schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
minOccurs	libxml\schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard
name	libxml\schemasInternals.h	/^    const xmlChar *name; \/* schema name *\/$/;"	m	struct:_xmlSchema
name	libxml\schemasInternals.h	/^    const xmlChar *name; \/* the name of the declaration *\/$/;"	m	struct:_xmlSchemaAttribute
name	libxml\schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaAttributeGroup
name	libxml\schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaElement
name	libxml\schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaNotation
name	libxml\schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaType
namedType	libxml\schemasInternals.h	/^    const xmlChar *namedType;$/;"	m	struct:_xmlSchemaElement
namedTypeNs	libxml\schemasInternals.h	/^    const xmlChar *namedTypeNs;$/;"	m	struct:_xmlSchemaElement
negNsSet	libxml\schemasInternals.h	/^    xmlSchemaWildcardNsPtr negNsSet; \/* The negated namespace *\/$/;"	m	struct:_xmlSchemaWildcard
next	libxml\schemasInternals.h	/^    struct _xmlSchemaAnnot *next;$/;"	m	struct:_xmlSchemaAnnot	typeref:struct:_xmlSchemaAnnot::_xmlSchemaAnnot
next	libxml\schemasInternals.h	/^    struct _xmlSchemaAttribute *next; \/* the next attribute (not used?) *\/$/;"	m	struct:_xmlSchemaAttribute	typeref:struct:_xmlSchemaAttribute::_xmlSchemaAttribute
next	libxml\schemasInternals.h	/^    struct _xmlSchemaAttribute *next;\/* the next attribute if in a group ... *\/$/;"	m	struct:_xmlSchemaAttributeGroup	typeref:struct:_xmlSchemaAttributeGroup::_xmlSchemaAttribute
next	libxml\schemasInternals.h	/^    struct _xmlSchemaAttributeLink *next;\/* the next attribute link ... *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttributeLink
next	libxml\schemasInternals.h	/^    struct _xmlSchemaFacet *next;\/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaFacet	typeref:struct:_xmlSchemaFacet::_xmlSchemaFacet
next	libxml\schemasInternals.h	/^    struct _xmlSchemaFacetLink *next;\/* the next facet link ... *\/$/;"	m	struct:_xmlSchemaFacetLink	typeref:struct:_xmlSchemaFacetLink::_xmlSchemaFacetLink
next	libxml\schemasInternals.h	/^    struct _xmlSchemaType *next; \/* Not used? *\/$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaType
next	libxml\schemasInternals.h	/^    struct _xmlSchemaType *next; \/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType
next	libxml\schemasInternals.h	/^    struct _xmlSchemaTypeLink *next;\/* the next type link ... *\/$/;"	m	struct:_xmlSchemaTypeLink	typeref:struct:_xmlSchemaTypeLink::_xmlSchemaTypeLink
next	libxml\schemasInternals.h	/^    struct _xmlSchemaWildcardNs *next;\/* the next constraint link ... *\/$/;"	m	struct:_xmlSchemaWildcardNs	typeref:struct:_xmlSchemaWildcardNs::_xmlSchemaWildcardNs
node	libxml\schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttribute
node	libxml\schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttributeGroup
node	libxml\schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaElement
node	libxml\schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaFacet
node	libxml\schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaType
node	libxml\schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaWildcard
notaDecl	libxml\schemasInternals.h	/^    xmlHashTablePtr notaDecl;$/;"	m	struct:_xmlSchema
nsSet	libxml\schemasInternals.h	/^    xmlSchemaWildcardNsPtr nsSet; \/* The list of allowed namespaces *\/$/;"	m	struct:_xmlSchemaWildcard
occurs	libxml\schemasInternals.h	/^    int occurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
preserve	libxml\schemasInternals.h	/^    int preserve;        \/* whether to free the document *\/$/;"	m	struct:_xmlSchema
processContents	libxml\schemasInternals.h	/^    int processContents;$/;"	m	struct:_xmlSchemaWildcard
recurse	libxml\schemasInternals.h	/^    int recurse; \/* Obsolete *\/$/;"	m	struct:_xmlSchemaType
redef	libxml\schemasInternals.h	/^    struct _xmlSchemaType *redef; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType
ref	libxml\schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
ref	libxml\schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup
ref	libxml\schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement
ref	libxml\schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
refDecl	libxml\schemasInternals.h	/^    struct _xmlSchemaElement *refDecl; \/* This will now be used for the$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaElement
refDecl	libxml\schemasInternals.h	/^    xmlSchemaAttributePtr refDecl; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
refItem	libxml\schemasInternals.h	/^    xmlSchemaAttributeGroupPtr refItem; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup
refNs	libxml\schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
refNs	libxml\schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup
refNs	libxml\schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement
refNs	libxml\schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
refPrefix	libxml\schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute
refPrefix	libxml\schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup
refPrefix	libxml\schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement
refPrefix	libxml\schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType
regexp	libxml\schemasInternals.h	/^    xmlRegexpPtr    regexp; \/* The regex for patterns *\/$/;"	m	struct:_xmlSchemaFacet
schemasImports	libxml\schemasInternals.h	/^    xmlHashTablePtr schemasImports;$/;"	m	struct:_xmlSchema
scope	libxml\schemasInternals.h	/^    const xmlChar *scope;$/;"	m	struct:_xmlSchemaElement
substGroup	libxml\schemasInternals.h	/^    const xmlChar *substGroup;$/;"	m	struct:_xmlSchemaElement
substGroupNs	libxml\schemasInternals.h	/^    const xmlChar *substGroupNs;$/;"	m	struct:_xmlSchemaElement
subtypes	libxml\schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaAttribute
subtypes	libxml\schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaElement
subtypes	libxml\schemasInternals.h	/^    xmlSchemaTypePtr subtypes;$/;"	m	struct:_xmlSchemaType
targetNamespace	libxml\schemasInternals.h	/^    const xmlChar *targetNamespace; \/* the target namespace *\/$/;"	m	struct:_xmlSchema
targetNamespace	libxml\schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttribute
targetNamespace	libxml\schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttributeGroup
targetNamespace	libxml\schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaElement
targetNamespace	libxml\schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaNotation
targetNamespace	libxml\schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaType
type	libxml\schemasInternals.h	/^    xmlSchemaTypePtr type;\/* the linked type *\/$/;"	m	struct:_xmlSchemaTypeLink
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaAttributeGroup
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaFacet
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaWildcard
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaElement
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaNotation
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaType
type	libxml\schemasInternals.h	/^    xmlSchemaTypeType type;$/;"	m	struct:_xmlSchemaAttribute
typeDecl	libxml\schemasInternals.h	/^    xmlHashTablePtr typeDecl;$/;"	m	struct:_xmlSchema
typeName	libxml\schemasInternals.h	/^    const xmlChar *typeName; \/* the local name of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute
typeNs	libxml\schemasInternals.h	/^    const xmlChar *typeNs; \/* the ns URI of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute
val	libxml\schemasInternals.h	/^    xmlSchemaValPtr val; \/* The compiled value *\/$/;"	m	struct:_xmlSchemaFacet
value	libxml\schemasInternals.h	/^    const xmlChar *value; \/* The original value *\/$/;"	m	struct:_xmlSchemaFacet
value	libxml\schemasInternals.h	/^    const xmlChar *value; \/* The original value of the value constraint. *\/$/;"	m	struct:_xmlSchemaElement
value	libxml\schemasInternals.h	/^    const xmlChar *value;\/* the value *\/$/;"	m	struct:_xmlSchemaWildcardNs
version	libxml\schemasInternals.h	/^    const xmlChar *version;$/;"	m	struct:_xmlSchema
volatiles	libxml\schemasInternals.h	/^    void *volatiles; \/* Obsolete *\/$/;"	m	struct:_xmlSchema
whitespace	libxml\schemasInternals.h	/^    int whitespace;$/;"	m	struct:_xmlSchemaFacet
xmlSchemaAnnot	libxml\schemasInternals.h	/^typedef struct _xmlSchemaAnnot xmlSchemaAnnot;$/;"	t	typeref:struct:_xmlSchemaAnnot
xmlSchemaAnnotPtr	libxml\schemasInternals.h	/^typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;$/;"	t
xmlSchemaAttribute	libxml\schemasInternals.h	/^typedef struct _xmlSchemaAttribute xmlSchemaAttribute;$/;"	t	typeref:struct:_xmlSchemaAttribute
xmlSchemaAttributeGroup	libxml\schemasInternals.h	/^typedef struct _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;$/;"	t	typeref:struct:_xmlSchemaAttributeGroup
xmlSchemaAttributeGroupPtr	libxml\schemasInternals.h	/^typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;$/;"	t
xmlSchemaAttributeLink	libxml\schemasInternals.h	/^typedef struct _xmlSchemaAttributeLink xmlSchemaAttributeLink;$/;"	t	typeref:struct:_xmlSchemaAttributeLink
xmlSchemaAttributeLinkPtr	libxml\schemasInternals.h	/^typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;$/;"	t
xmlSchemaAttributePtr	libxml\schemasInternals.h	/^typedef xmlSchemaAttribute *xmlSchemaAttributePtr;$/;"	t
xmlSchemaContentType	libxml\schemasInternals.h	/^} xmlSchemaContentType;$/;"	t	typeref:enum:__anon30
xmlSchemaElement	libxml\schemasInternals.h	/^typedef struct _xmlSchemaElement xmlSchemaElement;$/;"	t	typeref:struct:_xmlSchemaElement
xmlSchemaElementPtr	libxml\schemasInternals.h	/^typedef xmlSchemaElement *xmlSchemaElementPtr;$/;"	t
xmlSchemaFacet	libxml\schemasInternals.h	/^typedef struct _xmlSchemaFacet xmlSchemaFacet;$/;"	t	typeref:struct:_xmlSchemaFacet
xmlSchemaFacetLink	libxml\schemasInternals.h	/^typedef struct _xmlSchemaFacetLink xmlSchemaFacetLink;$/;"	t	typeref:struct:_xmlSchemaFacetLink
xmlSchemaFacetLinkPtr	libxml\schemasInternals.h	/^typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;$/;"	t
xmlSchemaFacetPtr	libxml\schemasInternals.h	/^typedef xmlSchemaFacet *xmlSchemaFacetPtr;$/;"	t
xmlSchemaNotation	libxml\schemasInternals.h	/^typedef struct _xmlSchemaNotation xmlSchemaNotation;$/;"	t	typeref:struct:_xmlSchemaNotation
xmlSchemaNotationPtr	libxml\schemasInternals.h	/^typedef xmlSchemaNotation *xmlSchemaNotationPtr;$/;"	t
xmlSchemaType	libxml\schemasInternals.h	/^typedef struct _xmlSchemaType xmlSchemaType;$/;"	t	typeref:struct:_xmlSchemaType
xmlSchemaTypeLink	libxml\schemasInternals.h	/^typedef struct _xmlSchemaTypeLink xmlSchemaTypeLink;$/;"	t	typeref:struct:_xmlSchemaTypeLink
xmlSchemaTypeLinkPtr	libxml\schemasInternals.h	/^typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;$/;"	t
xmlSchemaTypePtr	libxml\schemasInternals.h	/^typedef xmlSchemaType *xmlSchemaTypePtr;$/;"	t
xmlSchemaTypeType	libxml\schemasInternals.h	/^} xmlSchemaTypeType;$/;"	t	typeref:enum:__anon29
xmlSchemaVal	libxml\schemasInternals.h	/^typedef struct _xmlSchemaVal xmlSchemaVal;$/;"	t	typeref:struct:_xmlSchemaVal
xmlSchemaValPtr	libxml\schemasInternals.h	/^typedef xmlSchemaVal *xmlSchemaValPtr;$/;"	t
xmlSchemaValType	libxml\schemasInternals.h	/^} xmlSchemaValType;$/;"	t	typeref:enum:__anon28
xmlSchemaWildcard	libxml\schemasInternals.h	/^typedef struct _xmlSchemaWildcard xmlSchemaWildcard;$/;"	t	typeref:struct:_xmlSchemaWildcard
xmlSchemaWildcardNs	libxml\schemasInternals.h	/^typedef struct _xmlSchemaWildcardNs xmlSchemaWildcardNs;$/;"	t	typeref:struct:_xmlSchemaWildcardNs
xmlSchemaWildcardNsPtr	libxml\schemasInternals.h	/^typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;$/;"	t
xmlSchemaWildcardPtr	libxml\schemasInternals.h	/^typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;$/;"	t
XML_SCHEMATRON_OUT_BUFFER	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_BUFFER = 1 << 9,	\/* output to a buffer *\/$/;"	e	enum:__anon31
XML_SCHEMATRON_OUT_ERROR	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_ERROR = 1 << 3,  \/* output via xmlStructuredErrorFunc *\/$/;"	e	enum:__anon31
XML_SCHEMATRON_OUT_FILE	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_FILE = 1 << 8,	\/* output to a file descriptor *\/$/;"	e	enum:__anon31
XML_SCHEMATRON_OUT_IO	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_IO = 1 << 10	\/* output to I\/O mechanism *\/$/;"	e	enum:__anon31
XML_SCHEMATRON_OUT_QUIET	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_QUIET = 1 << 0,	\/* quiet no report *\/$/;"	e	enum:__anon31
XML_SCHEMATRON_OUT_TEXT	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_TEXT = 1 << 1,	\/* build a textual report *\/$/;"	e	enum:__anon31
XML_SCHEMATRON_OUT_XML	libxml\schematron.h	/^    XML_SCHEMATRON_OUT_XML = 1 << 2,	\/* output SVRL *\/$/;"	e	enum:__anon31
__XML_SCHEMATRON_H__	libxml\schematron.h	12;"	d
xmlSchematron	libxml\schematron.h	/^typedef struct _xmlSchematron xmlSchematron;$/;"	t	typeref:struct:_xmlSchematron
xmlSchematronParserCtxt	libxml\schematron.h	/^typedef struct _xmlSchematronParserCtxt xmlSchematronParserCtxt;$/;"	t	typeref:struct:_xmlSchematronParserCtxt
xmlSchematronParserCtxtPtr	libxml\schematron.h	/^typedef xmlSchematronParserCtxt *xmlSchematronParserCtxtPtr;$/;"	t
xmlSchematronPtr	libxml\schematron.h	/^typedef xmlSchematron *xmlSchematronPtr;$/;"	t
xmlSchematronValidCtxt	libxml\schematron.h	/^typedef struct _xmlSchematronValidCtxt xmlSchematronValidCtxt;$/;"	t	typeref:struct:_xmlSchematronValidCtxt
xmlSchematronValidCtxtPtr	libxml\schematron.h	/^typedef xmlSchematronValidCtxt *xmlSchematronValidCtxtPtr;$/;"	t
xmlSchematronValidOptions	libxml\schematron.h	/^} xmlSchematronValidOptions;$/;"	t	typeref:enum:__anon31
xmlSchematronValidityErrorFunc	libxml\schematron.h	/^typedef void (*xmlSchematronValidityErrorFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlSchematronValidityWarningFunc	libxml\schematron.h	/^typedef void (*xmlSchematronValidityWarningFunc) (void *ctx, const char *msg, ...);$/;"	t
__XML_THREADS_H__	libxml\threads.h	12;"	d
xmlMutex	libxml\threads.h	/^typedef struct _xmlMutex xmlMutex;$/;"	t	typeref:struct:_xmlMutex
xmlMutexPtr	libxml\threads.h	/^typedef xmlMutex *xmlMutexPtr;$/;"	t
xmlRMutex	libxml\threads.h	/^typedef struct _xmlRMutex xmlRMutex;$/;"	t	typeref:struct:_xmlRMutex
xmlRMutexPtr	libxml\threads.h	/^typedef xmlRMutex *xmlRMutexPtr;$/;"	t
BASE_BUFFER_SIZE	libxml\tree.h	55;"	d
ExternalID	libxml\tree.h	/^    const xmlChar *ExternalID;	\/* External identifier for PUBLIC DTD *\/$/;"	m	struct:_xmlDtd
PublicID	libxml\tree.h	/^    const xmlChar               *PublicID;	\/* Public identifier, if any *\/$/;"	m	struct:_xmlNotation
SystemID	libxml\tree.h	/^    const xmlChar               *SystemID;	\/* System identifier, if any *\/$/;"	m	struct:_xmlNotation
SystemID	libxml\tree.h	/^    const xmlChar *SystemID;	\/* URI for a SYSTEM or PUBLIC DTD *\/$/;"	m	struct:_xmlDtd
URL	libxml\tree.h	/^    const xmlChar  *URL;	\/* The URI for that document *\/$/;"	m	struct:_xmlDoc
XML_ATTRIBUTE_CDATA	libxml\tree.h	/^    XML_ATTRIBUTE_CDATA = 1,$/;"	e	enum:__anon34
XML_ATTRIBUTE_DECL	libxml\tree.h	/^    XML_ATTRIBUTE_DECL=		16,$/;"	e	enum:__anon33
XML_ATTRIBUTE_ENTITIES	libxml\tree.h	/^    XML_ATTRIBUTE_ENTITIES,$/;"	e	enum:__anon34
XML_ATTRIBUTE_ENTITY	libxml\tree.h	/^    XML_ATTRIBUTE_ENTITY,$/;"	e	enum:__anon34
XML_ATTRIBUTE_ENUMERATION	libxml\tree.h	/^    XML_ATTRIBUTE_ENUMERATION,$/;"	e	enum:__anon34
XML_ATTRIBUTE_FIXED	libxml\tree.h	/^    XML_ATTRIBUTE_FIXED$/;"	e	enum:__anon35
XML_ATTRIBUTE_ID	libxml\tree.h	/^    XML_ATTRIBUTE_ID,$/;"	e	enum:__anon34
XML_ATTRIBUTE_IDREF	libxml\tree.h	/^    XML_ATTRIBUTE_IDREF	,$/;"	e	enum:__anon34
XML_ATTRIBUTE_IDREFS	libxml\tree.h	/^    XML_ATTRIBUTE_IDREFS,$/;"	e	enum:__anon34
XML_ATTRIBUTE_IMPLIED	libxml\tree.h	/^    XML_ATTRIBUTE_IMPLIED,$/;"	e	enum:__anon35
XML_ATTRIBUTE_NMTOKEN	libxml\tree.h	/^    XML_ATTRIBUTE_NMTOKEN,$/;"	e	enum:__anon34
XML_ATTRIBUTE_NMTOKENS	libxml\tree.h	/^    XML_ATTRIBUTE_NMTOKENS,$/;"	e	enum:__anon34
XML_ATTRIBUTE_NODE	libxml\tree.h	/^    XML_ATTRIBUTE_NODE=		2,$/;"	e	enum:__anon33
XML_ATTRIBUTE_NONE	libxml\tree.h	/^    XML_ATTRIBUTE_NONE = 1,$/;"	e	enum:__anon35
XML_ATTRIBUTE_NOTATION	libxml\tree.h	/^    XML_ATTRIBUTE_NOTATION$/;"	e	enum:__anon34
XML_ATTRIBUTE_REQUIRED	libxml\tree.h	/^    XML_ATTRIBUTE_REQUIRED,$/;"	e	enum:__anon35
XML_BUFFER_ALLOC_DOUBLEIT	libxml\tree.h	/^    XML_BUFFER_ALLOC_DOUBLEIT,	\/* double each time one need to grow *\/$/;"	e	enum:__anon32
XML_BUFFER_ALLOC_EXACT	libxml\tree.h	/^    XML_BUFFER_ALLOC_EXACT,	\/* grow only to the minimal size *\/$/;"	e	enum:__anon32
XML_BUFFER_ALLOC_IMMUTABLE	libxml\tree.h	/^    XML_BUFFER_ALLOC_IMMUTABLE, \/* immutable buffer *\/$/;"	e	enum:__anon32
XML_BUFFER_ALLOC_IO	libxml\tree.h	/^    XML_BUFFER_ALLOC_IO		\/* special allocation scheme used for I\/O *\/$/;"	e	enum:__anon32
XML_CDATA_SECTION_NODE	libxml\tree.h	/^    XML_CDATA_SECTION_NODE=	4,$/;"	e	enum:__anon33
XML_COMMENT_NODE	libxml\tree.h	/^    XML_COMMENT_NODE=		8,$/;"	e	enum:__anon33
XML_DOCB_DOCUMENT_NODE	libxml\tree.h	/^   ,XML_DOCB_DOCUMENT_NODE=	21$/;"	e	enum:__anon33
XML_DOCUMENT_FRAG_NODE	libxml\tree.h	/^    XML_DOCUMENT_FRAG_NODE=	11,$/;"	e	enum:__anon33
XML_DOCUMENT_NODE	libxml\tree.h	/^    XML_DOCUMENT_NODE=		9,$/;"	e	enum:__anon33
XML_DOCUMENT_TYPE_NODE	libxml\tree.h	/^    XML_DOCUMENT_TYPE_NODE=	10,$/;"	e	enum:__anon33
XML_DOC_DTDVALID	libxml\tree.h	/^    XML_DOC_DTDVALID		= 1<<3, \/* DTD validation was successful *\/$/;"	e	enum:__anon39
XML_DOC_HTML	libxml\tree.h	/^    XML_DOC_HTML		= 1<<7  \/* parsed or built HTML document *\/$/;"	e	enum:__anon39
XML_DOC_INTERNAL	libxml\tree.h	/^    XML_DOC_INTERNAL		= 1<<6, \/* built for internal processing *\/$/;"	e	enum:__anon39
XML_DOC_NSVALID	libxml\tree.h	/^    XML_DOC_NSVALID		= 1<<1, \/* document is Namespace valid *\/$/;"	e	enum:__anon39
XML_DOC_OLD10	libxml\tree.h	/^    XML_DOC_OLD10		= 1<<2, \/* parsed with old XML-1.0 parser *\/$/;"	e	enum:__anon39
XML_DOC_USERBUILT	libxml\tree.h	/^    XML_DOC_USERBUILT		= 1<<5, \/* Document was built using the API$/;"	e	enum:__anon39
XML_DOC_WELLFORMED	libxml\tree.h	/^    XML_DOC_WELLFORMED		= 1<<0, \/* document is XML well formed *\/$/;"	e	enum:__anon39
XML_DOC_XINCLUDE	libxml\tree.h	/^    XML_DOC_XINCLUDE		= 1<<4, \/* XInclude substitution was done *\/$/;"	e	enum:__anon39
XML_DTD_NODE	libxml\tree.h	/^    XML_DTD_NODE=		14,$/;"	e	enum:__anon33
XML_ELEMENT_CONTENT_ELEMENT	libxml\tree.h	/^    XML_ELEMENT_CONTENT_ELEMENT,$/;"	e	enum:__anon36
XML_ELEMENT_CONTENT_MULT	libxml\tree.h	/^    XML_ELEMENT_CONTENT_MULT,$/;"	e	enum:__anon37
XML_ELEMENT_CONTENT_ONCE	libxml\tree.h	/^    XML_ELEMENT_CONTENT_ONCE = 1,$/;"	e	enum:__anon37
XML_ELEMENT_CONTENT_OPT	libxml\tree.h	/^    XML_ELEMENT_CONTENT_OPT,$/;"	e	enum:__anon37
XML_ELEMENT_CONTENT_OR	libxml\tree.h	/^    XML_ELEMENT_CONTENT_OR$/;"	e	enum:__anon36
XML_ELEMENT_CONTENT_PCDATA	libxml\tree.h	/^    XML_ELEMENT_CONTENT_PCDATA = 1,$/;"	e	enum:__anon36
XML_ELEMENT_CONTENT_PLUS	libxml\tree.h	/^    XML_ELEMENT_CONTENT_PLUS$/;"	e	enum:__anon37
XML_ELEMENT_CONTENT_SEQ	libxml\tree.h	/^    XML_ELEMENT_CONTENT_SEQ,$/;"	e	enum:__anon36
XML_ELEMENT_DECL	libxml\tree.h	/^    XML_ELEMENT_DECL=		15,$/;"	e	enum:__anon33
XML_ELEMENT_NODE	libxml\tree.h	/^    XML_ELEMENT_NODE=		1,$/;"	e	enum:__anon33
XML_ELEMENT_TYPE_ANY	libxml\tree.h	/^    XML_ELEMENT_TYPE_ANY,$/;"	e	enum:__anon38
XML_ELEMENT_TYPE_ELEMENT	libxml\tree.h	/^    XML_ELEMENT_TYPE_ELEMENT$/;"	e	enum:__anon38
XML_ELEMENT_TYPE_EMPTY	libxml\tree.h	/^    XML_ELEMENT_TYPE_EMPTY = 1,$/;"	e	enum:__anon38
XML_ELEMENT_TYPE_MIXED	libxml\tree.h	/^    XML_ELEMENT_TYPE_MIXED,$/;"	e	enum:__anon38
XML_ELEMENT_TYPE_UNDEFINED	libxml\tree.h	/^    XML_ELEMENT_TYPE_UNDEFINED = 0,$/;"	e	enum:__anon38
XML_ENTITY_DECL	libxml\tree.h	/^    XML_ENTITY_DECL=		17,$/;"	e	enum:__anon33
XML_ENTITY_NODE	libxml\tree.h	/^    XML_ENTITY_NODE=		6,$/;"	e	enum:__anon33
XML_ENTITY_REF_NODE	libxml\tree.h	/^    XML_ENTITY_REF_NODE=	5,$/;"	e	enum:__anon33
XML_GET_CONTENT	libxml\tree.h	476;"	d
XML_GET_LINE	libxml\tree.h	484;"	d
XML_HTML_DOCUMENT_NODE	libxml\tree.h	/^    XML_HTML_DOCUMENT_NODE=	13,$/;"	e	enum:__anon33
XML_LOCAL_NAMESPACE	libxml\tree.h	335;"	d
XML_NAMESPACE_DECL	libxml\tree.h	/^    XML_NAMESPACE_DECL=		18,$/;"	e	enum:__anon33
XML_NOTATION_NODE	libxml\tree.h	/^    XML_NOTATION_NODE=		12,$/;"	e	enum:__anon33
XML_PI_NODE	libxml\tree.h	/^    XML_PI_NODE=		7,$/;"	e	enum:__anon33
XML_TEXT_NODE	libxml\tree.h	/^    XML_TEXT_NODE=		3,$/;"	e	enum:__anon33
XML_XINCLUDE_END	libxml\tree.h	/^    XML_XINCLUDE_END=		20$/;"	e	enum:__anon33
XML_XINCLUDE_START	libxml\tree.h	/^    XML_XINCLUDE_START=		19,$/;"	e	enum:__anon33
XML_XML_ID	libxml\tree.h	109;"	d
XML_XML_NAMESPACE	libxml\tree.h	101;"	d
__XML_TREE_H__	libxml\tree.h	13;"	d
_private	libxml\tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlAttribute
_private	libxml\tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlElement
_private	libxml\tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlAttr
_private	libxml\tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDoc
_private	libxml\tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDtd
_private	libxml\tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlNode
_private	libxml\tree.h	/^    void           *_private;   \/* application data *\/$/;"	m	struct:_xmlNs
_private	libxml\tree.h	/^    void * _private;$/;"	m	struct:_xmlDOMWrapCtxt
_xmlAttr	libxml\tree.h	/^struct _xmlAttr {$/;"	s
_xmlAttribute	libxml\tree.h	/^struct _xmlAttribute {$/;"	s
_xmlBuffer	libxml\tree.h	/^struct _xmlBuffer {$/;"	s
_xmlDOMWrapCtxt	libxml\tree.h	/^struct _xmlDOMWrapCtxt {$/;"	s
_xmlDoc	libxml\tree.h	/^struct _xmlDoc {$/;"	s
_xmlDtd	libxml\tree.h	/^struct _xmlDtd {$/;"	s
_xmlElement	libxml\tree.h	/^struct _xmlElement {$/;"	s
_xmlElementContent	libxml\tree.h	/^struct _xmlElementContent {$/;"	s
_xmlEnumeration	libxml\tree.h	/^struct _xmlEnumeration {$/;"	s
_xmlID	libxml\tree.h	/^struct _xmlID {$/;"	s
_xmlNode	libxml\tree.h	/^struct _xmlNode {$/;"	s
_xmlNotation	libxml\tree.h	/^struct _xmlNotation {$/;"	s
_xmlNs	libxml\tree.h	/^struct _xmlNs {$/;"	s
_xmlRef	libxml\tree.h	/^struct _xmlRef {$/;"	s
alloc	libxml\tree.h	/^    xmlBufferAllocationScheme alloc; \/* The realloc method *\/$/;"	m	struct:_xmlBuffer
attr	libxml\tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlID
attr	libxml\tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlRef
attributes	libxml\tree.h	/^    void          *attributes;  \/* Hash table for attributes if any *\/$/;"	m	struct:_xmlDtd
attributes	libxml\tree.h	/^    xmlAttributePtr   attributes;	\/* List of the declared attributes *\/$/;"	m	struct:_xmlElement
atype	libxml\tree.h	/^    xmlAttributeType       atype;	\/* The attribute type *\/$/;"	m	struct:_xmlAttribute
atype	libxml\tree.h	/^    xmlAttributeType atype;     \/* the attribute type if validating *\/$/;"	m	struct:_xmlAttr
c1	libxml\tree.h	/^    struct _xmlElementContent *c1;	\/* first child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent
c2	libxml\tree.h	/^    struct _xmlElementContent *c2;	\/* second child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent
charset	libxml\tree.h	/^    int             charset;    \/* encoding of the in-memory content$/;"	m	struct:_xmlDoc
children	libxml\tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
children	libxml\tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
children	libxml\tree.h	/^    struct _xmlNode *children;	\/* parent->childs link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
children	libxml\tree.h	/^    struct _xmlNode *children;	\/* the document tree *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
children	libxml\tree.h	/^    struct _xmlNode *children;	\/* the value of the property *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode
children	libxml\tree.h	/^    struct _xmlNode *children;	\/* the value of the property link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
compression	libxml\tree.h	/^    int             compression;\/* level of zlib compression *\/$/;"	m	struct:_xmlDoc
contModel	libxml\tree.h	/^    void	      *contModel;$/;"	m	struct:_xmlElement
contModel	libxml\tree.h	/^    xmlRegexpPtr       contModel;	\/* the validating regexp *\/$/;"	m	struct:_xmlElement
content	libxml\tree.h	/^    xmlChar         *content;   \/* the content *\/$/;"	m	struct:_xmlNode
content	libxml\tree.h	/^    xmlChar *content;		\/* The buffer content UTF8 *\/$/;"	m	struct:_xmlBuffer
content	libxml\tree.h	/^    xmlElementContentPtr content;	\/* the allowed element content *\/$/;"	m	struct:_xmlElement
contentIO	libxml\tree.h	/^    xmlChar *contentIO;		\/* in IO mode we may have a different base *\/$/;"	m	struct:_xmlBuffer
context	libxml\tree.h	/^    struct _xmlDoc *context;		\/* normally an xmlDoc *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlDoc
def	libxml\tree.h	/^    xmlAttributeDefault      def;	\/* the default *\/$/;"	m	struct:_xmlAttribute
defaultValue	libxml\tree.h	/^    const xmlChar  *defaultValue;	\/* or the default value *\/$/;"	m	struct:_xmlAttribute
dict	libxml\tree.h	/^    struct _xmlDict *dict;      \/* dict used to allocate names or NULL *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDict
doc	libxml\tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDoc
doc	libxml\tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDoc
doc	libxml\tree.h	/^    struct _xmlDoc   *doc;	\/* The document holding the ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlDoc
doc	libxml\tree.h	/^    struct _xmlDoc  *doc;	\/* autoreference to itself *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDoc
doc	libxml\tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlDoc
doc	libxml\tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc
doc	libxml\tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlDoc
elem	libxml\tree.h	/^    const xmlChar          *elem;	\/* Element holding the attribute *\/$/;"	m	struct:_xmlAttribute
elements	libxml\tree.h	/^    void          *elements;    \/* Hash table for elements if any *\/$/;"	m	struct:_xmlDtd
encoding	libxml\tree.h	/^    const xmlChar  *encoding;   \/* external initial encoding, if any *\/$/;"	m	struct:_xmlDoc
entities	libxml\tree.h	/^    void          *entities;    \/* Hash table for entities if any *\/$/;"	m	struct:_xmlDtd
etype	libxml\tree.h	/^    xmlElementTypeVal      etype;	\/* The type *\/$/;"	m	struct:_xmlElement
extSubset	libxml\tree.h	/^    struct _xmlDtd  *extSubset;	\/* the document external subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd
extra	libxml\tree.h	/^    unsigned short   extra;	\/* extra data for XPath\/XSLT *\/$/;"	m	struct:_xmlNode
getNsForNodeFunc	libxml\tree.h	/^    xmlDOMWrapAcquireNsFunction getNsForNodeFunc;$/;"	m	struct:_xmlDOMWrapCtxt
href	libxml\tree.h	/^    const xmlChar *href;	\/* URL for the namespace *\/$/;"	m	struct:_xmlNs
ids	libxml\tree.h	/^    void           *ids;        \/* Hash table for ID attributes if any *\/$/;"	m	struct:_xmlDoc
intSubset	libxml\tree.h	/^    struct _xmlDtd  *intSubset;	\/* the document internal subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd
last	libxml\tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
last	libxml\tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
last	libxml\tree.h	/^    struct _xmlNode *last;	\/* NULL *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode
last	libxml\tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
last	libxml\tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
last	libxml\tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
line	libxml\tree.h	/^    unsigned short   line;	\/* line number *\/$/;"	m	struct:_xmlNode
lineno	libxml\tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlID
lineno	libxml\tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlRef
name	libxml\tree.h	/^    char           *name;	\/* name\/filename\/URI of the document *\/$/;"	m	struct:_xmlDoc
name	libxml\tree.h	/^    const xmlChar               *name;	        \/* Notation name *\/$/;"	m	struct:_xmlNotation
name	libxml\tree.h	/^    const xmlChar             *name;	\/* Element name *\/$/;"	m	struct:_xmlElementContent
name	libxml\tree.h	/^    const xmlChar            *name;	\/* Enumeration name *\/$/;"	m	struct:_xmlEnumeration
name	libxml\tree.h	/^    const xmlChar          *name;	\/* Attribute name *\/$/;"	m	struct:_xmlAttribute
name	libxml\tree.h	/^    const xmlChar          *name;	\/* Element name *\/$/;"	m	struct:_xmlElement
name	libxml\tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlID
name	libxml\tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlRef
name	libxml\tree.h	/^    const xmlChar   *name;      \/* the name of the node, or the entity *\/$/;"	m	struct:_xmlNode
name	libxml\tree.h	/^    const xmlChar   *name;      \/* the name of the property *\/$/;"	m	struct:_xmlAttr
name	libxml\tree.h	/^    const xmlChar *name;	\/* Name of the DTD *\/$/;"	m	struct:_xmlDtd
namespaceMap	libxml\tree.h	/^    void * namespaceMap;$/;"	m	struct:_xmlDOMWrapCtxt
next	libxml\tree.h	/^    struct _xmlAttr *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr
next	libxml\tree.h	/^    struct _xmlEnumeration    *next;	\/* next one *\/$/;"	m	struct:_xmlEnumeration	typeref:struct:_xmlEnumeration::_xmlEnumeration
next	libxml\tree.h	/^    struct _xmlID    *next;	\/* next ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlID
next	libxml\tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
next	libxml\tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
next	libxml\tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
next	libxml\tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
next	libxml\tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
next	libxml\tree.h	/^    struct _xmlNs  *next;	\/* next Ns link for this node  *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlNs
next	libxml\tree.h	/^    struct _xmlRef    *next;	\/* next Ref *\/$/;"	m	struct:_xmlRef	typeref:struct:_xmlRef::_xmlRef
nexth	libxml\tree.h	/^    struct _xmlAttribute  *nexth;	\/* next in hash table *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlAttribute
notations	libxml\tree.h	/^    void          *notations;   \/* Hash table for notations if any *\/$/;"	m	struct:_xmlDtd
ns	libxml\tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlAttr
ns	libxml\tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlNode
nsDef	libxml\tree.h	/^    xmlNs           *nsDef;     \/* namespace definitions on this node *\/$/;"	m	struct:_xmlNode
ocur	libxml\tree.h	/^    xmlElementContentOccur    ocur;	\/* ONCE, OPT, MULT or PLUS *\/$/;"	m	struct:_xmlElementContent
oldNs	libxml\tree.h	/^    struct _xmlNs   *oldNs;	\/* Global namespace, the old way *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNs
parent	libxml\tree.h	/^    struct _xmlDoc  *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc
parent	libxml\tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDtd
parent	libxml\tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDtd
parent	libxml\tree.h	/^    struct _xmlElementContent *parent;	\/* parent *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent
parent	libxml\tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode
parent	libxml\tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
parent	libxml\tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
parseFlags	libxml\tree.h	/^    int             parseFlags;	\/* set of xmlParserOption used to parse the$/;"	m	struct:_xmlDoc
pentities	libxml\tree.h	/^    void          *pentities;   \/* Hash table for param entities if any *\/$/;"	m	struct:_xmlDtd
prefix	libxml\tree.h	/^    const xmlChar             *prefix;	\/* Namespace prefix *\/$/;"	m	struct:_xmlElementContent
prefix	libxml\tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlAttribute
prefix	libxml\tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlElement
prefix	libxml\tree.h	/^    const xmlChar *prefix;	\/* prefix for the namespace *\/$/;"	m	struct:_xmlNs
prev	libxml\tree.h	/^    struct _xmlAttr *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr
prev	libxml\tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
prev	libxml\tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
prev	libxml\tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
prev	libxml\tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
prev	libxml\tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
properties	libxml\tree.h	/^    int             properties;	\/* set of xmlDocProperties for this document$/;"	m	struct:_xmlDoc
properties	libxml\tree.h	/^    struct _xmlAttr *properties;\/* properties list *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlAttr
psvi	libxml\tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlAttr
psvi	libxml\tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlNode
psvi	libxml\tree.h	/^    void           *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlDoc
refs	libxml\tree.h	/^    void           *refs;       \/* Hash table for IDREFs attributes if any *\/$/;"	m	struct:_xmlDoc
size	libxml\tree.h	/^    unsigned int size;		\/* The buffer size *\/$/;"	m	struct:_xmlBuffer
standalone	libxml\tree.h	/^    int             standalone; \/* standalone document (no external refs) $/;"	m	struct:_xmlDoc
tree	libxml\tree.h	/^    xmlEnumerationPtr       tree;       \/* or the enumeration tree if any *\/$/;"	m	struct:_xmlAttribute
type	libxml\tree.h	/^    int type;$/;"	m	struct:_xmlDOMWrapCtxt
type	libxml\tree.h	/^    xmlElementContentType     type;	\/* PCDATA, ELEMENT, SEQ or OR *\/$/;"	m	struct:_xmlElementContent
type	libxml\tree.h	/^    xmlElementType          type;       \/* XML_ATTRIBUTE_DECL, must be second ! *\/$/;"	m	struct:_xmlAttribute
type	libxml\tree.h	/^    xmlElementType          type;       \/* XML_ELEMENT_DECL, must be second ! *\/$/;"	m	struct:_xmlElement
type	libxml\tree.h	/^    xmlElementType   type;	\/* type number, must be second ! *\/$/;"	m	struct:_xmlNode
type	libxml\tree.h	/^    xmlElementType   type;      \/* XML_ATTRIBUTE_NODE, must be second ! *\/$/;"	m	struct:_xmlAttr
type	libxml\tree.h	/^    xmlElementType  type;       \/* XML_DOCUMENT_NODE, must be second ! *\/$/;"	m	struct:_xmlDoc
type	libxml\tree.h	/^    xmlElementType  type;       \/* XML_DTD_NODE, must be second ! *\/$/;"	m	struct:_xmlDtd
type	libxml\tree.h	/^    xmlNsType      type;	\/* global or local *\/$/;"	m	struct:_xmlNs
use	libxml\tree.h	/^    unsigned int use;		\/* The buffer size used *\/$/;"	m	struct:_xmlBuffer
value	libxml\tree.h	/^    const xmlChar     *value;	\/* The Ref name *\/$/;"	m	struct:_xmlRef
value	libxml\tree.h	/^    const xmlChar    *value;	\/* The ID name *\/$/;"	m	struct:_xmlID
version	libxml\tree.h	/^    const xmlChar  *version;	\/* the XML version string *\/$/;"	m	struct:_xmlDoc
xmlAttr	libxml\tree.h	/^typedef struct _xmlAttr xmlAttr;$/;"	t	typeref:struct:_xmlAttr
xmlAttrPtr	libxml\tree.h	/^typedef xmlAttr *xmlAttrPtr;$/;"	t
xmlAttribute	libxml\tree.h	/^typedef struct _xmlAttribute xmlAttribute;$/;"	t	typeref:struct:_xmlAttribute
xmlAttributeDefault	libxml\tree.h	/^} xmlAttributeDefault;$/;"	t	typeref:enum:__anon35
xmlAttributePtr	libxml\tree.h	/^typedef xmlAttribute *xmlAttributePtr;$/;"	t
xmlAttributeType	libxml\tree.h	/^} xmlAttributeType;$/;"	t	typeref:enum:__anon34
xmlBuffer	libxml\tree.h	/^typedef struct _xmlBuffer xmlBuffer;$/;"	t	typeref:struct:_xmlBuffer
xmlBufferAllocationScheme	libxml\tree.h	/^} xmlBufferAllocationScheme;$/;"	t	typeref:enum:__anon32
xmlBufferPtr	libxml\tree.h	/^typedef xmlBuffer *xmlBufferPtr;$/;"	t
xmlChildrenNode	libxml\tree.h	599;"	d
xmlDOMWrapAcquireNsFunction	libxml\tree.h	/^typedef xmlNsPtr (*xmlDOMWrapAcquireNsFunction) (xmlDOMWrapCtxtPtr ctxt,$/;"	t
xmlDOMWrapCtxt	libxml\tree.h	/^typedef struct _xmlDOMWrapCtxt xmlDOMWrapCtxt;$/;"	t	typeref:struct:_xmlDOMWrapCtxt
xmlDOMWrapCtxtPtr	libxml\tree.h	/^typedef xmlDOMWrapCtxt *xmlDOMWrapCtxtPtr;$/;"	t
xmlDoc	libxml\tree.h	/^typedef struct _xmlDoc xmlDoc;$/;"	t	typeref:struct:_xmlDoc
xmlDocProperties	libxml\tree.h	/^} xmlDocProperties;$/;"	t	typeref:enum:__anon39
xmlDocPtr	libxml\tree.h	/^typedef xmlDoc *xmlDocPtr;$/;"	t
xmlDtd	libxml\tree.h	/^typedef struct _xmlDtd xmlDtd;$/;"	t	typeref:struct:_xmlDtd
xmlDtdPtr	libxml\tree.h	/^typedef xmlDtd *xmlDtdPtr;$/;"	t
xmlElement	libxml\tree.h	/^typedef struct _xmlElement xmlElement;$/;"	t	typeref:struct:_xmlElement
xmlElementContent	libxml\tree.h	/^typedef struct _xmlElementContent xmlElementContent;$/;"	t	typeref:struct:_xmlElementContent
xmlElementContentOccur	libxml\tree.h	/^} xmlElementContentOccur;$/;"	t	typeref:enum:__anon37
xmlElementContentPtr	libxml\tree.h	/^typedef xmlElementContent *xmlElementContentPtr;$/;"	t
xmlElementContentType	libxml\tree.h	/^} xmlElementContentType;$/;"	t	typeref:enum:__anon36
xmlElementPtr	libxml\tree.h	/^typedef xmlElement *xmlElementPtr;$/;"	t
xmlElementType	libxml\tree.h	/^} xmlElementType;$/;"	t	typeref:enum:__anon33
xmlElementTypeVal	libxml\tree.h	/^} xmlElementTypeVal;$/;"	t	typeref:enum:__anon38
xmlEntity	libxml\tree.h	/^typedef struct _xmlEntity xmlEntity;$/;"	t	typeref:struct:_xmlEntity
xmlEntityPtr	libxml\tree.h	/^typedef xmlEntity *xmlEntityPtr;$/;"	t
xmlEnumeration	libxml\tree.h	/^typedef struct _xmlEnumeration xmlEnumeration;$/;"	t	typeref:struct:_xmlEnumeration
xmlEnumerationPtr	libxml\tree.h	/^typedef xmlEnumeration *xmlEnumerationPtr;$/;"	t
xmlID	libxml\tree.h	/^typedef struct _xmlID xmlID;$/;"	t	typeref:struct:_xmlID
xmlIDPtr	libxml\tree.h	/^typedef xmlID *xmlIDPtr;$/;"	t
xmlNode	libxml\tree.h	/^typedef struct _xmlNode xmlNode;$/;"	t	typeref:struct:_xmlNode
xmlNodePtr	libxml\tree.h	/^typedef xmlNode *xmlNodePtr;$/;"	t
xmlNotation	libxml\tree.h	/^typedef struct _xmlNotation xmlNotation;$/;"	t	typeref:struct:_xmlNotation
xmlNotationPtr	libxml\tree.h	/^typedef xmlNotation *xmlNotationPtr;$/;"	t
xmlNs	libxml\tree.h	/^typedef struct _xmlNs xmlNs;$/;"	t	typeref:struct:_xmlNs
xmlNsPtr	libxml\tree.h	/^typedef xmlNs *xmlNsPtr;$/;"	t
xmlNsType	libxml\tree.h	/^typedef xmlElementType xmlNsType;$/;"	t
xmlOutputBuffer	libxml\tree.h	/^typedef struct _xmlOutputBuffer xmlOutputBuffer;$/;"	t	typeref:struct:_xmlOutputBuffer
xmlOutputBufferPtr	libxml\tree.h	/^typedef xmlOutputBuffer *xmlOutputBufferPtr;$/;"	t
xmlParserCtxt	libxml\tree.h	/^typedef struct _xmlParserCtxt xmlParserCtxt;$/;"	t	typeref:struct:_xmlParserCtxt
xmlParserCtxtPtr	libxml\tree.h	/^typedef xmlParserCtxt *xmlParserCtxtPtr;$/;"	t
xmlParserInput	libxml\tree.h	/^typedef struct _xmlParserInput xmlParserInput;$/;"	t	typeref:struct:_xmlParserInput
xmlParserInputBuffer	libxml\tree.h	/^typedef struct _xmlParserInputBuffer xmlParserInputBuffer;$/;"	t	typeref:struct:_xmlParserInputBuffer
xmlParserInputBufferPtr	libxml\tree.h	/^typedef xmlParserInputBuffer *xmlParserInputBufferPtr;$/;"	t
xmlParserInputPtr	libxml\tree.h	/^typedef xmlParserInput *xmlParserInputPtr;$/;"	t
xmlRef	libxml\tree.h	/^typedef struct _xmlRef xmlRef;$/;"	t	typeref:struct:_xmlRef
xmlRefPtr	libxml\tree.h	/^typedef xmlRef *xmlRefPtr;$/;"	t
xmlRootNode	libxml\tree.h	609;"	d
xmlSAXHandler	libxml\tree.h	/^typedef struct _xmlSAXHandler xmlSAXHandler;$/;"	t	typeref:struct:_xmlSAXHandler
xmlSAXHandlerPtr	libxml\tree.h	/^typedef xmlSAXHandler *xmlSAXHandlerPtr;$/;"	t
xmlSAXLocator	libxml\tree.h	/^typedef struct _xmlSAXLocator xmlSAXLocator;$/;"	t	typeref:struct:_xmlSAXLocator
xmlSAXLocatorPtr	libxml\tree.h	/^typedef xmlSAXLocator *xmlSAXLocatorPtr;$/;"	t
__XML_URI_H__	libxml\uri.h	12;"	d
_xmlURI	libxml\uri.h	/^struct _xmlURI {$/;"	s
authority	libxml\uri.h	/^    char *authority;	\/* the authority part *\/$/;"	m	struct:_xmlURI
cleanup	libxml\uri.h	/^    int  cleanup;	\/* parsing potentially unclean URI *\/$/;"	m	struct:_xmlURI
fragment	libxml\uri.h	/^    char *fragment;	\/* the fragment identifier *\/$/;"	m	struct:_xmlURI
opaque	libxml\uri.h	/^    char *opaque;	\/* opaque part *\/$/;"	m	struct:_xmlURI
path	libxml\uri.h	/^    char *path;		\/* the path string *\/$/;"	m	struct:_xmlURI
port	libxml\uri.h	/^    int port;		\/* the port number *\/$/;"	m	struct:_xmlURI
query	libxml\uri.h	/^    char *query;	\/* the query string (deprecated - use with caution) *\/$/;"	m	struct:_xmlURI
query_raw	libxml\uri.h	/^    char *query_raw;	\/* the query string (as it appears in the URI) *\/$/;"	m	struct:_xmlURI
scheme	libxml\uri.h	/^    char *scheme;	\/* the URI scheme *\/$/;"	m	struct:_xmlURI
server	libxml\uri.h	/^    char *server;	\/* the server part *\/$/;"	m	struct:_xmlURI
user	libxml\uri.h	/^    char *user;		\/* the user part *\/$/;"	m	struct:_xmlURI
xmlURI	libxml\uri.h	/^typedef struct _xmlURI xmlURI;$/;"	t	typeref:struct:_xmlURI
xmlURIPtr	libxml\uri.h	/^typedef xmlURI *xmlURIPtr;$/;"	t
XML_CTXT_FINISH_DTD_0	libxml\valid.h	67;"	d
XML_CTXT_FINISH_DTD_1	libxml\valid.h	73;"	d
__XML_VALID_H__	libxml\valid.h	12;"	d
_xmlValidCtxt	libxml\valid.h	/^struct _xmlValidCtxt {$/;"	s
am	libxml\valid.h	/^    void                     *am;$/;"	m	struct:_xmlValidCtxt
am	libxml\valid.h	/^    xmlAutomataPtr            am;     \/* the automata *\/$/;"	m	struct:_xmlValidCtxt
doc	libxml\valid.h	/^    xmlDocPtr              doc;       \/* the document *\/$/;"	m	struct:_xmlValidCtxt
error	libxml\valid.h	/^    xmlValidityErrorFunc error;		\/* the callback in case of errors *\/$/;"	m	struct:_xmlValidCtxt
finishDtd	libxml\valid.h	/^    unsigned int     finishDtd;       \/* finished validating the Dtd ? *\/$/;"	m	struct:_xmlValidCtxt
node	libxml\valid.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlValidCtxt
nodeMax	libxml\valid.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt
nodeNr	libxml\valid.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt
nodeTab	libxml\valid.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlValidCtxt
state	libxml\valid.h	/^    void                  *state;$/;"	m	struct:_xmlValidCtxt
state	libxml\valid.h	/^    xmlAutomataStatePtr    state;     \/* used to build the automata *\/$/;"	m	struct:_xmlValidCtxt
userData	libxml\valid.h	/^    void *userData;			\/* user specific data block *\/$/;"	m	struct:_xmlValidCtxt
valid	libxml\valid.h	/^    int                  valid;       \/* temporary validity check result *\/$/;"	m	struct:_xmlValidCtxt
vstate	libxml\valid.h	/^    xmlValidState     *vstate;        \/* current state *\/$/;"	m	struct:_xmlValidCtxt
vstateMax	libxml\valid.h	/^    int                vstateMax;     \/* Max depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt
vstateNr	libxml\valid.h	/^    int                vstateNr;      \/* Depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt
vstateTab	libxml\valid.h	/^    xmlValidState     *vstateTab;     \/* array of validation states *\/$/;"	m	struct:_xmlValidCtxt
warning	libxml\valid.h	/^    xmlValidityWarningFunc warning;	\/* the callback in case of warning *\/$/;"	m	struct:_xmlValidCtxt
xmlAttributeTable	libxml\valid.h	/^typedef struct _xmlHashTable xmlAttributeTable;$/;"	t	typeref:struct:_xmlHashTable
xmlAttributeTablePtr	libxml\valid.h	/^typedef xmlAttributeTable *xmlAttributeTablePtr;$/;"	t
xmlElementTable	libxml\valid.h	/^typedef struct _xmlHashTable xmlElementTable;$/;"	t	typeref:struct:_xmlHashTable
xmlElementTablePtr	libxml\valid.h	/^typedef xmlElementTable *xmlElementTablePtr;$/;"	t
xmlIDTable	libxml\valid.h	/^typedef struct _xmlHashTable xmlIDTable;$/;"	t	typeref:struct:_xmlHashTable
xmlIDTablePtr	libxml\valid.h	/^typedef xmlIDTable *xmlIDTablePtr;$/;"	t
xmlNotationTable	libxml\valid.h	/^typedef struct _xmlHashTable xmlNotationTable;$/;"	t	typeref:struct:_xmlHashTable
xmlNotationTablePtr	libxml\valid.h	/^typedef xmlNotationTable *xmlNotationTablePtr;$/;"	t
xmlRefTable	libxml\valid.h	/^typedef struct _xmlHashTable xmlRefTable;$/;"	t	typeref:struct:_xmlHashTable
xmlRefTablePtr	libxml\valid.h	/^typedef xmlRefTable *xmlRefTablePtr;$/;"	t
xmlValidCtxt	libxml\valid.h	/^typedef struct _xmlValidCtxt xmlValidCtxt;$/;"	t	typeref:struct:_xmlValidCtxt
xmlValidCtxtPtr	libxml\valid.h	/^typedef xmlValidCtxt *xmlValidCtxtPtr;$/;"	t
xmlValidState	libxml\valid.h	/^typedef struct _xmlValidState xmlValidState;$/;"	t	typeref:struct:_xmlValidState
xmlValidStatePtr	libxml\valid.h	/^typedef xmlValidState *xmlValidStatePtr;$/;"	t
XINCLUDE_FALLBACK	libxml\xinclude.h	48;"	d
XINCLUDE_HREF	libxml\xinclude.h	54;"	d
XINCLUDE_NODE	libxml\xinclude.h	42;"	d
XINCLUDE_NS	libxml\xinclude.h	30;"	d
XINCLUDE_OLD_NS	libxml\xinclude.h	36;"	d
XINCLUDE_PARSE	libxml\xinclude.h	60;"	d
XINCLUDE_PARSE_ENCODING	libxml\xinclude.h	78;"	d
XINCLUDE_PARSE_TEXT	libxml\xinclude.h	72;"	d
XINCLUDE_PARSE_XML	libxml\xinclude.h	66;"	d
XINCLUDE_PARSE_XPOINTER	libxml\xinclude.h	84;"	d
__XML_XINCLUDE_H__	libxml\xinclude.h	14;"	d
xmlXIncludeCtxt	libxml\xinclude.h	/^typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;$/;"	t	typeref:struct:_xmlXIncludeCtxt
xmlXIncludeCtxtPtr	libxml\xinclude.h	/^typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;$/;"	t
XLINK_ACTUATE_AUTO	libxml\xlink.h	/^    XLINK_ACTUATE_AUTO,$/;"	e	enum:__anon42
XLINK_ACTUATE_NONE	libxml\xlink.h	/^    XLINK_ACTUATE_NONE = 0,$/;"	e	enum:__anon42
XLINK_ACTUATE_ONREQUEST	libxml\xlink.h	/^    XLINK_ACTUATE_ONREQUEST$/;"	e	enum:__anon42
XLINK_SHOW_EMBED	libxml\xlink.h	/^    XLINK_SHOW_EMBED,$/;"	e	enum:__anon41
XLINK_SHOW_NEW	libxml\xlink.h	/^    XLINK_SHOW_NEW,$/;"	e	enum:__anon41
XLINK_SHOW_NONE	libxml\xlink.h	/^    XLINK_SHOW_NONE = 0,$/;"	e	enum:__anon41
XLINK_SHOW_REPLACE	libxml\xlink.h	/^    XLINK_SHOW_REPLACE$/;"	e	enum:__anon41
XLINK_TYPE_EXTENDED	libxml\xlink.h	/^    XLINK_TYPE_EXTENDED,$/;"	e	enum:__anon40
XLINK_TYPE_EXTENDED_SET	libxml\xlink.h	/^    XLINK_TYPE_EXTENDED_SET$/;"	e	enum:__anon40
XLINK_TYPE_NONE	libxml\xlink.h	/^    XLINK_TYPE_NONE = 0,$/;"	e	enum:__anon40
XLINK_TYPE_SIMPLE	libxml\xlink.h	/^    XLINK_TYPE_SIMPLE,$/;"	e	enum:__anon40
__XML_XLINK_H__	libxml\xlink.h	11;"	d
_xlinkHandler	libxml\xlink.h	/^struct _xlinkHandler {$/;"	s
extended	libxml\xlink.h	/^    xlinkExtendedLinkFunk extended;$/;"	m	struct:_xlinkHandler
set	libxml\xlink.h	/^    xlinkExtendedLinkSetFunk set;$/;"	m	struct:_xlinkHandler
simple	libxml\xlink.h	/^    xlinkSimpleLinkFunk simple;$/;"	m	struct:_xlinkHandler
xlinkActuate	libxml\xlink.h	/^} xlinkActuate;$/;"	t	typeref:enum:__anon42
xlinkExtendedLinkFunk	libxml\xlink.h	/^(*xlinkExtendedLinkFunk)(void *ctx,$/;"	t
xlinkExtendedLinkSetFunk	libxml\xlink.h	/^(*xlinkExtendedLinkSetFunk)	(void *ctx,$/;"	t
xlinkHRef	libxml\xlink.h	/^typedef xmlChar *xlinkHRef;$/;"	t
xlinkHandler	libxml\xlink.h	/^typedef struct _xlinkHandler xlinkHandler;$/;"	t	typeref:struct:_xlinkHandler
xlinkHandlerPtr	libxml\xlink.h	/^typedef xlinkHandler *xlinkHandlerPtr;$/;"	t
xlinkNodeDetectFunc	libxml\xlink.h	/^typedef void (*xlinkNodeDetectFunc) (void *ctx, xmlNodePtr node);$/;"	t
xlinkRole	libxml\xlink.h	/^typedef xmlChar *xlinkRole;$/;"	t
xlinkShow	libxml\xlink.h	/^} xlinkShow;$/;"	t	typeref:enum:__anon41
xlinkSimpleLinkFunk	libxml\xlink.h	/^(*xlinkSimpleLinkFunk)	(void *ctx,$/;"	t
xlinkTitle	libxml\xlink.h	/^typedef xmlChar *xlinkTitle;$/;"	t
xlinkType	libxml\xlink.h	/^} xlinkType;$/;"	t	typeref:enum:__anon40
__XML_IO_H__	libxml\xmlIO.h	11;"	d
_xmlOutputBuffer	libxml\xmlIO.h	/^struct _xmlOutputBuffer {$/;"	s
_xmlParserInputBuffer	libxml\xmlIO.h	/^struct _xmlParserInputBuffer {$/;"	s
buffer	libxml\xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer
buffer	libxml\xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 or ISOLatin *\/$/;"	m	struct:_xmlOutputBuffer
closecallback	libxml\xmlIO.h	/^    xmlInputCloseCallback  closecallback;$/;"	m	struct:_xmlParserInputBuffer
closecallback	libxml\xmlIO.h	/^    xmlOutputCloseCallback  closecallback;$/;"	m	struct:_xmlOutputBuffer
compressed	libxml\xmlIO.h	/^    int	compressed;	    \/* -1=unknown, 0=not compressed, 1=compressed *\/$/;"	m	struct:_xmlParserInputBuffer
context	libxml\xmlIO.h	/^    void*                   context;$/;"	m	struct:_xmlOutputBuffer
context	libxml\xmlIO.h	/^    void*                  context;$/;"	m	struct:_xmlParserInputBuffer
conv	libxml\xmlIO.h	/^    xmlBufferPtr conv;      \/* if encoder != NULL buffer for output *\/$/;"	m	struct:_xmlOutputBuffer
encoder	libxml\xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlOutputBuffer
encoder	libxml\xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer
error	libxml\xmlIO.h	/^    int error;$/;"	m	struct:_xmlOutputBuffer
error	libxml\xmlIO.h	/^    int error;$/;"	m	struct:_xmlParserInputBuffer
raw	libxml\xmlIO.h	/^    xmlBufferPtr raw;       \/* if encoder != NULL buffer for raw input *\/$/;"	m	struct:_xmlParserInputBuffer
rawconsumed	libxml\xmlIO.h	/^    unsigned long rawconsumed;\/* amount consumed from raw *\/$/;"	m	struct:_xmlParserInputBuffer
readcallback	libxml\xmlIO.h	/^    xmlInputReadCallback   readcallback;$/;"	m	struct:_xmlParserInputBuffer
writecallback	libxml\xmlIO.h	/^    xmlOutputWriteCallback  writecallback;$/;"	m	struct:_xmlOutputBuffer
written	libxml\xmlIO.h	/^    int written;            \/* total number of byte written *\/$/;"	m	struct:_xmlOutputBuffer
xmlInputCloseCallback	libxml\xmlIO.h	/^typedef int (XMLCALL *xmlInputCloseCallback) (void * context);$/;"	t
xmlInputMatchCallback	libxml\xmlIO.h	/^typedef int (XMLCALL *xmlInputMatchCallback) (char const *filename);$/;"	t
xmlInputOpenCallback	libxml\xmlIO.h	/^typedef void * (XMLCALL *xmlInputOpenCallback) (char const *filename);$/;"	t
xmlInputReadCallback	libxml\xmlIO.h	/^typedef int (XMLCALL *xmlInputReadCallback) (void * context, char * buffer, int len);$/;"	t
xmlOutputCloseCallback	libxml\xmlIO.h	/^typedef int (XMLCALL *xmlOutputCloseCallback) (void * context);$/;"	t
xmlOutputMatchCallback	libxml\xmlIO.h	/^typedef int (XMLCALL *xmlOutputMatchCallback) (char const *filename);$/;"	t
xmlOutputOpenCallback	libxml\xmlIO.h	/^typedef void * (XMLCALL *xmlOutputOpenCallback) (char const *filename);$/;"	t
xmlOutputWriteCallback	libxml\xmlIO.h	/^typedef int (XMLCALL *xmlOutputWriteCallback) (void * context, const char * buffer,$/;"	t
__XML_AUTOMATA_H__	libxml\xmlautomata.h	11;"	d
xmlAutomata	libxml\xmlautomata.h	/^typedef struct _xmlAutomata xmlAutomata;$/;"	t	typeref:struct:_xmlAutomata
xmlAutomataPtr	libxml\xmlautomata.h	/^typedef xmlAutomata *xmlAutomataPtr;$/;"	t
xmlAutomataState	libxml\xmlautomata.h	/^typedef struct _xmlAutomataState xmlAutomataState;$/;"	t	typeref:struct:_xmlAutomataState
xmlAutomataStatePtr	libxml\xmlautomata.h	/^typedef xmlAutomataState *xmlAutomataStatePtr;$/;"	t
XML_C14N_CREATE_CTXT	libxml\xmlerror.h	/^    XML_C14N_CREATE_CTXT = 1950,$/;"	e	enum:__anon45
XML_C14N_CREATE_STACK	libxml\xmlerror.h	/^    XML_C14N_CREATE_STACK, \/* 1952 *\/$/;"	e	enum:__anon45
XML_C14N_INVALID_NODE	libxml\xmlerror.h	/^    XML_C14N_INVALID_NODE, \/* 1953 *\/$/;"	e	enum:__anon45
XML_C14N_RELATIVE_NAMESPACE	libxml\xmlerror.h	/^    XML_C14N_RELATIVE_NAMESPACE, \/* 1955 *\/$/;"	e	enum:__anon45
XML_C14N_REQUIRES_UTF8	libxml\xmlerror.h	/^    XML_C14N_REQUIRES_UTF8, \/* 1951 *\/$/;"	e	enum:__anon45
XML_C14N_UNKNOW_NODE	libxml\xmlerror.h	/^    XML_C14N_UNKNOW_NODE, \/* 1954 *\/$/;"	e	enum:__anon45
XML_CATALOG_ENTRY_BROKEN	libxml\xmlerror.h	/^    XML_CATALOG_ENTRY_BROKEN, \/* 1651 *\/$/;"	e	enum:__anon45
XML_CATALOG_MISSING_ATTR	libxml\xmlerror.h	/^    XML_CATALOG_MISSING_ATTR = 1650,$/;"	e	enum:__anon45
XML_CATALOG_NOT_CATALOG	libxml\xmlerror.h	/^    XML_CATALOG_NOT_CATALOG, \/* 1653 *\/$/;"	e	enum:__anon45
XML_CATALOG_PREFER_VALUE	libxml\xmlerror.h	/^    XML_CATALOG_PREFER_VALUE, \/* 1652 *\/$/;"	e	enum:__anon45
XML_CATALOG_RECURSION	libxml\xmlerror.h	/^    XML_CATALOG_RECURSION, \/* 1654 *\/$/;"	e	enum:__anon45
XML_CHECK_ENTITY_TYPE	libxml\xmlerror.h	/^    XML_CHECK_ENTITY_TYPE, \/* 5012 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_ATTRIBUTE	libxml\xmlerror.h	/^    XML_CHECK_FOUND_ATTRIBUTE, \/* 5001 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_CDATA	libxml\xmlerror.h	/^    XML_CHECK_FOUND_CDATA, \/* 5003 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_COMMENT	libxml\xmlerror.h	/^    XML_CHECK_FOUND_COMMENT, \/* 5007 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_DOCTYPE	libxml\xmlerror.h	/^    XML_CHECK_FOUND_DOCTYPE, \/* 5008 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_ELEMENT	libxml\xmlerror.h	/^    XML_CHECK_FOUND_ELEMENT = 5000,$/;"	e	enum:__anon45
XML_CHECK_FOUND_ENTITY	libxml\xmlerror.h	/^    XML_CHECK_FOUND_ENTITY, \/* 5005 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_ENTITYREF	libxml\xmlerror.h	/^    XML_CHECK_FOUND_ENTITYREF, \/* 5004 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_FRAGMENT	libxml\xmlerror.h	/^    XML_CHECK_FOUND_FRAGMENT, \/* 5009 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_NOTATION	libxml\xmlerror.h	/^    XML_CHECK_FOUND_NOTATION, \/* 5010 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_PI	libxml\xmlerror.h	/^    XML_CHECK_FOUND_PI, \/* 5006 *\/$/;"	e	enum:__anon45
XML_CHECK_FOUND_TEXT	libxml\xmlerror.h	/^    XML_CHECK_FOUND_TEXT, \/* 5002 *\/$/;"	e	enum:__anon45
XML_CHECK_NAME_NOT_NULL	libxml\xmlerror.h	/^    XML_CHECK_NAME_NOT_NULL, \/* 5037 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_ATTR	libxml\xmlerror.h	/^    XML_CHECK_NOT_ATTR, \/* 5023 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_ATTR_DECL	libxml\xmlerror.h	/^    XML_CHECK_NOT_ATTR_DECL, \/* 5024 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_DTD	libxml\xmlerror.h	/^    XML_CHECK_NOT_DTD, \/* 5022 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_ELEM_DECL	libxml\xmlerror.h	/^    XML_CHECK_NOT_ELEM_DECL, \/* 5025 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_ENTITY_DECL	libxml\xmlerror.h	/^    XML_CHECK_NOT_ENTITY_DECL, \/* 5026 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_NCNAME	libxml\xmlerror.h	/^    XML_CHECK_NOT_NCNAME, \/* 5034 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_NS_DECL	libxml\xmlerror.h	/^    XML_CHECK_NOT_NS_DECL, \/* 5027 *\/$/;"	e	enum:__anon45
XML_CHECK_NOT_UTF8	libxml\xmlerror.h	/^    XML_CHECK_NOT_UTF8, \/* 5032 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_DICT	libxml\xmlerror.h	/^    XML_CHECK_NO_DICT, \/* 5033 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_DOC	libxml\xmlerror.h	/^    XML_CHECK_NO_DOC, \/* 5014 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_ELEM	libxml\xmlerror.h	/^    XML_CHECK_NO_ELEM, \/* 5016 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_HREF	libxml\xmlerror.h	/^    XML_CHECK_NO_HREF, \/* 5028 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_NAME	libxml\xmlerror.h	/^    XML_CHECK_NO_NAME, \/* 5015 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_NEXT	libxml\xmlerror.h	/^    XML_CHECK_NO_NEXT, \/* 5020 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_PARENT	libxml\xmlerror.h	/^    XML_CHECK_NO_PARENT, \/* 5013 *\/$/;"	e	enum:__anon45
XML_CHECK_NO_PREV	libxml\xmlerror.h	/^    XML_CHECK_NO_PREV, \/* 5018 *\/$/;"	e	enum:__anon45
XML_CHECK_NS_ANCESTOR	libxml\xmlerror.h	/^    XML_CHECK_NS_ANCESTOR, \/* 5031 *\/$/;"	e	enum:__anon45
XML_CHECK_NS_SCOPE	libxml\xmlerror.h	/^    XML_CHECK_NS_SCOPE, \/* 5030 *\/$/;"	e	enum:__anon45
XML_CHECK_OUTSIDE_DICT	libxml\xmlerror.h	/^    XML_CHECK_OUTSIDE_DICT, \/* 5035 *\/$/;"	e	enum:__anon45
XML_CHECK_UNKNOWN_NODE	libxml\xmlerror.h	/^    XML_CHECK_UNKNOWN_NODE, \/* 5011 *\/$/;"	e	enum:__anon45
XML_CHECK_WRONG_DOC	libxml\xmlerror.h	/^    XML_CHECK_WRONG_DOC, \/* 5017 *\/$/;"	e	enum:__anon45
XML_CHECK_WRONG_NAME	libxml\xmlerror.h	/^    XML_CHECK_WRONG_NAME, \/* 5036 *\/$/;"	e	enum:__anon45
XML_CHECK_WRONG_NEXT	libxml\xmlerror.h	/^    XML_CHECK_WRONG_NEXT, \/* 5021 *\/$/;"	e	enum:__anon45
XML_CHECK_WRONG_PARENT	libxml\xmlerror.h	/^    XML_CHECK_WRONG_PARENT,\/* 5029 *\/$/;"	e	enum:__anon45
XML_CHECK_WRONG_PREV	libxml\xmlerror.h	/^    XML_CHECK_WRONG_PREV, \/* 5019 *\/$/;"	e	enum:__anon45
XML_DTD_ATTRIBUTE_DEFAULT	libxml\xmlerror.h	/^    XML_DTD_ATTRIBUTE_DEFAULT = 500,$/;"	e	enum:__anon45
XML_DTD_ATTRIBUTE_REDEFINED	libxml\xmlerror.h	/^    XML_DTD_ATTRIBUTE_REDEFINED, \/* 501 *\/$/;"	e	enum:__anon45
XML_DTD_ATTRIBUTE_VALUE	libxml\xmlerror.h	/^    XML_DTD_ATTRIBUTE_VALUE, \/* 502 *\/$/;"	e	enum:__anon45
XML_DTD_CONTENT_ERROR	libxml\xmlerror.h	/^    XML_DTD_CONTENT_ERROR, \/* 503 *\/$/;"	e	enum:__anon45
XML_DTD_CONTENT_MODEL	libxml\xmlerror.h	/^    XML_DTD_CONTENT_MODEL, \/* 504 *\/$/;"	e	enum:__anon45
XML_DTD_CONTENT_NOT_DETERMINIST	libxml\xmlerror.h	/^    XML_DTD_CONTENT_NOT_DETERMINIST, \/* 505 *\/$/;"	e	enum:__anon45
XML_DTD_DIFFERENT_PREFIX	libxml\xmlerror.h	/^    XML_DTD_DIFFERENT_PREFIX, \/* 506 *\/$/;"	e	enum:__anon45
XML_DTD_DUP_TOKEN	libxml\xmlerror.h	/^    XML_DTD_DUP_TOKEN, \/* 541 *\/$/;"	e	enum:__anon45
XML_DTD_ELEM_DEFAULT_NAMESPACE	libxml\xmlerror.h	/^    XML_DTD_ELEM_DEFAULT_NAMESPACE, \/* 507 *\/$/;"	e	enum:__anon45
XML_DTD_ELEM_NAMESPACE	libxml\xmlerror.h	/^    XML_DTD_ELEM_NAMESPACE, \/* 508 *\/$/;"	e	enum:__anon45
XML_DTD_ELEM_REDEFINED	libxml\xmlerror.h	/^    XML_DTD_ELEM_REDEFINED, \/* 509 *\/$/;"	e	enum:__anon45
XML_DTD_EMPTY_NOTATION	libxml\xmlerror.h	/^    XML_DTD_EMPTY_NOTATION, \/* 510 *\/$/;"	e	enum:__anon45
XML_DTD_ENTITY_TYPE	libxml\xmlerror.h	/^    XML_DTD_ENTITY_TYPE, \/* 511 *\/$/;"	e	enum:__anon45
XML_DTD_ID_FIXED	libxml\xmlerror.h	/^    XML_DTD_ID_FIXED, \/* 512 *\/$/;"	e	enum:__anon45
XML_DTD_ID_REDEFINED	libxml\xmlerror.h	/^    XML_DTD_ID_REDEFINED, \/* 513 *\/$/;"	e	enum:__anon45
XML_DTD_ID_SUBSET	libxml\xmlerror.h	/^    XML_DTD_ID_SUBSET, \/* 514 *\/$/;"	e	enum:__anon45
XML_DTD_INVALID_CHILD	libxml\xmlerror.h	/^    XML_DTD_INVALID_CHILD, \/* 515 *\/$/;"	e	enum:__anon45
XML_DTD_INVALID_DEFAULT	libxml\xmlerror.h	/^    XML_DTD_INVALID_DEFAULT, \/* 516 *\/$/;"	e	enum:__anon45
XML_DTD_LOAD_ERROR	libxml\xmlerror.h	/^    XML_DTD_LOAD_ERROR, \/* 517 *\/$/;"	e	enum:__anon45
XML_DTD_MISSING_ATTRIBUTE	libxml\xmlerror.h	/^    XML_DTD_MISSING_ATTRIBUTE, \/* 518 *\/$/;"	e	enum:__anon45
XML_DTD_MIXED_CORRUPT	libxml\xmlerror.h	/^    XML_DTD_MIXED_CORRUPT, \/* 519 *\/$/;"	e	enum:__anon45
XML_DTD_MULTIPLE_ID	libxml\xmlerror.h	/^    XML_DTD_MULTIPLE_ID, \/* 520 *\/$/;"	e	enum:__anon45
XML_DTD_NOTATION_REDEFINED	libxml\xmlerror.h	/^    XML_DTD_NOTATION_REDEFINED, \/* 526 *\/$/;"	e	enum:__anon45
XML_DTD_NOTATION_VALUE	libxml\xmlerror.h	/^    XML_DTD_NOTATION_VALUE, \/* 527 *\/$/;"	e	enum:__anon45
XML_DTD_NOT_EMPTY	libxml\xmlerror.h	/^    XML_DTD_NOT_EMPTY, \/* 528 *\/$/;"	e	enum:__anon45
XML_DTD_NOT_PCDATA	libxml\xmlerror.h	/^    XML_DTD_NOT_PCDATA, \/* 529 *\/$/;"	e	enum:__anon45
XML_DTD_NOT_STANDALONE	libxml\xmlerror.h	/^    XML_DTD_NOT_STANDALONE, \/* 530 *\/$/;"	e	enum:__anon45
XML_DTD_NO_DOC	libxml\xmlerror.h	/^    XML_DTD_NO_DOC, \/* 521 *\/$/;"	e	enum:__anon45
XML_DTD_NO_DTD	libxml\xmlerror.h	/^    XML_DTD_NO_DTD, \/* 522 *\/$/;"	e	enum:__anon45
XML_DTD_NO_ELEM_NAME	libxml\xmlerror.h	/^    XML_DTD_NO_ELEM_NAME, \/* 523 *\/$/;"	e	enum:__anon45
XML_DTD_NO_PREFIX	libxml\xmlerror.h	/^    XML_DTD_NO_PREFIX, \/* 524 *\/$/;"	e	enum:__anon45
XML_DTD_NO_ROOT	libxml\xmlerror.h	/^    XML_DTD_NO_ROOT, \/* 525 *\/$/;"	e	enum:__anon45
XML_DTD_ROOT_NAME	libxml\xmlerror.h	/^    XML_DTD_ROOT_NAME, \/* 531 *\/$/;"	e	enum:__anon45
XML_DTD_STANDALONE_DEFAULTED	libxml\xmlerror.h	/^    XML_DTD_STANDALONE_DEFAULTED, \/* 538 *\/$/;"	e	enum:__anon45
XML_DTD_STANDALONE_WHITE_SPACE	libxml\xmlerror.h	/^    XML_DTD_STANDALONE_WHITE_SPACE, \/* 532 *\/$/;"	e	enum:__anon45
XML_DTD_UNKNOWN_ATTRIBUTE	libxml\xmlerror.h	/^    XML_DTD_UNKNOWN_ATTRIBUTE, \/* 533 *\/$/;"	e	enum:__anon45
XML_DTD_UNKNOWN_ELEM	libxml\xmlerror.h	/^    XML_DTD_UNKNOWN_ELEM, \/* 534 *\/$/;"	e	enum:__anon45
XML_DTD_UNKNOWN_ENTITY	libxml\xmlerror.h	/^    XML_DTD_UNKNOWN_ENTITY, \/* 535 *\/$/;"	e	enum:__anon45
XML_DTD_UNKNOWN_ID	libxml\xmlerror.h	/^    XML_DTD_UNKNOWN_ID, \/* 536 *\/$/;"	e	enum:__anon45
XML_DTD_UNKNOWN_NOTATION	libxml\xmlerror.h	/^    XML_DTD_UNKNOWN_NOTATION, \/* 537 *\/$/;"	e	enum:__anon45
XML_DTD_XMLID_TYPE	libxml\xmlerror.h	/^    XML_DTD_XMLID_TYPE, \/* 540 *\/$/;"	e	enum:__anon45
XML_DTD_XMLID_VALUE	libxml\xmlerror.h	/^    XML_DTD_XMLID_VALUE, \/* 539 *\/$/;"	e	enum:__anon45
XML_ERR_ATTLIST_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_ATTLIST_NOT_FINISHED, \/* 51 *\/$/;"	e	enum:__anon45
XML_ERR_ATTLIST_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_ATTLIST_NOT_STARTED, \/* 50 *\/$/;"	e	enum:__anon45
XML_ERR_ATTRIBUTE_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_ATTRIBUTE_NOT_FINISHED, \/* 40 *\/$/;"	e	enum:__anon45
XML_ERR_ATTRIBUTE_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_ATTRIBUTE_NOT_STARTED, \/* 39 *\/$/;"	e	enum:__anon45
XML_ERR_ATTRIBUTE_REDEFINED	libxml\xmlerror.h	/^    XML_ERR_ATTRIBUTE_REDEFINED, \/* 42 *\/$/;"	e	enum:__anon45
XML_ERR_ATTRIBUTE_WITHOUT_VALUE	libxml\xmlerror.h	/^    XML_ERR_ATTRIBUTE_WITHOUT_VALUE, \/* 41 *\/$/;"	e	enum:__anon45
XML_ERR_CDATA_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_CDATA_NOT_FINISHED, \/* 63 *\/$/;"	e	enum:__anon45
XML_ERR_CHARREF_AT_EOF	libxml\xmlerror.h	/^    XML_ERR_CHARREF_AT_EOF, \/* 10 *\/$/;"	e	enum:__anon45
XML_ERR_CHARREF_IN_DTD	libxml\xmlerror.h	/^    XML_ERR_CHARREF_IN_DTD, \/* 13 *\/$/;"	e	enum:__anon45
XML_ERR_CHARREF_IN_EPILOG	libxml\xmlerror.h	/^    XML_ERR_CHARREF_IN_EPILOG, \/* 12 *\/$/;"	e	enum:__anon45
XML_ERR_CHARREF_IN_PROLOG	libxml\xmlerror.h	/^    XML_ERR_CHARREF_IN_PROLOG, \/* 11 *\/$/;"	e	enum:__anon45
XML_ERR_COMMENT_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_COMMENT_NOT_FINISHED, \/* 45 *\/$/;"	e	enum:__anon45
XML_ERR_CONDSEC_INVALID	libxml\xmlerror.h	/^    XML_ERR_CONDSEC_INVALID, \/* 83 *\/$/;"	e	enum:__anon45
XML_ERR_CONDSEC_INVALID_KEYWORD	libxml\xmlerror.h	/^    XML_ERR_CONDSEC_INVALID_KEYWORD, \/* 95 *\/$/;"	e	enum:__anon45
XML_ERR_CONDSEC_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_CONDSEC_NOT_FINISHED, \/* 59 *\/$/;"	e	enum:__anon45
XML_ERR_CONDSEC_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_CONDSEC_NOT_STARTED, \/* 58 *\/$/;"	e	enum:__anon45
XML_ERR_DOCTYPE_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_DOCTYPE_NOT_FINISHED, \/* 61 *\/$/;"	e	enum:__anon45
XML_ERR_DOCUMENT_EMPTY	libxml\xmlerror.h	/^    XML_ERR_DOCUMENT_EMPTY, \/* 4 *\/$/;"	e	enum:__anon45
XML_ERR_DOCUMENT_END	libxml\xmlerror.h	/^    XML_ERR_DOCUMENT_END, \/* 5 *\/$/;"	e	enum:__anon45
XML_ERR_DOCUMENT_START	libxml\xmlerror.h	/^    XML_ERR_DOCUMENT_START, \/* 3 *\/$/;"	e	enum:__anon45
XML_ERR_ELEMCONTENT_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_ELEMCONTENT_NOT_FINISHED, \/* 55 *\/$/;"	e	enum:__anon45
XML_ERR_ELEMCONTENT_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_ELEMCONTENT_NOT_STARTED, \/* 54 *\/$/;"	e	enum:__anon45
XML_ERR_ENCODING_NAME	libxml\xmlerror.h	/^    XML_ERR_ENCODING_NAME, \/* 79 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITYREF_AT_EOF	libxml\xmlerror.h	/^    XML_ERR_ENTITYREF_AT_EOF, \/* 14 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITYREF_IN_DTD	libxml\xmlerror.h	/^    XML_ERR_ENTITYREF_IN_DTD, \/* 17 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITYREF_IN_EPILOG	libxml\xmlerror.h	/^    XML_ERR_ENTITYREF_IN_EPILOG, \/* 16 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITYREF_IN_PROLOG	libxml\xmlerror.h	/^    XML_ERR_ENTITYREF_IN_PROLOG, \/* 15 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITYREF_NO_NAME	libxml\xmlerror.h	/^    XML_ERR_ENTITYREF_NO_NAME, \/* 22 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITYREF_SEMICOL_MISSING	libxml\xmlerror.h	/^    XML_ERR_ENTITYREF_SEMICOL_MISSING, \/* 23 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_BOUNDARY	libxml\xmlerror.h	/^    XML_ERR_ENTITY_BOUNDARY, \/* 90 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_CHAR_ERROR	libxml\xmlerror.h	/^    XML_ERR_ENTITY_CHAR_ERROR, \/* 87 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_IS_EXTERNAL	libxml\xmlerror.h	/^    XML_ERR_ENTITY_IS_EXTERNAL, \/* 29 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_IS_PARAMETER	libxml\xmlerror.h	/^    XML_ERR_ENTITY_IS_PARAMETER, \/* 30 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_LOOP	libxml\xmlerror.h	/^    XML_ERR_ENTITY_LOOP, \/* 89 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_ENTITY_NOT_FINISHED, \/* 37 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_ENTITY_NOT_STARTED, \/* 36 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_PE_INTERNAL	libxml\xmlerror.h	/^    XML_ERR_ENTITY_PE_INTERNAL, \/* 88 *\/$/;"	e	enum:__anon45
XML_ERR_ENTITY_PROCESSING	libxml\xmlerror.h	/^    XML_ERR_ENTITY_PROCESSING, \/* 104 *\/$/;"	e	enum:__anon45
XML_ERR_EQUAL_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_EQUAL_REQUIRED, \/* 75 *\/$/;"	e	enum:__anon45
XML_ERR_ERROR	libxml\xmlerror.h	/^    XML_ERR_ERROR = 2,		\/* A recoverable error *\/$/;"	e	enum:__anon43
XML_ERR_EXTRA_CONTENT	libxml\xmlerror.h	/^    XML_ERR_EXTRA_CONTENT, \/* 86 *\/$/;"	e	enum:__anon45
XML_ERR_EXT_ENTITY_STANDALONE	libxml\xmlerror.h	/^    XML_ERR_EXT_ENTITY_STANDALONE, \/* 82 *\/$/;"	e	enum:__anon45
XML_ERR_EXT_SUBSET_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_EXT_SUBSET_NOT_FINISHED, \/* 60 *\/$/;"	e	enum:__anon45
XML_ERR_FATAL	libxml\xmlerror.h	/^    XML_ERR_FATAL = 3		\/* A fatal error *\/$/;"	e	enum:__anon43
XML_ERR_GT_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_GT_REQUIRED, \/* 73 *\/$/;"	e	enum:__anon45
XML_ERR_HYPHEN_IN_COMMENT	libxml\xmlerror.h	/^    XML_ERR_HYPHEN_IN_COMMENT, \/* 80 *\/$/;"	e	enum:__anon45
XML_ERR_INTERNAL_ERROR	libxml\xmlerror.h	/^    XML_ERR_INTERNAL_ERROR, \/* 1 *\/$/;"	e	enum:__anon45
XML_ERR_INVALID_CHAR	libxml\xmlerror.h	/^    XML_ERR_INVALID_CHAR, \/* 9 *\/$/;"	e	enum:__anon45
XML_ERR_INVALID_CHARREF	libxml\xmlerror.h	/^    XML_ERR_INVALID_CHARREF, \/* 8 *\/$/;"	e	enum:__anon45
XML_ERR_INVALID_DEC_CHARREF	libxml\xmlerror.h	/^    XML_ERR_INVALID_DEC_CHARREF, \/* 7 *\/$/;"	e	enum:__anon45
XML_ERR_INVALID_ENCODING	libxml\xmlerror.h	/^    XML_ERR_INVALID_ENCODING, \/* 81 *\/$/;"	e	enum:__anon45
XML_ERR_INVALID_HEX_CHARREF	libxml\xmlerror.h	/^    XML_ERR_INVALID_HEX_CHARREF, \/* 6 *\/$/;"	e	enum:__anon45
XML_ERR_INVALID_URI	libxml\xmlerror.h	/^    XML_ERR_INVALID_URI, \/* 91 *\/$/;"	e	enum:__anon45
XML_ERR_LITERAL_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_LITERAL_NOT_FINISHED, \/* 44 *\/$/;"	e	enum:__anon45
XML_ERR_LITERAL_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_LITERAL_NOT_STARTED, \/* 43 *\/$/;"	e	enum:__anon45
XML_ERR_LTSLASH_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_LTSLASH_REQUIRED, \/* 74 *\/$/;"	e	enum:__anon45
XML_ERR_LT_IN_ATTRIBUTE	libxml\xmlerror.h	/^    XML_ERR_LT_IN_ATTRIBUTE, \/* 38 *\/$/;"	e	enum:__anon45
XML_ERR_LT_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_LT_REQUIRED, \/* 72 *\/$/;"	e	enum:__anon45
XML_ERR_MISPLACED_CDATA_END	libxml\xmlerror.h	/^    XML_ERR_MISPLACED_CDATA_END, \/* 62 *\/$/;"	e	enum:__anon45
XML_ERR_MISSING_ENCODING	libxml\xmlerror.h	/^    XML_ERR_MISSING_ENCODING, \/* 101 *\/$/;"	e	enum:__anon45
XML_ERR_MIXED_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_MIXED_NOT_FINISHED, \/* 53 *\/$/;"	e	enum:__anon45
XML_ERR_MIXED_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_MIXED_NOT_STARTED, \/* 52 *\/$/;"	e	enum:__anon45
XML_ERR_NAME_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_NAME_REQUIRED, \/* 68 *\/$/;"	e	enum:__anon45
XML_ERR_NMTOKEN_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_NMTOKEN_REQUIRED, \/* 67 *\/$/;"	e	enum:__anon45
XML_ERR_NONE	libxml\xmlerror.h	/^    XML_ERR_NONE = 0,$/;"	e	enum:__anon43
XML_ERR_NOTATION_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_NOTATION_NOT_FINISHED, \/* 49 *\/$/;"	e	enum:__anon45
XML_ERR_NOTATION_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_NOTATION_NOT_STARTED, \/* 48 *\/$/;"	e	enum:__anon45
XML_ERR_NOTATION_PROCESSING	libxml\xmlerror.h	/^    XML_ERR_NOTATION_PROCESSING, \/* 105 *\/$/;"	e	enum:__anon45
XML_ERR_NOT_STANDALONE	libxml\xmlerror.h	/^    XML_ERR_NOT_STANDALONE, \/* 103 *\/$/;"	e	enum:__anon45
XML_ERR_NOT_WELL_BALANCED	libxml\xmlerror.h	/^    XML_ERR_NOT_WELL_BALANCED, \/* 85 *\/$/;"	e	enum:__anon45
XML_ERR_NO_DTD	libxml\xmlerror.h	/^    XML_ERR_NO_DTD, \/* 94 *\/$/;"	e	enum:__anon45
XML_ERR_NO_MEMORY	libxml\xmlerror.h	/^    XML_ERR_NO_MEMORY, \/* 2 *\/$/;"	e	enum:__anon45
XML_ERR_NS_DECL_ERROR	libxml\xmlerror.h	/^    XML_ERR_NS_DECL_ERROR, \/* 35 *\/$/;"	e	enum:__anon45
XML_ERR_OK	libxml\xmlerror.h	/^    XML_ERR_OK = 0,$/;"	e	enum:__anon45
XML_ERR_PCDATA_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_PCDATA_REQUIRED, \/* 69 *\/$/;"	e	enum:__anon45
XML_ERR_PEREF_AT_EOF	libxml\xmlerror.h	/^    XML_ERR_PEREF_AT_EOF, \/* 18 *\/$/;"	e	enum:__anon45
XML_ERR_PEREF_IN_EPILOG	libxml\xmlerror.h	/^    XML_ERR_PEREF_IN_EPILOG, \/* 20 *\/$/;"	e	enum:__anon45
XML_ERR_PEREF_IN_INT_SUBSET	libxml\xmlerror.h	/^    XML_ERR_PEREF_IN_INT_SUBSET, \/* 21 *\/$/;"	e	enum:__anon45
XML_ERR_PEREF_IN_PROLOG	libxml\xmlerror.h	/^    XML_ERR_PEREF_IN_PROLOG, \/* 19 *\/$/;"	e	enum:__anon45
XML_ERR_PEREF_NO_NAME	libxml\xmlerror.h	/^    XML_ERR_PEREF_NO_NAME, \/* 24 *\/$/;"	e	enum:__anon45
XML_ERR_PEREF_SEMICOL_MISSING	libxml\xmlerror.h	/^    XML_ERR_PEREF_SEMICOL_MISSING, \/* 25 *\/$/;"	e	enum:__anon45
XML_ERR_PI_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_PI_NOT_FINISHED, \/* 47 *\/$/;"	e	enum:__anon45
XML_ERR_PI_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_PI_NOT_STARTED, \/* 46 *\/$/;"	e	enum:__anon45
XML_ERR_PUBID_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_PUBID_REQUIRED, \/* 71 *\/$/;"	e	enum:__anon45
XML_ERR_RESERVED_XML_NAME	libxml\xmlerror.h	/^    XML_ERR_RESERVED_XML_NAME, \/* 64 *\/$/;"	e	enum:__anon45
XML_ERR_SEPARATOR_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_SEPARATOR_REQUIRED, \/* 66 *\/$/;"	e	enum:__anon45
XML_ERR_SPACE_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_SPACE_REQUIRED, \/* 65 *\/$/;"	e	enum:__anon45
XML_ERR_STANDALONE_VALUE	libxml\xmlerror.h	/^    XML_ERR_STANDALONE_VALUE, \/* 78 *\/$/;"	e	enum:__anon45
XML_ERR_STRING_NOT_CLOSED	libxml\xmlerror.h	/^    XML_ERR_STRING_NOT_CLOSED, \/* 34 *\/$/;"	e	enum:__anon45
XML_ERR_STRING_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_STRING_NOT_STARTED, \/* 33 *\/$/;"	e	enum:__anon45
XML_ERR_TAG_NAME_MISMATCH	libxml\xmlerror.h	/^    XML_ERR_TAG_NAME_MISMATCH, \/* 76 *\/$/;"	e	enum:__anon45
XML_ERR_TAG_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_TAG_NOT_FINISHED, \/* 77 *\/$/;"	e	enum:__anon45
XML_ERR_UNDECLARED_ENTITY	libxml\xmlerror.h	/^    XML_ERR_UNDECLARED_ENTITY, \/* 26 *\/$/;"	e	enum:__anon45
XML_ERR_UNKNOWN_ENCODING	libxml\xmlerror.h	/^    XML_ERR_UNKNOWN_ENCODING, \/* 31 *\/$/;"	e	enum:__anon45
XML_ERR_UNKNOWN_VERSION	libxml\xmlerror.h	/^    XML_ERR_UNKNOWN_VERSION, \/* 108 *\/$/;"	e	enum:__anon45
XML_ERR_UNPARSED_ENTITY	libxml\xmlerror.h	/^    XML_ERR_UNPARSED_ENTITY, \/* 28 *\/$/;"	e	enum:__anon45
XML_ERR_UNSUPPORTED_ENCODING	libxml\xmlerror.h	/^    XML_ERR_UNSUPPORTED_ENCODING, \/* 32 *\/$/;"	e	enum:__anon45
XML_ERR_URI_FRAGMENT	libxml\xmlerror.h	/^    XML_ERR_URI_FRAGMENT, \/* 92 *\/$/;"	e	enum:__anon45
XML_ERR_URI_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_URI_REQUIRED, \/* 70 *\/$/;"	e	enum:__anon45
XML_ERR_VALUE_REQUIRED	libxml\xmlerror.h	/^    XML_ERR_VALUE_REQUIRED, \/* 84 *\/$/;"	e	enum:__anon45
XML_ERR_VERSION_MISMATCH	libxml\xmlerror.h	/^    XML_ERR_VERSION_MISMATCH, \/* 109 *\/$/;"	e	enum:__anon45
XML_ERR_VERSION_MISSING	libxml\xmlerror.h	/^    XML_ERR_VERSION_MISSING, \/* 96 *\/$/;"	e	enum:__anon45
XML_ERR_WARNING	libxml\xmlerror.h	/^    XML_ERR_WARNING = 1,	\/* A simple warning *\/$/;"	e	enum:__anon43
XML_ERR_XMLDECL_NOT_FINISHED	libxml\xmlerror.h	/^    XML_ERR_XMLDECL_NOT_FINISHED, \/* 57 *\/$/;"	e	enum:__anon45
XML_ERR_XMLDECL_NOT_STARTED	libxml\xmlerror.h	/^    XML_ERR_XMLDECL_NOT_STARTED, \/* 56 *\/$/;"	e	enum:__anon45
XML_FROM_C14N	libxml\xmlerror.h	/^    XML_FROM_C14N,	\/* The Canonicalization module *\/$/;"	e	enum:__anon44
XML_FROM_CATALOG	libxml\xmlerror.h	/^    XML_FROM_CATALOG,	\/* The Catalog module *\/$/;"	e	enum:__anon44
XML_FROM_CHECK	libxml\xmlerror.h	/^    XML_FROM_CHECK,	\/* The error checking module *\/$/;"	e	enum:__anon44
XML_FROM_DATATYPE	libxml\xmlerror.h	/^    XML_FROM_DATATYPE,	\/* The W3C XML Schemas Datatype module *\/$/;"	e	enum:__anon44
XML_FROM_DTD	libxml\xmlerror.h	/^    XML_FROM_DTD,	\/* The XML DTD validation with parser context*\/$/;"	e	enum:__anon44
XML_FROM_FTP	libxml\xmlerror.h	/^    XML_FROM_FTP,	\/* The FTP module *\/$/;"	e	enum:__anon44
XML_FROM_HTML	libxml\xmlerror.h	/^    XML_FROM_HTML,	\/* The HTML parser *\/$/;"	e	enum:__anon44
XML_FROM_HTTP	libxml\xmlerror.h	/^    XML_FROM_HTTP,	\/* The HTTP module *\/$/;"	e	enum:__anon44
XML_FROM_I18N	libxml\xmlerror.h	/^    XML_FROM_I18N,	\/* The module handling character conversion *\/$/;"	e	enum:__anon44
XML_FROM_IO	libxml\xmlerror.h	/^    XML_FROM_IO,	\/* The Input\/Output stack *\/$/;"	e	enum:__anon44
XML_FROM_MEMORY	libxml\xmlerror.h	/^    XML_FROM_MEMORY,	\/* The memory allocator *\/$/;"	e	enum:__anon44
XML_FROM_MODULE	libxml\xmlerror.h	/^    XML_FROM_MODULE,	\/* The dynamically loaded module module*\/$/;"	e	enum:__anon44
XML_FROM_NAMESPACE	libxml\xmlerror.h	/^    XML_FROM_NAMESPACE,	\/* The XML Namespace module *\/$/;"	e	enum:__anon44
XML_FROM_NONE	libxml\xmlerror.h	/^    XML_FROM_NONE = 0,$/;"	e	enum:__anon44
XML_FROM_OUTPUT	libxml\xmlerror.h	/^    XML_FROM_OUTPUT,	\/* The serialization code *\/$/;"	e	enum:__anon44
XML_FROM_PARSER	libxml\xmlerror.h	/^    XML_FROM_PARSER,	\/* The XML parser *\/$/;"	e	enum:__anon44
XML_FROM_REGEXP	libxml\xmlerror.h	/^    XML_FROM_REGEXP,	\/* The regular expressions module *\/$/;"	e	enum:__anon44
XML_FROM_RELAXNGP	libxml\xmlerror.h	/^    XML_FROM_RELAXNGP,	\/* The Relax-NG parser module *\/$/;"	e	enum:__anon44
XML_FROM_RELAXNGV	libxml\xmlerror.h	/^    XML_FROM_RELAXNGV,	\/* The Relax-NG validator module *\/$/;"	e	enum:__anon44
XML_FROM_SCHEMASP	libxml\xmlerror.h	/^    XML_FROM_SCHEMASP,	\/* The W3C XML Schemas parser module *\/$/;"	e	enum:__anon44
XML_FROM_SCHEMASV	libxml\xmlerror.h	/^    XML_FROM_SCHEMASV,	\/* The W3C XML Schemas validation module *\/$/;"	e	enum:__anon44
XML_FROM_SCHEMATRONV	libxml\xmlerror.h	/^    XML_FROM_SCHEMATRONV	\/* The Schematron validator module *\/$/;"	e	enum:__anon44
XML_FROM_TREE	libxml\xmlerror.h	/^    XML_FROM_TREE,	\/* The tree module *\/$/;"	e	enum:__anon44
XML_FROM_VALID	libxml\xmlerror.h	/^    XML_FROM_VALID,	\/* The XML DTD validation with valid context *\/$/;"	e	enum:__anon44
XML_FROM_WRITER	libxml\xmlerror.h	/^    XML_FROM_WRITER,	\/* The xmlwriter module *\/$/;"	e	enum:__anon44
XML_FROM_XINCLUDE	libxml\xmlerror.h	/^    XML_FROM_XINCLUDE,	\/* The XInclude processing *\/$/;"	e	enum:__anon44
XML_FROM_XPATH	libxml\xmlerror.h	/^    XML_FROM_XPATH,	\/* The XPath module *\/$/;"	e	enum:__anon44
XML_FROM_XPOINTER	libxml\xmlerror.h	/^    XML_FROM_XPOINTER,	\/* The XPointer module *\/$/;"	e	enum:__anon44
XML_FROM_XSLT	libxml\xmlerror.h	/^    XML_FROM_XSLT,	\/* The XSLT engine from libxslt *\/$/;"	e	enum:__anon44
XML_FTP_ACCNT	libxml\xmlerror.h	/^    XML_FTP_ACCNT, \/* 2002 *\/$/;"	e	enum:__anon45
XML_FTP_EPSV_ANSWER	libxml\xmlerror.h	/^    XML_FTP_EPSV_ANSWER, \/* 2001 *\/$/;"	e	enum:__anon45
XML_FTP_PASV_ANSWER	libxml\xmlerror.h	/^    XML_FTP_PASV_ANSWER = 2000,$/;"	e	enum:__anon45
XML_FTP_URL_SYNTAX	libxml\xmlerror.h	/^    XML_FTP_URL_SYNTAX, \/* 2003 *\/$/;"	e	enum:__anon45
XML_HTML_STRUCURE_ERROR	libxml\xmlerror.h	/^    XML_HTML_STRUCURE_ERROR = 800,$/;"	e	enum:__anon45
XML_HTML_UNKNOWN_TAG	libxml\xmlerror.h	/^    XML_HTML_UNKNOWN_TAG, \/* 801 *\/$/;"	e	enum:__anon45
XML_HTTP_UNKNOWN_HOST	libxml\xmlerror.h	/^    XML_HTTP_UNKNOWN_HOST, \/* 2022 *\/$/;"	e	enum:__anon45
XML_HTTP_URL_SYNTAX	libxml\xmlerror.h	/^    XML_HTTP_URL_SYNTAX = 2020,$/;"	e	enum:__anon45
XML_HTTP_USE_IP	libxml\xmlerror.h	/^    XML_HTTP_USE_IP, \/* 2021 *\/$/;"	e	enum:__anon45
XML_I18N_CONV_FAILED	libxml\xmlerror.h	/^    XML_I18N_CONV_FAILED, \/* 6003 *\/$/;"	e	enum:__anon45
XML_I18N_EXCESS_HANDLER	libxml\xmlerror.h	/^    XML_I18N_EXCESS_HANDLER, \/* 6002 *\/$/;"	e	enum:__anon45
XML_I18N_NO_HANDLER	libxml\xmlerror.h	/^    XML_I18N_NO_HANDLER, \/* 6001 *\/$/;"	e	enum:__anon45
XML_I18N_NO_NAME	libxml\xmlerror.h	/^    XML_I18N_NO_NAME = 6000,$/;"	e	enum:__anon45
XML_I18N_NO_OUTPUT	libxml\xmlerror.h	/^    XML_I18N_NO_OUTPUT \/* 6004 *\/$/;"	e	enum:__anon45
XML_IO_BUFFER_FULL	libxml\xmlerror.h	/^    XML_IO_BUFFER_FULL, \/* 1548 *\/$/;"	e	enum:__anon45
XML_IO_EACCES	libxml\xmlerror.h	/^    XML_IO_EACCES, \/* 1501 *\/$/;"	e	enum:__anon45
XML_IO_EADDRINUSE	libxml\xmlerror.h	/^    XML_IO_EADDRINUSE, \/* 1554 *\/$/;"	e	enum:__anon45
XML_IO_EAFNOSUPPORT	libxml\xmlerror.h	/^    XML_IO_EAFNOSUPPORT, \/* 1556 *\/$/;"	e	enum:__anon45
XML_IO_EAGAIN	libxml\xmlerror.h	/^    XML_IO_EAGAIN, \/* 1502 *\/$/;"	e	enum:__anon45
XML_IO_EALREADY	libxml\xmlerror.h	/^    XML_IO_EALREADY, \/* 1555 *\/$/;"	e	enum:__anon45
XML_IO_EBADF	libxml\xmlerror.h	/^    XML_IO_EBADF, \/* 1503 *\/$/;"	e	enum:__anon45
XML_IO_EBADMSG	libxml\xmlerror.h	/^    XML_IO_EBADMSG, \/* 1504 *\/$/;"	e	enum:__anon45
XML_IO_EBUSY	libxml\xmlerror.h	/^    XML_IO_EBUSY, \/* 1505 *\/$/;"	e	enum:__anon45
XML_IO_ECANCELED	libxml\xmlerror.h	/^    XML_IO_ECANCELED, \/* 1506 *\/$/;"	e	enum:__anon45
XML_IO_ECHILD	libxml\xmlerror.h	/^    XML_IO_ECHILD, \/* 1507 *\/$/;"	e	enum:__anon45
XML_IO_ECONNREFUSED	libxml\xmlerror.h	/^    XML_IO_ECONNREFUSED, \/* 1552 *\/$/;"	e	enum:__anon45
XML_IO_EDEADLK	libxml\xmlerror.h	/^    XML_IO_EDEADLK, \/* 1508 *\/$/;"	e	enum:__anon45
XML_IO_EDOM	libxml\xmlerror.h	/^    XML_IO_EDOM, \/* 1509 *\/$/;"	e	enum:__anon45
XML_IO_EEXIST	libxml\xmlerror.h	/^    XML_IO_EEXIST, \/* 1510 *\/$/;"	e	enum:__anon45
XML_IO_EFAULT	libxml\xmlerror.h	/^    XML_IO_EFAULT, \/* 1511 *\/$/;"	e	enum:__anon45
XML_IO_EFBIG	libxml\xmlerror.h	/^    XML_IO_EFBIG, \/* 1512 *\/$/;"	e	enum:__anon45
XML_IO_EINPROGRESS	libxml\xmlerror.h	/^    XML_IO_EINPROGRESS, \/* 1513 *\/$/;"	e	enum:__anon45
XML_IO_EINTR	libxml\xmlerror.h	/^    XML_IO_EINTR, \/* 1514 *\/$/;"	e	enum:__anon45
XML_IO_EINVAL	libxml\xmlerror.h	/^    XML_IO_EINVAL, \/* 1515 *\/$/;"	e	enum:__anon45
XML_IO_EIO	libxml\xmlerror.h	/^    XML_IO_EIO, \/* 1516 *\/$/;"	e	enum:__anon45
XML_IO_EISCONN	libxml\xmlerror.h	/^    XML_IO_EISCONN, \/* 1551 *\/$/;"	e	enum:__anon45
XML_IO_EISDIR	libxml\xmlerror.h	/^    XML_IO_EISDIR, \/* 1517 *\/$/;"	e	enum:__anon45
XML_IO_EMFILE	libxml\xmlerror.h	/^    XML_IO_EMFILE, \/* 1518 *\/$/;"	e	enum:__anon45
XML_IO_EMLINK	libxml\xmlerror.h	/^    XML_IO_EMLINK, \/* 1519 *\/$/;"	e	enum:__anon45
XML_IO_EMSGSIZE	libxml\xmlerror.h	/^    XML_IO_EMSGSIZE, \/* 1520 *\/$/;"	e	enum:__anon45
XML_IO_ENAMETOOLONG	libxml\xmlerror.h	/^    XML_IO_ENAMETOOLONG, \/* 1521 *\/$/;"	e	enum:__anon45
XML_IO_ENCODER	libxml\xmlerror.h	/^    XML_IO_ENCODER, \/* 1544 *\/$/;"	e	enum:__anon45
XML_IO_ENETUNREACH	libxml\xmlerror.h	/^    XML_IO_ENETUNREACH, \/* 1553 *\/$/;"	e	enum:__anon45
XML_IO_ENFILE	libxml\xmlerror.h	/^    XML_IO_ENFILE, \/* 1522 *\/$/;"	e	enum:__anon45
XML_IO_ENODEV	libxml\xmlerror.h	/^    XML_IO_ENODEV, \/* 1523 *\/$/;"	e	enum:__anon45
XML_IO_ENOENT	libxml\xmlerror.h	/^    XML_IO_ENOENT, \/* 1524 *\/$/;"	e	enum:__anon45
XML_IO_ENOEXEC	libxml\xmlerror.h	/^    XML_IO_ENOEXEC, \/* 1525 *\/$/;"	e	enum:__anon45
XML_IO_ENOLCK	libxml\xmlerror.h	/^    XML_IO_ENOLCK, \/* 1526 *\/$/;"	e	enum:__anon45
XML_IO_ENOMEM	libxml\xmlerror.h	/^    XML_IO_ENOMEM, \/* 1527 *\/$/;"	e	enum:__anon45
XML_IO_ENOSPC	libxml\xmlerror.h	/^    XML_IO_ENOSPC, \/* 1528 *\/$/;"	e	enum:__anon45
XML_IO_ENOSYS	libxml\xmlerror.h	/^    XML_IO_ENOSYS, \/* 1529 *\/$/;"	e	enum:__anon45
XML_IO_ENOTDIR	libxml\xmlerror.h	/^    XML_IO_ENOTDIR, \/* 1530 *\/$/;"	e	enum:__anon45
XML_IO_ENOTEMPTY	libxml\xmlerror.h	/^    XML_IO_ENOTEMPTY, \/* 1531 *\/$/;"	e	enum:__anon45
XML_IO_ENOTSOCK	libxml\xmlerror.h	/^    XML_IO_ENOTSOCK, \/* 1550 *\/$/;"	e	enum:__anon45
XML_IO_ENOTSUP	libxml\xmlerror.h	/^    XML_IO_ENOTSUP, \/* 1532 *\/$/;"	e	enum:__anon45
XML_IO_ENOTTY	libxml\xmlerror.h	/^    XML_IO_ENOTTY, \/* 1533 *\/$/;"	e	enum:__anon45
XML_IO_ENXIO	libxml\xmlerror.h	/^    XML_IO_ENXIO, \/* 1534 *\/$/;"	e	enum:__anon45
XML_IO_EPERM	libxml\xmlerror.h	/^    XML_IO_EPERM, \/* 1535 *\/$/;"	e	enum:__anon45
XML_IO_EPIPE	libxml\xmlerror.h	/^    XML_IO_EPIPE, \/* 1536 *\/$/;"	e	enum:__anon45
XML_IO_ERANGE	libxml\xmlerror.h	/^    XML_IO_ERANGE, \/* 1537 *\/$/;"	e	enum:__anon45
XML_IO_EROFS	libxml\xmlerror.h	/^    XML_IO_EROFS, \/* 1538 *\/$/;"	e	enum:__anon45
XML_IO_ESPIPE	libxml\xmlerror.h	/^    XML_IO_ESPIPE, \/* 1539 *\/$/;"	e	enum:__anon45
XML_IO_ESRCH	libxml\xmlerror.h	/^    XML_IO_ESRCH, \/* 1540 *\/$/;"	e	enum:__anon45
XML_IO_ETIMEDOUT	libxml\xmlerror.h	/^    XML_IO_ETIMEDOUT, \/* 1541 *\/$/;"	e	enum:__anon45
XML_IO_EXDEV	libxml\xmlerror.h	/^    XML_IO_EXDEV, \/* 1542 *\/$/;"	e	enum:__anon45
XML_IO_FLUSH	libxml\xmlerror.h	/^    XML_IO_FLUSH, \/* 1545 *\/$/;"	e	enum:__anon45
XML_IO_LOAD_ERROR	libxml\xmlerror.h	/^    XML_IO_LOAD_ERROR, \/* 1549 *\/$/;"	e	enum:__anon45
XML_IO_NETWORK_ATTEMPT	libxml\xmlerror.h	/^    XML_IO_NETWORK_ATTEMPT, \/* 1543 *\/$/;"	e	enum:__anon45
XML_IO_NO_INPUT	libxml\xmlerror.h	/^    XML_IO_NO_INPUT, \/* 1547 *\/$/;"	e	enum:__anon45
XML_IO_UNKNOWN	libxml\xmlerror.h	/^    XML_IO_UNKNOWN = 1500,$/;"	e	enum:__anon45
XML_IO_WRITE	libxml\xmlerror.h	/^    XML_IO_WRITE, \/* 1546 *\/$/;"	e	enum:__anon45
XML_MODULE_CLOSE	libxml\xmlerror.h	/^    XML_MODULE_CLOSE, \/* 4901 *\/$/;"	e	enum:__anon45
XML_MODULE_OPEN	libxml\xmlerror.h	/^    XML_MODULE_OPEN = 4900, \/* 4900 *\/$/;"	e	enum:__anon45
XML_NS_ERR_ATTRIBUTE_REDEFINED	libxml\xmlerror.h	/^    XML_NS_ERR_ATTRIBUTE_REDEFINED, \/* 203 *\/$/;"	e	enum:__anon45
XML_NS_ERR_COLON	libxml\xmlerror.h	/^    XML_NS_ERR_COLON, \/* 205 *\/$/;"	e	enum:__anon45
XML_NS_ERR_EMPTY	libxml\xmlerror.h	/^    XML_NS_ERR_EMPTY, \/* 204 *\/$/;"	e	enum:__anon45
XML_NS_ERR_QNAME	libxml\xmlerror.h	/^    XML_NS_ERR_QNAME, \/* 202 *\/$/;"	e	enum:__anon45
XML_NS_ERR_UNDEFINED_NAMESPACE	libxml\xmlerror.h	/^    XML_NS_ERR_UNDEFINED_NAMESPACE, \/* 201 *\/$/;"	e	enum:__anon45
XML_NS_ERR_XML_NAMESPACE	libxml\xmlerror.h	/^    XML_NS_ERR_XML_NAMESPACE = 200,$/;"	e	enum:__anon45
XML_REGEXP_COMPILE_ERROR	libxml\xmlerror.h	/^    XML_REGEXP_COMPILE_ERROR = 1450,$/;"	e	enum:__anon45
XML_RNGP_ANYNAME_ATTR_ANCESTOR	libxml\xmlerror.h	/^    XML_RNGP_ANYNAME_ATTR_ANCESTOR = 1000,$/;"	e	enum:__anon45
XML_RNGP_ATTRIBUTE_CHILDREN	libxml\xmlerror.h	/^    XML_RNGP_ATTRIBUTE_CHILDREN, \/* 1002 *\/$/;"	e	enum:__anon45
XML_RNGP_ATTRIBUTE_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_ATTRIBUTE_CONTENT, \/* 1003 *\/$/;"	e	enum:__anon45
XML_RNGP_ATTRIBUTE_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_ATTRIBUTE_EMPTY, \/* 1004 *\/$/;"	e	enum:__anon45
XML_RNGP_ATTRIBUTE_NOOP	libxml\xmlerror.h	/^    XML_RNGP_ATTRIBUTE_NOOP, \/* 1005 *\/$/;"	e	enum:__anon45
XML_RNGP_ATTR_CONFLICT	libxml\xmlerror.h	/^    XML_RNGP_ATTR_CONFLICT, \/* 1001 *\/$/;"	e	enum:__anon45
XML_RNGP_CHOICE_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_CHOICE_CONTENT, \/* 1006 *\/$/;"	e	enum:__anon45
XML_RNGP_CHOICE_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_CHOICE_EMPTY, \/* 1007 *\/$/;"	e	enum:__anon45
XML_RNGP_CREATE_FAILURE	libxml\xmlerror.h	/^    XML_RNGP_CREATE_FAILURE, \/* 1008 *\/$/;"	e	enum:__anon45
XML_RNGP_DATA_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_DATA_CONTENT, \/* 1009 *\/$/;"	e	enum:__anon45
XML_RNGP_DEFINE_CREATE_FAILED	libxml\xmlerror.h	/^    XML_RNGP_DEFINE_CREATE_FAILED, \/* 1011 *\/$/;"	e	enum:__anon45
XML_RNGP_DEFINE_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_DEFINE_EMPTY, \/* 1012 *\/$/;"	e	enum:__anon45
XML_RNGP_DEFINE_MISSING	libxml\xmlerror.h	/^    XML_RNGP_DEFINE_MISSING, \/* 1013 *\/$/;"	e	enum:__anon45
XML_RNGP_DEFINE_NAME_MISSING	libxml\xmlerror.h	/^    XML_RNGP_DEFINE_NAME_MISSING, \/* 1014 *\/$/;"	e	enum:__anon45
XML_RNGP_DEF_CHOICE_AND_INTERLEAVE	libxml\xmlerror.h	/^    XML_RNGP_DEF_CHOICE_AND_INTERLEAVE, \/* 1010 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEMENT_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_ELEMENT_CONTENT, \/* 1018 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEMENT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_ELEMENT_EMPTY, \/* 1017 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEMENT_NAME	libxml\xmlerror.h	/^    XML_RNGP_ELEMENT_NAME, \/* 1019 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEMENT_NO_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_ELEMENT_NO_CONTENT, \/* 1020 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEM_CONTENT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_ELEM_CONTENT_EMPTY, \/* 1015 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEM_CONTENT_ERROR	libxml\xmlerror.h	/^    XML_RNGP_ELEM_CONTENT_ERROR, \/* 1016 *\/$/;"	e	enum:__anon45
XML_RNGP_ELEM_TEXT_CONFLICT	libxml\xmlerror.h	/^    XML_RNGP_ELEM_TEXT_CONFLICT, \/* 1021 *\/$/;"	e	enum:__anon45
XML_RNGP_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_EMPTY, \/* 1022 *\/$/;"	e	enum:__anon45
XML_RNGP_EMPTY_CONSTRUCT	libxml\xmlerror.h	/^    XML_RNGP_EMPTY_CONSTRUCT, \/* 1023 *\/$/;"	e	enum:__anon45
XML_RNGP_EMPTY_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_EMPTY_CONTENT, \/* 1024 *\/$/;"	e	enum:__anon45
XML_RNGP_EMPTY_NOT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_EMPTY_NOT_EMPTY, \/* 1025 *\/$/;"	e	enum:__anon45
XML_RNGP_ERROR_TYPE_LIB	libxml\xmlerror.h	/^    XML_RNGP_ERROR_TYPE_LIB, \/* 1026 *\/$/;"	e	enum:__anon45
XML_RNGP_EXCEPT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_EXCEPT_EMPTY, \/* 1027 *\/$/;"	e	enum:__anon45
XML_RNGP_EXCEPT_MISSING	libxml\xmlerror.h	/^    XML_RNGP_EXCEPT_MISSING, \/* 1028 *\/$/;"	e	enum:__anon45
XML_RNGP_EXCEPT_MULTIPLE	libxml\xmlerror.h	/^    XML_RNGP_EXCEPT_MULTIPLE, \/* 1029 *\/$/;"	e	enum:__anon45
XML_RNGP_EXCEPT_NO_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_EXCEPT_NO_CONTENT, \/* 1030 *\/$/;"	e	enum:__anon45
XML_RNGP_EXTERNALREF_EMTPY	libxml\xmlerror.h	/^    XML_RNGP_EXTERNALREF_EMTPY, \/* 1031 *\/$/;"	e	enum:__anon45
XML_RNGP_EXTERNALREF_RECURSE	libxml\xmlerror.h	/^    XML_RNGP_EXTERNALREF_RECURSE, \/* 1033 *\/$/;"	e	enum:__anon45
XML_RNGP_EXTERNAL_REF_FAILURE	libxml\xmlerror.h	/^    XML_RNGP_EXTERNAL_REF_FAILURE, \/* 1032 *\/$/;"	e	enum:__anon45
XML_RNGP_FORBIDDEN_ATTRIBUTE	libxml\xmlerror.h	/^    XML_RNGP_FORBIDDEN_ATTRIBUTE, \/* 1034 *\/$/;"	e	enum:__anon45
XML_RNGP_FOREIGN_ELEMENT	libxml\xmlerror.h	/^    XML_RNGP_FOREIGN_ELEMENT, \/* 1035 *\/$/;"	e	enum:__anon45
XML_RNGP_GRAMMAR_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_GRAMMAR_CONTENT, \/* 1036 *\/$/;"	e	enum:__anon45
XML_RNGP_GRAMMAR_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_GRAMMAR_EMPTY, \/* 1037 *\/$/;"	e	enum:__anon45
XML_RNGP_GRAMMAR_MISSING	libxml\xmlerror.h	/^    XML_RNGP_GRAMMAR_MISSING, \/* 1038 *\/$/;"	e	enum:__anon45
XML_RNGP_GRAMMAR_NO_START	libxml\xmlerror.h	/^    XML_RNGP_GRAMMAR_NO_START, \/* 1039 *\/$/;"	e	enum:__anon45
XML_RNGP_GROUP_ATTR_CONFLICT	libxml\xmlerror.h	/^    XML_RNGP_GROUP_ATTR_CONFLICT, \/* 1040 *\/$/;"	e	enum:__anon45
XML_RNGP_HREF_ERROR	libxml\xmlerror.h	/^    XML_RNGP_HREF_ERROR, \/* 1041 *\/$/;"	e	enum:__anon45
XML_RNGP_INCLUDE_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_INCLUDE_EMPTY, \/* 1042 *\/$/;"	e	enum:__anon45
XML_RNGP_INCLUDE_FAILURE	libxml\xmlerror.h	/^    XML_RNGP_INCLUDE_FAILURE, \/* 1043 *\/$/;"	e	enum:__anon45
XML_RNGP_INCLUDE_RECURSE	libxml\xmlerror.h	/^    XML_RNGP_INCLUDE_RECURSE, \/* 1044 *\/$/;"	e	enum:__anon45
XML_RNGP_INTERLEAVE_ADD	libxml\xmlerror.h	/^    XML_RNGP_INTERLEAVE_ADD, \/* 1045 *\/$/;"	e	enum:__anon45
XML_RNGP_INTERLEAVE_CREATE_FAILED	libxml\xmlerror.h	/^    XML_RNGP_INTERLEAVE_CREATE_FAILED, \/* 1046 *\/$/;"	e	enum:__anon45
XML_RNGP_INTERLEAVE_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_INTERLEAVE_EMPTY, \/* 1047 *\/$/;"	e	enum:__anon45
XML_RNGP_INTERLEAVE_NO_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_INTERLEAVE_NO_CONTENT, \/* 1048 *\/$/;"	e	enum:__anon45
XML_RNGP_INVALID_DEFINE_NAME	libxml\xmlerror.h	/^    XML_RNGP_INVALID_DEFINE_NAME, \/* 1049 *\/$/;"	e	enum:__anon45
XML_RNGP_INVALID_URI	libxml\xmlerror.h	/^    XML_RNGP_INVALID_URI, \/* 1050 *\/$/;"	e	enum:__anon45
XML_RNGP_INVALID_VALUE	libxml\xmlerror.h	/^    XML_RNGP_INVALID_VALUE, \/* 1051 *\/$/;"	e	enum:__anon45
XML_RNGP_MISSING_HREF	libxml\xmlerror.h	/^    XML_RNGP_MISSING_HREF, \/* 1052 *\/$/;"	e	enum:__anon45
XML_RNGP_NAME_MISSING	libxml\xmlerror.h	/^    XML_RNGP_NAME_MISSING, \/* 1053 *\/$/;"	e	enum:__anon45
XML_RNGP_NEED_COMBINE	libxml\xmlerror.h	/^    XML_RNGP_NEED_COMBINE, \/* 1054 *\/$/;"	e	enum:__anon45
XML_RNGP_NOTALLOWED_NOT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_NOTALLOWED_NOT_EMPTY, \/* 1055 *\/$/;"	e	enum:__anon45
XML_RNGP_NSNAME_ATTR_ANCESTOR	libxml\xmlerror.h	/^    XML_RNGP_NSNAME_ATTR_ANCESTOR, \/* 1056 *\/$/;"	e	enum:__anon45
XML_RNGP_NSNAME_NO_NS	libxml\xmlerror.h	/^    XML_RNGP_NSNAME_NO_NS, \/* 1057 *\/$/;"	e	enum:__anon45
XML_RNGP_PARAM_FORBIDDEN	libxml\xmlerror.h	/^    XML_RNGP_PARAM_FORBIDDEN, \/* 1058 *\/$/;"	e	enum:__anon45
XML_RNGP_PARAM_NAME_MISSING	libxml\xmlerror.h	/^    XML_RNGP_PARAM_NAME_MISSING, \/* 1059 *\/$/;"	e	enum:__anon45
XML_RNGP_PARENTREF_CREATE_FAILED	libxml\xmlerror.h	/^    XML_RNGP_PARENTREF_CREATE_FAILED, \/* 1060 *\/$/;"	e	enum:__anon45
XML_RNGP_PARENTREF_NAME_INVALID	libxml\xmlerror.h	/^    XML_RNGP_PARENTREF_NAME_INVALID, \/* 1061 *\/$/;"	e	enum:__anon45
XML_RNGP_PARENTREF_NOT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_PARENTREF_NOT_EMPTY, \/* 1064 *\/$/;"	e	enum:__anon45
XML_RNGP_PARENTREF_NO_NAME	libxml\xmlerror.h	/^    XML_RNGP_PARENTREF_NO_NAME, \/* 1062 *\/$/;"	e	enum:__anon45
XML_RNGP_PARENTREF_NO_PARENT	libxml\xmlerror.h	/^    XML_RNGP_PARENTREF_NO_PARENT, \/* 1063 *\/$/;"	e	enum:__anon45
XML_RNGP_PARSE_ERROR	libxml\xmlerror.h	/^    XML_RNGP_PARSE_ERROR, \/* 1065 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME	libxml\xmlerror.h	/^    XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME, \/* 1066 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_ATTR_ATTR	libxml\xmlerror.h	/^    XML_RNGP_PAT_ATTR_ATTR, \/* 1067 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_ATTR_ELEM	libxml\xmlerror.h	/^    XML_RNGP_PAT_ATTR_ELEM, \/* 1068 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_ATTR	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ATTR, \/* 1069 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_ELEM	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ELEM, \/* 1070 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_EMPTY, \/* 1071 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_GROUP	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_GROUP, \/* 1072 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE, \/* 1073 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_LIST	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_LIST, \/* 1074 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_ONEMORE	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ONEMORE, \/* 1075 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_REF	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_REF, \/* 1076 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_DATA_EXCEPT_TEXT	libxml\xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_TEXT, \/* 1077 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_LIST_ATTR	libxml\xmlerror.h	/^    XML_RNGP_PAT_LIST_ATTR, \/* 1078 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_LIST_ELEM	libxml\xmlerror.h	/^    XML_RNGP_PAT_LIST_ELEM, \/* 1079 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_LIST_INTERLEAVE	libxml\xmlerror.h	/^    XML_RNGP_PAT_LIST_INTERLEAVE, \/* 1080 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_LIST_LIST	libxml\xmlerror.h	/^    XML_RNGP_PAT_LIST_LIST, \/* 1081 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_LIST_REF	libxml\xmlerror.h	/^    XML_RNGP_PAT_LIST_REF, \/* 1082 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_LIST_TEXT	libxml\xmlerror.h	/^    XML_RNGP_PAT_LIST_TEXT, \/* 1083 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME	libxml\xmlerror.h	/^    XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME, \/* 1084 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME	libxml\xmlerror.h	/^    XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME, \/* 1085 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_ONEMORE_GROUP_ATTR	libxml\xmlerror.h	/^    XML_RNGP_PAT_ONEMORE_GROUP_ATTR, \/* 1086 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR	libxml\xmlerror.h	/^    XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR, \/* 1087 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_ATTR	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_ATTR, \/* 1088 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_DATA	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_DATA, \/* 1089 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_EMPTY, \/* 1090 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_GROUP	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_GROUP, \/* 1091 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_INTERLEAVE	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_INTERLEAVE, \/* 1092 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_LIST	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_LIST, \/* 1093 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_ONEMORE	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_ONEMORE, \/* 1094 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_TEXT	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_TEXT, \/* 1095 *\/$/;"	e	enum:__anon45
XML_RNGP_PAT_START_VALUE	libxml\xmlerror.h	/^    XML_RNGP_PAT_START_VALUE, \/* 1096 *\/$/;"	e	enum:__anon45
XML_RNGP_PREFIX_UNDEFINED	libxml\xmlerror.h	/^    XML_RNGP_PREFIX_UNDEFINED, \/* 1097 *\/$/;"	e	enum:__anon45
XML_RNGP_REF_CREATE_FAILED	libxml\xmlerror.h	/^    XML_RNGP_REF_CREATE_FAILED, \/* 1098 *\/$/;"	e	enum:__anon45
XML_RNGP_REF_CYCLE	libxml\xmlerror.h	/^    XML_RNGP_REF_CYCLE, \/* 1099 *\/$/;"	e	enum:__anon45
XML_RNGP_REF_NAME_INVALID	libxml\xmlerror.h	/^    XML_RNGP_REF_NAME_INVALID, \/* 1100 *\/$/;"	e	enum:__anon45
XML_RNGP_REF_NOT_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_REF_NOT_EMPTY, \/* 1103 *\/$/;"	e	enum:__anon45
XML_RNGP_REF_NO_DEF	libxml\xmlerror.h	/^    XML_RNGP_REF_NO_DEF, \/* 1101 *\/$/;"	e	enum:__anon45
XML_RNGP_REF_NO_NAME	libxml\xmlerror.h	/^    XML_RNGP_REF_NO_NAME, \/* 1102 *\/$/;"	e	enum:__anon45
XML_RNGP_START_CHOICE_AND_INTERLEAVE	libxml\xmlerror.h	/^    XML_RNGP_START_CHOICE_AND_INTERLEAVE, \/* 1104 *\/$/;"	e	enum:__anon45
XML_RNGP_START_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_START_CONTENT, \/* 1105 *\/$/;"	e	enum:__anon45
XML_RNGP_START_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_START_EMPTY, \/* 1106 *\/$/;"	e	enum:__anon45
XML_RNGP_START_MISSING	libxml\xmlerror.h	/^    XML_RNGP_START_MISSING, \/* 1107 *\/$/;"	e	enum:__anon45
XML_RNGP_TEXT_EXPECTED	libxml\xmlerror.h	/^    XML_RNGP_TEXT_EXPECTED, \/* 1108 *\/$/;"	e	enum:__anon45
XML_RNGP_TEXT_HAS_CHILD	libxml\xmlerror.h	/^    XML_RNGP_TEXT_HAS_CHILD, \/* 1109 *\/$/;"	e	enum:__anon45
XML_RNGP_TYPE_MISSING	libxml\xmlerror.h	/^    XML_RNGP_TYPE_MISSING, \/* 1110 *\/$/;"	e	enum:__anon45
XML_RNGP_TYPE_NOT_FOUND	libxml\xmlerror.h	/^    XML_RNGP_TYPE_NOT_FOUND, \/* 1111 *\/$/;"	e	enum:__anon45
XML_RNGP_TYPE_VALUE	libxml\xmlerror.h	/^    XML_RNGP_TYPE_VALUE, \/* 1112 *\/$/;"	e	enum:__anon45
XML_RNGP_UNKNOWN_ATTRIBUTE	libxml\xmlerror.h	/^    XML_RNGP_UNKNOWN_ATTRIBUTE, \/* 1113 *\/$/;"	e	enum:__anon45
XML_RNGP_UNKNOWN_COMBINE	libxml\xmlerror.h	/^    XML_RNGP_UNKNOWN_COMBINE, \/* 1114 *\/$/;"	e	enum:__anon45
XML_RNGP_UNKNOWN_CONSTRUCT	libxml\xmlerror.h	/^    XML_RNGP_UNKNOWN_CONSTRUCT, \/* 1115 *\/$/;"	e	enum:__anon45
XML_RNGP_UNKNOWN_TYPE_LIB	libxml\xmlerror.h	/^    XML_RNGP_UNKNOWN_TYPE_LIB, \/* 1116 *\/$/;"	e	enum:__anon45
XML_RNGP_URI_FRAGMENT	libxml\xmlerror.h	/^    XML_RNGP_URI_FRAGMENT, \/* 1117 *\/$/;"	e	enum:__anon45
XML_RNGP_URI_NOT_ABSOLUTE	libxml\xmlerror.h	/^    XML_RNGP_URI_NOT_ABSOLUTE, \/* 1118 *\/$/;"	e	enum:__anon45
XML_RNGP_VALUE_EMPTY	libxml\xmlerror.h	/^    XML_RNGP_VALUE_EMPTY, \/* 1119 *\/$/;"	e	enum:__anon45
XML_RNGP_VALUE_NO_CONTENT	libxml\xmlerror.h	/^    XML_RNGP_VALUE_NO_CONTENT, \/* 1120 *\/$/;"	e	enum:__anon45
XML_RNGP_XMLNS_NAME	libxml\xmlerror.h	/^    XML_RNGP_XMLNS_NAME, \/* 1121 *\/$/;"	e	enum:__anon45
XML_RNGP_XML_NS	libxml\xmlerror.h	/^    XML_RNGP_XML_NS, \/* 1122 *\/$/;"	e	enum:__anon45
XML_SAVE_CHAR_INVALID	libxml\xmlerror.h	/^    XML_SAVE_CHAR_INVALID, \/* 1401 *\/$/;"	e	enum:__anon45
XML_SAVE_NOT_UTF8	libxml\xmlerror.h	/^    XML_SAVE_NOT_UTF8 = 1400,$/;"	e	enum:__anon45
XML_SAVE_NO_DOCTYPE	libxml\xmlerror.h	/^    XML_SAVE_NO_DOCTYPE, \/* 1402 *\/$/;"	e	enum:__anon45
XML_SAVE_UNKNOWN_ENCODING	libxml\xmlerror.h	/^    XML_SAVE_UNKNOWN_ENCODING, \/* 1403 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_AG_PROPS_CORRECT	libxml\xmlerror.h	/^    XML_SCHEMAP_AG_PROPS_CORRECT, \/* 3086 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ATTRFORMDEFAULT_VALUE	libxml\xmlerror.h	/^    XML_SCHEMAP_ATTRFORMDEFAULT_VALUE, \/* 1701 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ATTRGRP_NONAME_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_ATTRGRP_NONAME_NOREF, \/* 1702 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ATTR_NONAME_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_ATTR_NONAME_NOREF, \/* 1703 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_AU_PROPS_CORRECT	libxml\xmlerror.h	/^    XML_SCHEMAP_AU_PROPS_CORRECT, \/* 3088 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_AU_PROPS_CORRECT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_AU_PROPS_CORRECT_2, \/* 3078 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_A_PROPS_CORRECT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_A_PROPS_CORRECT_2, \/* 3079 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_A_PROPS_CORRECT_3	libxml\xmlerror.h	/^    XML_SCHEMAP_A_PROPS_CORRECT_3, \/* 3089 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF, \/* 1704 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ALL_LIMITED	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ALL_LIMITED, \/* 3090 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_CT_EXTENDS_1_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_1, \/* 3063 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_CT_EXTENDS_1_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_2, \/* 3087 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_CT_EXTENDS_1_3	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_3, \/* 1800 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_DERIVED_OK_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_DERIVED_OK_2_1, \/* 3031 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_DERIVED_OK_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_DERIVED_OK_2_2, \/* 3032 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_1_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_1, \/* 3011 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_1_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_2, \/* 3012 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1, \/* 3013 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2, \/* 3014 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_1, \/* 3015 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1, \/* 3016 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2, \/* 3017 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1, \/* 3018 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2, \/* 3019 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3, \/* 3020 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4, \/* 3021 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5, \/* 3022 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_1, \/* 3023 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1, \/* 3024 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2, \/* 3025 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1, \/* 3027 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2, \/* 3026 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3, \/* 3028 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4, \/* 3029 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5, \/* 3030 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_VALID_DEFAULT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_1, \/* 3058 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_VALID_DEFAULT_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_1, \/* 3059 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1, \/* 3060 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2, \/* 3061 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_CT_PROPS_CORRECT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_1, \/* 1782 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_CT_PROPS_CORRECT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_2, \/* 1783 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_CT_PROPS_CORRECT_3	libxml\xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_3, \/* 1784 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_CT_PROPS_CORRECT_4	libxml\xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_4, \/* 1785 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_CT_PROPS_CORRECT_5	libxml\xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_5, \/* 1786 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_CVC_SIMPLE_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_CVC_SIMPLE_TYPE, \/* 3062 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_C_PROPS_CORRECT	libxml\xmlerror.h	/^    XML_SCHEMAP_C_PROPS_CORRECT, \/* 3080 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DEF_AND_PREFIX	libxml\xmlerror.h	/^    XML_SCHEMAP_DEF_AND_PREFIX, \/* 1768 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1, \/* 1787 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1, \/* 1788 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2, \/* 1789 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3, \/* 3077 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2, \/* 1790 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3, \/* 1791 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1, \/* 1797 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2, \/* 1798 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3	libxml\xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3, \/* 1799 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ELEMFORMDEFAULT_VALUE	libxml\xmlerror.h	/^    XML_SCHEMAP_ELEMFORMDEFAULT_VALUE, \/* 1705 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ELEM_DEFAULT_FIXED	libxml\xmlerror.h	/^    XML_SCHEMAP_ELEM_DEFAULT_FIXED, \/* 1755 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ELEM_NONAME_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_ELEM_NONAME_NOREF, \/* 1706 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_EXTENSION_NO_BASE	libxml\xmlerror.h	/^    XML_SCHEMAP_EXTENSION_NO_BASE, \/* 1707 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_E_PROPS_CORRECT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_2, \/* 3045 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_E_PROPS_CORRECT_3	libxml\xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_3, \/* 3046 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_E_PROPS_CORRECT_4	libxml\xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_4, \/* 3047 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_E_PROPS_CORRECT_5	libxml\xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_5, \/* 3048 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_E_PROPS_CORRECT_6	libxml\xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_6, \/* 3049 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_FACET_NO_VALUE	libxml\xmlerror.h	/^    XML_SCHEMAP_FACET_NO_VALUE, \/* 1708 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_FAILED_BUILD_IMPORT	libxml\xmlerror.h	/^    XML_SCHEMAP_FAILED_BUILD_IMPORT, \/* 1709 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_FAILED_LOAD	libxml\xmlerror.h	/^    XML_SCHEMAP_FAILED_LOAD, \/* 1757 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_FAILED_PARSE	libxml\xmlerror.h	/^    XML_SCHEMAP_FAILED_PARSE, \/* 1766 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_GROUP_NONAME_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_GROUP_NONAME_NOREF, \/* 1710 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI	libxml\xmlerror.h	/^    XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI, \/* 1711 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_IMPORT_REDEFINE_NSNAME	libxml\xmlerror.h	/^    XML_SCHEMAP_IMPORT_REDEFINE_NSNAME, \/* 1712 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI	libxml\xmlerror.h	/^    XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI, \/* 1713 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI	libxml\xmlerror.h	/^    XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI, \/* 1770 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI	libxml\xmlerror.h	/^    XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI, \/* 1771 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INTERNAL	libxml\xmlerror.h	/^    XML_SCHEMAP_INTERNAL, \/* 3069 non-W3C *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE	libxml\xmlerror.h	/^    XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE, \/* 1793 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_ATTR_COMBINATION	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_COMBINATION, \/* 1777 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION, \/* 1778 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_ATTR_NAME	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_NAME, \/* 1780 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_ATTR_USE	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_USE, \/* 1774 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_BOOLEAN	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_BOOLEAN, \/* 1714 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_ENUM	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_ENUM, \/* 1715 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_FACET	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_FACET, \/* 1716 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_FACET_VALUE	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_FACET_VALUE, \/* 1717 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_MAXOCCURS	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_MAXOCCURS, \/* 1718 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_MINOCCURS	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_MINOCCURS, \/* 1719 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_REF_AND_SUBTYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_REF_AND_SUBTYPE, \/* 1720 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_INVALID_WHITE_SPACE	libxml\xmlerror.h	/^    XML_SCHEMAP_INVALID_WHITE_SPACE, \/* 1721 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_MG_PROPS_CORRECT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_MG_PROPS_CORRECT_1, \/* 3074 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_MG_PROPS_CORRECT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_MG_PROPS_CORRECT_2, \/* 3075 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD, \/* 1779 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOATTR_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_NOATTR_NOREF, \/* 1722 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOROOT	libxml\xmlerror.h	/^    XML_SCHEMAP_NOROOT, \/* 1759 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOTATION_NO_NAME	libxml\xmlerror.h	/^    XML_SCHEMAP_NOTATION_NO_NAME, \/* 1723 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOTHING_TO_PARSE	libxml\xmlerror.h	/^    XML_SCHEMAP_NOTHING_TO_PARSE, \/* 1758 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOTYPE_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_NOTYPE_NOREF, \/* 1724 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOT_DETERMINISTIC	libxml\xmlerror.h	/^    XML_SCHEMAP_NOT_DETERMINISTIC, \/* 3070 non-W3C *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NOT_SCHEMA	libxml\xmlerror.h	/^    XML_SCHEMAP_NOT_SCHEMA, \/* 1772 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NO_XMLNS	libxml\xmlerror.h	/^    XML_SCHEMAP_NO_XMLNS, \/* 3056 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_NO_XSI	libxml\xmlerror.h	/^    XML_SCHEMAP_NO_XSI, \/* 3057 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_PREFIX_UNDEFINED	libxml\xmlerror.h	/^    XML_SCHEMAP_PREFIX_UNDEFINED = 1700,$/;"	e	enum:__anon45
XML_SCHEMAP_P_PROPS_CORRECT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_1, \/* 3042 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_P_PROPS_CORRECT_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_2_1, \/* 3043 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_P_PROPS_CORRECT_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_2_2, \/* 3044 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_RECURSIVE	libxml\xmlerror.h	/^    XML_SCHEMAP_RECURSIVE, \/* 1775 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REDEFINED_ATTR	libxml\xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ATTR, \/* 1764 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REDEFINED_ATTRGROUP	libxml\xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ATTRGROUP, \/* 1763 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REDEFINED_ELEMENT	libxml\xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ELEMENT, \/* 1762 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REDEFINED_GROUP	libxml\xmlerror.h	/^    XML_SCHEMAP_REDEFINED_GROUP, \/* 1760 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REDEFINED_NOTATION	libxml\xmlerror.h	/^    XML_SCHEMAP_REDEFINED_NOTATION, \/* 1765 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REDEFINED_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_REDEFINED_TYPE, \/* 1761 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REF_AND_CONTENT	libxml\xmlerror.h	/^    XML_SCHEMAP_REF_AND_CONTENT, \/* 1781 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REF_AND_SUBTYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_REF_AND_SUBTYPE, \/* 1725 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_REGEXP_INVALID	libxml\xmlerror.h	/^    XML_SCHEMAP_REGEXP_INVALID, \/* 1756 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_RESTRICTION_NONAME_NOREF	libxml\xmlerror.h	/^    XML_SCHEMAP_RESTRICTION_NONAME_NOREF, \/* 1726 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_S4S_ATTR_INVALID_VALUE	libxml\xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_INVALID_VALUE, \/* 3037 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_S4S_ATTR_MISSING	libxml\xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_MISSING, \/* 3036 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED	libxml\xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED, \/* 3035 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_S4S_ELEM_MISSING	libxml\xmlerror.h	/^    XML_SCHEMAP_S4S_ELEM_MISSING, \/* 3034 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED	libxml\xmlerror.h	/^    XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED, \/* 3033 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SIMPLETYPE_NONAME	libxml\xmlerror.h	/^    XML_SCHEMAP_SIMPLETYPE_NONAME, \/* 1727 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_1, \/* 3051 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_2, \/* 3052 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_3_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_3_1, \/* 3053 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_3_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_3_2, \/* 3054 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_4	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_4, \/* 3055 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1, \/* 3071 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2, \/* 3072 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3, \/* 3073 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_CT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_CT_1, \/* 3076 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ELEMENT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_1, \/* 3038 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ELEMENT_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_2_1, \/* 3039 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ELEMENT_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_2_2, \/* 3040 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_ELEMENT_3	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_3, \/* 3041 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT, \/* 3082 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_1_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_1_1, \/* 3064 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_1_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_1_2, \/* 3065 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2, \/* 3066 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_2_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2_1, \/* 3067 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_2_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2_2, \/* 3068 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_3_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_3_1, \/* 1795 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_IMPORT_3_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_3_2, \/* 1796 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_INCLUDE	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_INCLUDE, \/* 3050 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE, \/* 3006 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_REDEFINE	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_REDEFINE, \/* 3081 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_RESOLVE	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_RESOLVE, \/* 3004 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE, \/* 3005 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_SIMPLE_TYPE_1	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 3000,$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_SIMPLE_TYPE_2	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_2, \/* 3001 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_SIMPLE_TYPE_3	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_3, \/* 3002 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_SIMPLE_TYPE_4	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_4, \/* 3003 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES	libxml\xmlerror.h	/^    XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES, \/* 3007 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ST_PROPS_CORRECT_1	libxml\xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_1, \/* 3008 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ST_PROPS_CORRECT_2	libxml\xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_2, \/* 3009 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_ST_PROPS_CORRECT_3	libxml\xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_3, \/* 3010 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE, \/* 1776 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_TYPE_AND_SUBTYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_TYPE_AND_SUBTYPE, \/* 1728 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNION_NOT_EXPRESSIBLE	libxml\xmlerror.h	/^    XML_SCHEMAP_UNION_NOT_EXPRESSIBLE, \/* 1794 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_ALL_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ALL_CHILD, \/* 1729 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD, \/* 1730 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD, \/* 1732 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP, \/* 1733 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_ATTR_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTR_CHILD, \/* 1731 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_BASE_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_BASE_TYPE, \/* 1734 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_CHOICE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_CHOICE_CHILD, \/* 1735 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD, \/* 1736 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD, \/* 1737 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_ELEM_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ELEM_CHILD, \/* 1738 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD, \/* 1739 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_FACET_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_FACET_CHILD, \/* 1740 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_FACET_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_FACET_TYPE, \/* 1741 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_GROUP_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_GROUP_CHILD, \/* 1742 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_IMPORT_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_IMPORT_CHILD, \/* 1743 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD, \/* 1769 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_LIST_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_LIST_CHILD, \/* 1744 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_MEMBER_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_MEMBER_TYPE, \/* 1773 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_NOTATION_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_NOTATION_CHILD, \/* 1745 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_PREFIX	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_PREFIX, \/* 1767 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD, \/* 1746 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_REF	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_REF, \/* 1747 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD, \/* 1748 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD, \/* 1749 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD, \/* 1750 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD, \/* 1751 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD, \/* 1752 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_TYPE	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_TYPE, \/* 1753 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_UNKNOWN_UNION_CHILD	libxml\xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_UNION_CHILD, \/* 1754 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH	libxml\xmlerror.h	/^    XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH, \/* 3085 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_WARN_ATTR_REDECL_PROH	libxml\xmlerror.h	/^    XML_SCHEMAP_WARN_ATTR_REDECL_PROH, \/* 3085 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_WARN_SKIP_SCHEMA	libxml\xmlerror.h	/^    XML_SCHEMAP_WARN_SKIP_SCHEMA, \/* 3083 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_WARN_UNLOCATED_SCHEMA	libxml\xmlerror.h	/^    XML_SCHEMAP_WARN_UNLOCATED_SCHEMA, \/* 3084 *\/$/;"	e	enum:__anon45
XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER	libxml\xmlerror.h	/^    XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER, \/* 1792 *\/$/;"	e	enum:__anon45
XML_SCHEMATRONV_ASSERT	libxml\xmlerror.h	/^    XML_SCHEMATRONV_ASSERT = 4000, \/* 4000 *\/$/;"	e	enum:__anon45
XML_SCHEMATRONV_REPORT	libxml\xmlerror.h	/^    XML_SCHEMATRONV_REPORT,$/;"	e	enum:__anon45
XML_SCHEMAV_ATTRINVALID	libxml\xmlerror.h	/^    XML_SCHEMAV_ATTRINVALID, \/* 1821 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_ATTRUNKNOWN	libxml\xmlerror.h	/^    XML_SCHEMAV_ATTRUNKNOWN, \/* 1820 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CONSTRUCT	libxml\xmlerror.h	/^    XML_SCHEMAV_CONSTRUCT, \/* 1817 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ATTRIBUTE_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_1, \/* 1861 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ATTRIBUTE_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_2, \/* 1862 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ATTRIBUTE_3	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_3, \/* 1863 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ATTRIBUTE_4	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_4, \/* 1864 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_AU	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_AU, \/* 1874 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_1, \/* 1873 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1, \/* 1841 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2, \/* 1842 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3, \/* 1843 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4, \/* 1844 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1, \/* 1865 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1, \/* 1866 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2, \/* 1867 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_4	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_4, \/* 1868 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1, \/* 1869 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2, \/* 1870 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1, \/* 1824 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2, \/* 1825 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3, \/* 1826 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_1, \/* 1845 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_2, \/* 1846 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_3_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_1, \/* 1847 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_3_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_2_1, \/* 1848 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_3_2_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_2_2, \/* 1849 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_4_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_1, \/* 1850 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_4_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_2, \/* 1851 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_4_3	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_3, \/* 1852 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_5_1_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_1_1, \/* 1853 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_5_1_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_1_2, \/* 1854 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_5_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_1, \/* 1855 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_5_2_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_1, \/* 1856 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_5_2_2_2_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_2_1, \/* 1857 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_5_2_2_2_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_2_2, \/* 1858 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_6	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_6, \/* 1859 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ELT_7	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_7, \/* 1860 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_ENUMERATION_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_ENUMERATION_VALID, \/* 1840 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_FACET_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_FACET_VALID, \/* 1829 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID, \/* 1838 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_IDC	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_IDC, \/* 1877 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_LENGTH_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_LENGTH_VALID, \/* 1830 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID, \/* 1836 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID, \/* 1834 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_MAXLENGTH_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_MAXLENGTH_VALID, \/* 1832 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID, \/* 1835 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_MININCLUSIVE_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_MININCLUSIVE_VALID, \/* 1833 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_MINLENGTH_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_MINLENGTH_VALID, \/* 1831 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_PATTERN_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_PATTERN_VALID, \/* 1839 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_TOTALDIGITS_VALID	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_TOTALDIGITS_VALID, \/* 1837 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_TYPE_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_1, \/* 1875 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_TYPE_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_2, \/* 1876 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_TYPE_3_1_1	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_3_1_1, \/* 1827 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_TYPE_3_1_2	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_3_1_2, \/* 1828 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_CVC_WILDCARD	libxml\xmlerror.h	/^    XML_SCHEMAV_CVC_WILDCARD, \/* 1878 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING	libxml\xmlerror.h	/^    XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING, \/* 1872 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_ELEMCONT	libxml\xmlerror.h	/^    XML_SCHEMAV_ELEMCONT, \/* 1810 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_ELEMENT_CONTENT	libxml\xmlerror.h	/^    XML_SCHEMAV_ELEMENT_CONTENT, \/* 1871 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_EXTRACONTENT	libxml\xmlerror.h	/^    XML_SCHEMAV_EXTRACONTENT, \/* 1813 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_FACET	libxml\xmlerror.h	/^    XML_SCHEMAV_FACET, \/* 1823 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_HAVEDEFAULT	libxml\xmlerror.h	/^    XML_SCHEMAV_HAVEDEFAULT, \/* 1811 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_INTERNAL	libxml\xmlerror.h	/^    XML_SCHEMAV_INTERNAL, \/* 1818 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_INVALIDATTR	libxml\xmlerror.h	/^    XML_SCHEMAV_INVALIDATTR, \/* 1814 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_INVALIDELEM	libxml\xmlerror.h	/^    XML_SCHEMAV_INVALIDELEM, \/* 1815 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_ISABSTRACT	libxml\xmlerror.h	/^    XML_SCHEMAV_ISABSTRACT, \/* 1808 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_MISC	libxml\xmlerror.h	/^    XML_SCHEMAV_MISC, \/* 1879 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_MISSING	libxml\xmlerror.h	/^    XML_SCHEMAV_MISSING, \/* 1804 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOROLLBACK	libxml\xmlerror.h	/^    XML_SCHEMAV_NOROLLBACK, \/* 1807 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOROOT	libxml\xmlerror.h	/^    XML_SCHEMAV_NOROOT = 1801,$/;"	e	enum:__anon45
XML_SCHEMAV_NOTDETERMINIST	libxml\xmlerror.h	/^    XML_SCHEMAV_NOTDETERMINIST, \/* 1816 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOTEMPTY	libxml\xmlerror.h	/^    XML_SCHEMAV_NOTEMPTY, \/* 1809 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOTNILLABLE	libxml\xmlerror.h	/^    XML_SCHEMAV_NOTNILLABLE, \/* 1812 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOTSIMPLE	libxml\xmlerror.h	/^    XML_SCHEMAV_NOTSIMPLE, \/* 1819 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOTTOPLEVEL	libxml\xmlerror.h	/^    XML_SCHEMAV_NOTTOPLEVEL, \/* 1803 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_NOTYPE	libxml\xmlerror.h	/^    XML_SCHEMAV_NOTYPE, \/* 1806 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_UNDECLAREDELEM	libxml\xmlerror.h	/^    XML_SCHEMAV_UNDECLAREDELEM, \/* 1802 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_VALUE	libxml\xmlerror.h	/^    XML_SCHEMAV_VALUE, \/* 1822 *\/$/;"	e	enum:__anon45
XML_SCHEMAV_WRONGELEM	libxml\xmlerror.h	/^    XML_SCHEMAV_WRONGELEM, \/* 1805 *\/$/;"	e	enum:__anon45
XML_TREE_INVALID_DEC	libxml\xmlerror.h	/^    XML_TREE_INVALID_DEC, \/* 1301 *\/$/;"	e	enum:__anon45
XML_TREE_INVALID_HEX	libxml\xmlerror.h	/^    XML_TREE_INVALID_HEX = 1300,$/;"	e	enum:__anon45
XML_TREE_NOT_UTF8	libxml\xmlerror.h	/^    XML_TREE_NOT_UTF8, \/* 1303 *\/$/;"	e	enum:__anon45
XML_TREE_UNTERMINATED_ENTITY	libxml\xmlerror.h	/^    XML_TREE_UNTERMINATED_ENTITY, \/* 1302 *\/$/;"	e	enum:__anon45
XML_WAR_CATALOG_PI	libxml\xmlerror.h	/^    XML_WAR_CATALOG_PI, \/* 93 *\/$/;"	e	enum:__anon45
XML_WAR_ENTITY_REDEFINED	libxml\xmlerror.h	/^    XML_WAR_ENTITY_REDEFINED, \/* 107 *\/$/;"	e	enum:__anon45
XML_WAR_LANG_VALUE	libxml\xmlerror.h	/^    XML_WAR_LANG_VALUE, \/* 98 *\/$/;"	e	enum:__anon45
XML_WAR_NS_COLUMN	libxml\xmlerror.h	/^    XML_WAR_NS_COLUMN, \/* 106 *\/$/;"	e	enum:__anon45
XML_WAR_NS_URI	libxml\xmlerror.h	/^    XML_WAR_NS_URI, \/* 99 *\/$/;"	e	enum:__anon45
XML_WAR_NS_URI_RELATIVE	libxml\xmlerror.h	/^    XML_WAR_NS_URI_RELATIVE, \/* 100 *\/$/;"	e	enum:__anon45
XML_WAR_SPACE_VALUE	libxml\xmlerror.h	/^    XML_WAR_SPACE_VALUE, \/* 102 *\/$/;"	e	enum:__anon45
XML_WAR_UNDECLARED_ENTITY	libxml\xmlerror.h	/^    XML_WAR_UNDECLARED_ENTITY, \/* 27 *\/$/;"	e	enum:__anon45
XML_WAR_UNKNOWN_VERSION	libxml\xmlerror.h	/^    XML_WAR_UNKNOWN_VERSION, \/* 97 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_BUILD_FAILED	libxml\xmlerror.h	/^    XML_XINCLUDE_BUILD_FAILED, \/* 1609 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_DEPRECATED_NS	libxml\xmlerror.h	/^    XML_XINCLUDE_DEPRECATED_NS, \/* 1617 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_ENTITY_DEF_MISMATCH	libxml\xmlerror.h	/^    XML_XINCLUDE_ENTITY_DEF_MISMATCH, \/* 1602 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_FALLBACKS_IN_INCLUDE	libxml\xmlerror.h	/^    XML_XINCLUDE_FALLBACKS_IN_INCLUDE, \/* 1615 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE	libxml\xmlerror.h	/^    XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE, \/* 1616 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_FRAGMENT_ID	libxml\xmlerror.h	/^    XML_XINCLUDE_FRAGMENT_ID, \/* 1618 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_HREF_URI	libxml\xmlerror.h	/^    XML_XINCLUDE_HREF_URI, \/* 1605 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_INCLUDE_IN_INCLUDE	libxml\xmlerror.h	/^    XML_XINCLUDE_INCLUDE_IN_INCLUDE, \/* 1614 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_INVALID_CHAR	libxml\xmlerror.h	/^    XML_XINCLUDE_INVALID_CHAR, \/* 1608 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_MULTIPLE_ROOT	libxml\xmlerror.h	/^    XML_XINCLUDE_MULTIPLE_ROOT, \/* 1611 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_NO_FALLBACK	libxml\xmlerror.h	/^    XML_XINCLUDE_NO_FALLBACK, \/* 1604 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_NO_HREF	libxml\xmlerror.h	/^    XML_XINCLUDE_NO_HREF, \/* 1603 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_PARSE_VALUE	libxml\xmlerror.h	/^    XML_XINCLUDE_PARSE_VALUE, \/* 1601 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_RECURSION	libxml\xmlerror.h	/^    XML_XINCLUDE_RECURSION=1600,$/;"	e	enum:__anon45
XML_XINCLUDE_TEXT_DOCUMENT	libxml\xmlerror.h	/^    XML_XINCLUDE_TEXT_DOCUMENT, \/* 1607 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_TEXT_FRAGMENT	libxml\xmlerror.h	/^    XML_XINCLUDE_TEXT_FRAGMENT, \/* 1606 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_UNKNOWN_ENCODING	libxml\xmlerror.h	/^    XML_XINCLUDE_UNKNOWN_ENCODING, \/* 1610 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_XPTR_FAILED	libxml\xmlerror.h	/^    XML_XINCLUDE_XPTR_FAILED, \/* 1612 *\/$/;"	e	enum:__anon45
XML_XINCLUDE_XPTR_RESULT	libxml\xmlerror.h	/^    XML_XINCLUDE_XPTR_RESULT, \/* 1613 *\/$/;"	e	enum:__anon45
XML_XPATH_ENCODING_ERROR	libxml\xmlerror.h	/^    XML_XPATH_ENCODING_ERROR, \/* 1220 *\/$/;"	e	enum:__anon45
XML_XPATH_EXPRESSION_OK	libxml\xmlerror.h	/^    XML_XPATH_EXPRESSION_OK = 1200,$/;"	e	enum:__anon45
XML_XPATH_EXPR_ERROR	libxml\xmlerror.h	/^    XML_XPATH_EXPR_ERROR, \/* 1207 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_ARITY	libxml\xmlerror.h	/^    XML_XPATH_INVALID_ARITY, \/* 1212 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_CHAR_ERROR	libxml\xmlerror.h	/^    XML_XPATH_INVALID_CHAR_ERROR, \/* 1221 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_CTXT_POSITION	libxml\xmlerror.h	/^    XML_XPATH_INVALID_CTXT_POSITION, \/* 1214 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_CTXT_SIZE	libxml\xmlerror.h	/^    XML_XPATH_INVALID_CTXT_SIZE, \/* 1213 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_OPERAND	libxml\xmlerror.h	/^    XML_XPATH_INVALID_OPERAND, \/* 1210 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_PREDICATE_ERROR	libxml\xmlerror.h	/^    XML_XPATH_INVALID_PREDICATE_ERROR, \/* 1206 *\/$/;"	e	enum:__anon45
XML_XPATH_INVALID_TYPE	libxml\xmlerror.h	/^    XML_XPATH_INVALID_TYPE, \/* 1211 *\/$/;"	e	enum:__anon45
XML_XPATH_MEMORY_ERROR	libxml\xmlerror.h	/^    XML_XPATH_MEMORY_ERROR, \/* 1215 *\/$/;"	e	enum:__anon45
XML_XPATH_NUMBER_ERROR	libxml\xmlerror.h	/^    XML_XPATH_NUMBER_ERROR, \/* 1201 *\/$/;"	e	enum:__anon45
XML_XPATH_START_LITERAL_ERROR	libxml\xmlerror.h	/^    XML_XPATH_START_LITERAL_ERROR, \/* 1203 *\/$/;"	e	enum:__anon45
XML_XPATH_UNCLOSED_ERROR	libxml\xmlerror.h	/^    XML_XPATH_UNCLOSED_ERROR, \/* 1208 *\/$/;"	e	enum:__anon45
XML_XPATH_UNDEF_PREFIX_ERROR	libxml\xmlerror.h	/^    XML_XPATH_UNDEF_PREFIX_ERROR, \/* 1219 *\/$/;"	e	enum:__anon45
XML_XPATH_UNDEF_VARIABLE_ERROR	libxml\xmlerror.h	/^    XML_XPATH_UNDEF_VARIABLE_ERROR, \/* 1205 *\/$/;"	e	enum:__anon45
XML_XPATH_UNFINISHED_LITERAL_ERROR	libxml\xmlerror.h	/^    XML_XPATH_UNFINISHED_LITERAL_ERROR, \/* 1202 *\/$/;"	e	enum:__anon45
XML_XPATH_UNKNOWN_FUNC_ERROR	libxml\xmlerror.h	/^    XML_XPATH_UNKNOWN_FUNC_ERROR, \/* 1209 *\/$/;"	e	enum:__anon45
XML_XPATH_VARIABLE_REF_ERROR	libxml\xmlerror.h	/^    XML_XPATH_VARIABLE_REF_ERROR, \/* 1204 *\/$/;"	e	enum:__anon45
XML_XPTR_CHILDSEQ_START	libxml\xmlerror.h	/^    XML_XPTR_CHILDSEQ_START, \/* 1901 *\/$/;"	e	enum:__anon45
XML_XPTR_EVAL_FAILED	libxml\xmlerror.h	/^    XML_XPTR_EVAL_FAILED, \/* 1902 *\/$/;"	e	enum:__anon45
XML_XPTR_EXTRA_OBJECTS	libxml\xmlerror.h	/^    XML_XPTR_EXTRA_OBJECTS, \/* 1903 *\/$/;"	e	enum:__anon45
XML_XPTR_RESOURCE_ERROR	libxml\xmlerror.h	/^    XML_XPTR_RESOURCE_ERROR, \/* 1217 *\/$/;"	e	enum:__anon45
XML_XPTR_SUB_RESOURCE_ERROR	libxml\xmlerror.h	/^    XML_XPTR_SUB_RESOURCE_ERROR, \/* 1218 *\/$/;"	e	enum:__anon45
XML_XPTR_SYNTAX_ERROR	libxml\xmlerror.h	/^    XML_XPTR_SYNTAX_ERROR, \/* 1216 *\/$/;"	e	enum:__anon45
XML_XPTR_UNKNOWN_SCHEME	libxml\xmlerror.h	/^    XML_XPTR_UNKNOWN_SCHEME = 1900,$/;"	e	enum:__anon45
__XML_ERROR_H__	libxml\xmlerror.h	13;"	d
_xmlError	libxml\xmlerror.h	/^struct _xmlError {$/;"	s
code	libxml\xmlerror.h	/^    int		code;	\/* The error code, e.g. an xmlParserError *\/$/;"	m	struct:_xmlError
ctxt	libxml\xmlerror.h	/^    void       *ctxt;   \/* the parser context if available *\/$/;"	m	struct:_xmlError
domain	libxml\xmlerror.h	/^    int		domain;	\/* What part of the library raised this error *\/$/;"	m	struct:_xmlError
file	libxml\xmlerror.h	/^    char       *file;	\/* the filename *\/$/;"	m	struct:_xmlError
int1	libxml\xmlerror.h	/^    int		int1;	\/* extra number information *\/$/;"	m	struct:_xmlError
int2	libxml\xmlerror.h	/^    int		int2;	\/* column number of the error or 0 if N\/A (todo: rename this field when we would break ABI) *\/$/;"	m	struct:_xmlError
level	libxml\xmlerror.h	/^    xmlErrorLevel level;\/* how consequent is the error *\/$/;"	m	struct:_xmlError
line	libxml\xmlerror.h	/^    int		line;	\/* the line number if available *\/$/;"	m	struct:_xmlError
message	libxml\xmlerror.h	/^    char       *message;\/* human-readable informative error message *\/$/;"	m	struct:_xmlError
node	libxml\xmlerror.h	/^    void       *node;   \/* the node in the tree *\/$/;"	m	struct:_xmlError
str1	libxml\xmlerror.h	/^    char       *str1;	\/* extra string information *\/$/;"	m	struct:_xmlError
str2	libxml\xmlerror.h	/^    char       *str2;	\/* extra string information *\/$/;"	m	struct:_xmlError
str3	libxml\xmlerror.h	/^    char       *str3;	\/* extra string information *\/$/;"	m	struct:_xmlError
xmlError	libxml\xmlerror.h	/^typedef struct _xmlError xmlError;$/;"	t	typeref:struct:_xmlError
xmlErrorDomain	libxml\xmlerror.h	/^} xmlErrorDomain;$/;"	t	typeref:enum:__anon44
xmlErrorLevel	libxml\xmlerror.h	/^} xmlErrorLevel;$/;"	t	typeref:enum:__anon43
xmlErrorPtr	libxml\xmlerror.h	/^typedef xmlError *xmlErrorPtr;$/;"	t
xmlParserErrors	libxml\xmlerror.h	/^} xmlParserErrors;$/;"	t	typeref:enum:__anon45
xmlStructuredErrorFunc	libxml\xmlerror.h	/^typedef void (XMLCALL *xmlStructuredErrorFunc) (void *userData, xmlErrorPtr error);$/;"	t
LIBXML_DLL_IMPORT	libxml\xmlexports.h	157;"	d
XMLCALL	libxml\xmlexports.h	109;"	d
XMLCALL	libxml\xmlexports.h	127;"	d
XMLCALL	libxml\xmlexports.h	138;"	d
XMLCALL	libxml\xmlexports.h	151;"	d
XMLCALL	libxml\xmlexports.h	42;"	d
XMLCALL	libxml\xmlexports.h	57;"	d
XMLCALL	libxml\xmlexports.h	71;"	d
XMLCALL	libxml\xmlexports.h	73;"	d
XMLCALL	libxml\xmlexports.h	85;"	d
XMLCALL	libxml\xmlexports.h	98;"	d
XMLCDECL	libxml\xmlexports.h	110;"	d
XMLCDECL	libxml\xmlexports.h	128;"	d
XMLCDECL	libxml\xmlexports.h	139;"	d
XMLCDECL	libxml\xmlexports.h	152;"	d
XMLCDECL	libxml\xmlexports.h	49;"	d
XMLCDECL	libxml\xmlexports.h	58;"	d
XMLCDECL	libxml\xmlexports.h	75;"	d
XMLCDECL	libxml\xmlexports.h	86;"	d
XMLCDECL	libxml\xmlexports.h	99;"	d
XMLPUBFUN	libxml\xmlexports.h	107;"	d
XMLPUBFUN	libxml\xmlexports.h	117;"	d
XMLPUBFUN	libxml\xmlexports.h	120;"	d
XMLPUBFUN	libxml\xmlexports.h	136;"	d
XMLPUBFUN	libxml\xmlexports.h	141;"	d
XMLPUBFUN	libxml\xmlexports.h	144;"	d
XMLPUBFUN	libxml\xmlexports.h	30;"	d
XMLPUBFUN	libxml\xmlexports.h	55;"	d
XMLPUBFUN	libxml\xmlexports.h	60;"	d
XMLPUBFUN	libxml\xmlexports.h	63;"	d
XMLPUBFUN	libxml\xmlexports.h	83;"	d
XMLPUBFUN	libxml\xmlexports.h	88;"	d
XMLPUBFUN	libxml\xmlexports.h	91;"	d
XMLPUBVAR	libxml\xmlexports.h	108;"	d
XMLPUBVAR	libxml\xmlexports.h	118;"	d
XMLPUBVAR	libxml\xmlexports.h	122;"	d
XMLPUBVAR	libxml\xmlexports.h	124;"	d
XMLPUBVAR	libxml\xmlexports.h	137;"	d
XMLPUBVAR	libxml\xmlexports.h	142;"	d
XMLPUBVAR	libxml\xmlexports.h	146;"	d
XMLPUBVAR	libxml\xmlexports.h	148;"	d
XMLPUBVAR	libxml\xmlexports.h	36;"	d
XMLPUBVAR	libxml\xmlexports.h	56;"	d
XMLPUBVAR	libxml\xmlexports.h	61;"	d
XMLPUBVAR	libxml\xmlexports.h	65;"	d
XMLPUBVAR	libxml\xmlexports.h	67;"	d
XMLPUBVAR	libxml\xmlexports.h	84;"	d
XMLPUBVAR	libxml\xmlexports.h	89;"	d
XMLPUBVAR	libxml\xmlexports.h	93;"	d
XMLPUBVAR	libxml\xmlexports.h	95;"	d
_REENTRANT	libxml\xmlexports.h	101;"	d
_REENTRANT	libxml\xmlexports.h	130;"	d
_REENTRANT	libxml\xmlexports.h	77;"	d
__XML_EXPORTS_H__	libxml\xmlexports.h	11;"	d
DEBUG_MEMORY	libxml\xmlmemory.h	31;"	d
__DEBUG_MEMORY_ALLOC__	libxml\xmlmemory.h	13;"	d
xmlFreeFunc	libxml\xmlmemory.h	/^typedef void (XMLCALL *xmlFreeFunc)(void *mem);$/;"	t
xmlMalloc	libxml\xmlmemory.h	179;"	d
xmlMallocAtomic	libxml\xmlmemory.h	189;"	d
xmlMemStrdup	libxml\xmlmemory.h	208;"	d
xmlRealloc	libxml\xmlmemory.h	199;"	d
xmlReallocFunc	libxml\xmlmemory.h	/^typedef void *(XMLCALL *xmlReallocFunc)(void *mem, size_t size);$/;"	t
xmlStrdupFunc	libxml\xmlmemory.h	/^typedef char *(XMLCALL *xmlStrdupFunc)(const char *str);$/;"	t
XML_MODULE_LAZY	libxml\xmlmodule.h	/^    XML_MODULE_LAZY = 1,	\/* lazy binding *\/$/;"	e	enum:__anon46
XML_MODULE_LOCAL	libxml\xmlmodule.h	/^    XML_MODULE_LOCAL= 2		\/* local binding *\/$/;"	e	enum:__anon46
__XML_MODULE_H__	libxml\xmlmodule.h	12;"	d
xmlModule	libxml\xmlmodule.h	/^typedef struct _xmlModule xmlModule;$/;"	t	typeref:struct:_xmlModule
xmlModuleOption	libxml\xmlmodule.h	/^} xmlModuleOption;$/;"	t	typeref:enum:__anon46
xmlModulePtr	libxml\xmlmodule.h	/^typedef xmlModule *xmlModulePtr;$/;"	t
XML_PARSER_DEFAULTATTRS	libxml\xmlreader.h	/^    XML_PARSER_DEFAULTATTRS = 2,$/;"	e	enum:__anon49
XML_PARSER_LOADDTD	libxml\xmlreader.h	/^    XML_PARSER_LOADDTD = 1,$/;"	e	enum:__anon49
XML_PARSER_SEVERITY_ERROR	libxml\xmlreader.h	/^    XML_PARSER_SEVERITY_ERROR = 4$/;"	e	enum:__anon47
XML_PARSER_SEVERITY_VALIDITY_ERROR	libxml\xmlreader.h	/^    XML_PARSER_SEVERITY_VALIDITY_ERROR = 2,$/;"	e	enum:__anon47
XML_PARSER_SEVERITY_VALIDITY_WARNING	libxml\xmlreader.h	/^    XML_PARSER_SEVERITY_VALIDITY_WARNING = 1,$/;"	e	enum:__anon47
XML_PARSER_SEVERITY_WARNING	libxml\xmlreader.h	/^    XML_PARSER_SEVERITY_WARNING = 3,$/;"	e	enum:__anon47
XML_PARSER_SUBST_ENTITIES	libxml\xmlreader.h	/^    XML_PARSER_SUBST_ENTITIES = 4$/;"	e	enum:__anon49
XML_PARSER_VALIDATE	libxml\xmlreader.h	/^    XML_PARSER_VALIDATE = 3,$/;"	e	enum:__anon49
XML_READER_TYPE_ATTRIBUTE	libxml\xmlreader.h	/^    XML_READER_TYPE_ATTRIBUTE = 2,$/;"	e	enum:__anon50
XML_READER_TYPE_CDATA	libxml\xmlreader.h	/^    XML_READER_TYPE_CDATA = 4,$/;"	e	enum:__anon50
XML_READER_TYPE_COMMENT	libxml\xmlreader.h	/^    XML_READER_TYPE_COMMENT = 8,$/;"	e	enum:__anon50
XML_READER_TYPE_DOCUMENT	libxml\xmlreader.h	/^    XML_READER_TYPE_DOCUMENT = 9,$/;"	e	enum:__anon50
XML_READER_TYPE_DOCUMENT_FRAGMENT	libxml\xmlreader.h	/^    XML_READER_TYPE_DOCUMENT_FRAGMENT = 11,$/;"	e	enum:__anon50
XML_READER_TYPE_DOCUMENT_TYPE	libxml\xmlreader.h	/^    XML_READER_TYPE_DOCUMENT_TYPE = 10,$/;"	e	enum:__anon50
XML_READER_TYPE_ELEMENT	libxml\xmlreader.h	/^    XML_READER_TYPE_ELEMENT = 1,$/;"	e	enum:__anon50
XML_READER_TYPE_END_ELEMENT	libxml\xmlreader.h	/^    XML_READER_TYPE_END_ELEMENT = 15,$/;"	e	enum:__anon50
XML_READER_TYPE_END_ENTITY	libxml\xmlreader.h	/^    XML_READER_TYPE_END_ENTITY = 16,$/;"	e	enum:__anon50
XML_READER_TYPE_ENTITY	libxml\xmlreader.h	/^    XML_READER_TYPE_ENTITY = 6,$/;"	e	enum:__anon50
XML_READER_TYPE_ENTITY_REFERENCE	libxml\xmlreader.h	/^    XML_READER_TYPE_ENTITY_REFERENCE = 5,$/;"	e	enum:__anon50
XML_READER_TYPE_NONE	libxml\xmlreader.h	/^    XML_READER_TYPE_NONE = 0,$/;"	e	enum:__anon50
XML_READER_TYPE_NOTATION	libxml\xmlreader.h	/^    XML_READER_TYPE_NOTATION = 12,$/;"	e	enum:__anon50
XML_READER_TYPE_PROCESSING_INSTRUCTION	libxml\xmlreader.h	/^    XML_READER_TYPE_PROCESSING_INSTRUCTION = 7,$/;"	e	enum:__anon50
XML_READER_TYPE_SIGNIFICANT_WHITESPACE	libxml\xmlreader.h	/^    XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 14,$/;"	e	enum:__anon50
XML_READER_TYPE_TEXT	libxml\xmlreader.h	/^    XML_READER_TYPE_TEXT = 3,$/;"	e	enum:__anon50
XML_READER_TYPE_WHITESPACE	libxml\xmlreader.h	/^    XML_READER_TYPE_WHITESPACE = 13,$/;"	e	enum:__anon50
XML_READER_TYPE_XML_DECLARATION	libxml\xmlreader.h	/^    XML_READER_TYPE_XML_DECLARATION = 17$/;"	e	enum:__anon50
XML_TEXTREADER_MODE_CLOSED	libxml\xmlreader.h	/^    XML_TEXTREADER_MODE_CLOSED = 4,$/;"	e	enum:__anon48
XML_TEXTREADER_MODE_EOF	libxml\xmlreader.h	/^    XML_TEXTREADER_MODE_EOF =3,$/;"	e	enum:__anon48
XML_TEXTREADER_MODE_ERROR	libxml\xmlreader.h	/^    XML_TEXTREADER_MODE_ERROR = 2,$/;"	e	enum:__anon48
XML_TEXTREADER_MODE_INITIAL	libxml\xmlreader.h	/^    XML_TEXTREADER_MODE_INITIAL = 0,$/;"	e	enum:__anon48
XML_TEXTREADER_MODE_INTERACTIVE	libxml\xmlreader.h	/^    XML_TEXTREADER_MODE_INTERACTIVE = 1,$/;"	e	enum:__anon48
XML_TEXTREADER_MODE_READING	libxml\xmlreader.h	/^    XML_TEXTREADER_MODE_READING = 5$/;"	e	enum:__anon48
__XML_XMLREADER_H__	libxml\xmlreader.h	11;"	d
xmlParserProperties	libxml\xmlreader.h	/^} xmlParserProperties;$/;"	t	typeref:enum:__anon49
xmlParserSeverities	libxml\xmlreader.h	/^} xmlParserSeverities;$/;"	t	typeref:enum:__anon47
xmlReaderTypes	libxml\xmlreader.h	/^} xmlReaderTypes;$/;"	t	typeref:enum:__anon50
xmlTextReader	libxml\xmlreader.h	/^typedef struct _xmlTextReader xmlTextReader;$/;"	t	typeref:struct:_xmlTextReader
xmlTextReaderErrorFunc	libxml\xmlreader.h	/^typedef void   (XMLCALL *xmlTextReaderErrorFunc)(void *arg,$/;"	t
xmlTextReaderLocatorPtr	libxml\xmlreader.h	/^typedef void *  xmlTextReaderLocatorPtr;$/;"	t
xmlTextReaderMode	libxml\xmlreader.h	/^} xmlTextReaderMode;$/;"	t	typeref:enum:__anon48
xmlTextReaderPtr	libxml\xmlreader.h	/^typedef xmlTextReader *xmlTextReaderPtr;$/;"	t
XML_EXP_ATOM	libxml\xmlregexp.h	/^    XML_EXP_ATOM = 2,$/;"	e	enum:__anon51
XML_EXP_COUNT	libxml\xmlregexp.h	/^    XML_EXP_COUNT = 5$/;"	e	enum:__anon51
XML_EXP_EMPTY	libxml\xmlregexp.h	/^    XML_EXP_EMPTY = 0,$/;"	e	enum:__anon51
XML_EXP_FORBID	libxml\xmlregexp.h	/^    XML_EXP_FORBID = 1,$/;"	e	enum:__anon51
XML_EXP_OR	libxml\xmlregexp.h	/^    XML_EXP_OR = 4,$/;"	e	enum:__anon51
XML_EXP_SEQ	libxml\xmlregexp.h	/^    XML_EXP_SEQ = 3,$/;"	e	enum:__anon51
__XML_REGEXP_H__	libxml\xmlregexp.h	12;"	d
emptyExp	libxml\xmlregexp.h	/^XMLPUBVAR xmlExpNodePtr emptyExp;$/;"	v
forbiddenExp	libxml\xmlregexp.h	/^XMLPUBVAR xmlExpNodePtr forbiddenExp;$/;"	v
xmlExpCtxt	libxml\xmlregexp.h	/^typedef struct _xmlExpCtxt xmlExpCtxt;$/;"	t	typeref:struct:_xmlExpCtxt
xmlExpCtxtPtr	libxml\xmlregexp.h	/^typedef xmlExpCtxt *xmlExpCtxtPtr;$/;"	t
xmlExpNode	libxml\xmlregexp.h	/^typedef struct _xmlExpNode xmlExpNode;$/;"	t	typeref:struct:_xmlExpNode
xmlExpNodePtr	libxml\xmlregexp.h	/^typedef xmlExpNode *xmlExpNodePtr;$/;"	t
xmlExpNodeType	libxml\xmlregexp.h	/^} xmlExpNodeType;$/;"	t	typeref:enum:__anon51
xmlRegExecCallbacks	libxml\xmlregexp.h	/^typedef void (*xmlRegExecCallbacks) (xmlRegExecCtxtPtr exec,$/;"	t
xmlRegExecCtxt	libxml\xmlregexp.h	/^typedef struct _xmlRegExecCtxt xmlRegExecCtxt;$/;"	t	typeref:struct:_xmlRegExecCtxt
xmlRegExecCtxtPtr	libxml\xmlregexp.h	/^typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;$/;"	t
xmlRegexp	libxml\xmlregexp.h	/^typedef struct _xmlRegexp xmlRegexp;$/;"	t	typeref:struct:_xmlRegexp
xmlRegexpPtr	libxml\xmlregexp.h	/^typedef xmlRegexp *xmlRegexpPtr;$/;"	t
XML_SAVE_AS_HTML	libxml\xmlsave.h	/^    XML_SAVE_AS_HTML    = 1<<6, \/* force HTML serialization on XML doc *\/$/;"	e	enum:__anon52
XML_SAVE_AS_XML	libxml\xmlsave.h	/^    XML_SAVE_AS_XML     = 1<<5, \/* force XML serialization on HTML doc *\/$/;"	e	enum:__anon52
XML_SAVE_FORMAT	libxml\xmlsave.h	/^    XML_SAVE_FORMAT     = 1<<0,	\/* format save output *\/$/;"	e	enum:__anon52
XML_SAVE_NO_DECL	libxml\xmlsave.h	/^    XML_SAVE_NO_DECL    = 1<<1,	\/* drop the xml declaration *\/$/;"	e	enum:__anon52
XML_SAVE_NO_EMPTY	libxml\xmlsave.h	/^    XML_SAVE_NO_EMPTY	= 1<<2, \/* no empty tags *\/$/;"	e	enum:__anon52
XML_SAVE_NO_XHTML	libxml\xmlsave.h	/^    XML_SAVE_NO_XHTML	= 1<<3, \/* disable XHTML1 specific rules *\/$/;"	e	enum:__anon52
XML_SAVE_WSNONSIG	libxml\xmlsave.h	/^    XML_SAVE_WSNONSIG   = 1<<7  \/* format with non-significant whitespace *\/$/;"	e	enum:__anon52
XML_SAVE_XHTML	libxml\xmlsave.h	/^    XML_SAVE_XHTML	= 1<<4, \/* force XHTML1 specific rules *\/$/;"	e	enum:__anon52
__XML_XMLSAVE_H__	libxml\xmlsave.h	11;"	d
xmlSaveCtxt	libxml\xmlsave.h	/^typedef struct _xmlSaveCtxt xmlSaveCtxt;$/;"	t	typeref:struct:_xmlSaveCtxt
xmlSaveCtxtPtr	libxml\xmlsave.h	/^typedef xmlSaveCtxt *xmlSaveCtxtPtr;$/;"	t
xmlSaveOption	libxml\xmlsave.h	/^} xmlSaveOption;$/;"	t	typeref:enum:__anon52
XML_SCHEMAS_ERR_	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_ATTRINVALID	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_ATTRINVALID,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_ATTRUNKNOWN	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_ATTRUNKNOWN,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_CONSTRUCT	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_CONSTRUCT,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_ELEMCONT	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_ELEMCONT,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_EXTRACONTENT	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_EXTRACONTENT,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_FACET	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_FACET,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_HAVEDEFAULT	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_HAVEDEFAULT,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_INTERNAL	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_INTERNAL,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_INVALIDATTR	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_INVALIDATTR,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_INVALIDELEM	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_INVALIDELEM,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_ISABSTRACT	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_ISABSTRACT,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_MISSING	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_MISSING,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOROLLBACK	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOROLLBACK,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOROOT	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOROOT	= 1,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOTDETERMINIST	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTDETERMINIST,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOTEMPTY	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTEMPTY,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOTNILLABLE	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTNILLABLE,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOTSIMPLE	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTSIMPLE,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOTTOPLEVEL	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTTOPLEVEL,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_NOTYPE	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTYPE,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_OK	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_OK		= 0,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_UNDECLAREDELEM	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_UNDECLAREDELEM,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_VALUE	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_VALUE,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_WRONGELEM	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_WRONGELEM,$/;"	e	enum:__anon53
XML_SCHEMAS_ERR_XXX	libxml\xmlschemas.h	/^    XML_SCHEMAS_ERR_XXX$/;"	e	enum:__anon53
XML_SCHEMA_VAL_VC_I_CREATE	libxml\xmlschemas.h	/^    XML_SCHEMA_VAL_VC_I_CREATE			= 1<<0$/;"	e	enum:__anon54
__XML_SCHEMA_H__	libxml\xmlschemas.h	13;"	d
xmlSchema	libxml\xmlschemas.h	/^typedef struct _xmlSchema xmlSchema;$/;"	t	typeref:struct:_xmlSchema
xmlSchemaParserCtxt	libxml\xmlschemas.h	/^typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;$/;"	t	typeref:struct:_xmlSchemaParserCtxt
xmlSchemaParserCtxtPtr	libxml\xmlschemas.h	/^typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;$/;"	t
xmlSchemaPtr	libxml\xmlschemas.h	/^typedef xmlSchema *xmlSchemaPtr;$/;"	t
xmlSchemaSAXPlugPtr	libxml\xmlschemas.h	/^typedef xmlSchemaSAXPlugStruct *xmlSchemaSAXPlugPtr;$/;"	t
xmlSchemaSAXPlugStruct	libxml\xmlschemas.h	/^typedef struct _xmlSchemaSAXPlug xmlSchemaSAXPlugStruct;$/;"	t	typeref:struct:_xmlSchemaSAXPlug
xmlSchemaValidCtxt	libxml\xmlschemas.h	/^typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;$/;"	t	typeref:struct:_xmlSchemaValidCtxt
xmlSchemaValidCtxtPtr	libxml\xmlschemas.h	/^typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;$/;"	t
xmlSchemaValidError	libxml\xmlschemas.h	/^} xmlSchemaValidError;$/;"	t	typeref:enum:__anon53
xmlSchemaValidOption	libxml\xmlschemas.h	/^} xmlSchemaValidOption;$/;"	t	typeref:enum:__anon54
XML_SCHEMA_WHITESPACE_COLLAPSE	libxml\xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_COLLAPSE = 3$/;"	e	enum:__anon55
XML_SCHEMA_WHITESPACE_PRESERVE	libxml\xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_PRESERVE = 1,$/;"	e	enum:__anon55
XML_SCHEMA_WHITESPACE_REPLACE	libxml\xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_REPLACE = 2,$/;"	e	enum:__anon55
XML_SCHEMA_WHITESPACE_UNKNOWN	libxml\xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_UNKNOWN = 0,$/;"	e	enum:__anon55
__XML_SCHEMA_TYPES_H__	libxml\xmlschemastypes.h	13;"	d
xmlSchemaWhitespaceValueType	libxml\xmlschemastypes.h	/^} xmlSchemaWhitespaceValueType;$/;"	t	typeref:enum:__anon55
BAD_CAST	libxml\xmlstring.h	35;"	d
__XML_STRING_H__	libxml\xmlstring.h	12;"	d
xmlChar	libxml\xmlstring.h	/^typedef unsigned char xmlChar;$/;"	t
__XML_UNICODE_H__	libxml\xmlunicode.h	16;"	d
ATTRIBUTE_UNUSED	libxml\xmlversion.h	406;"	d
ATTRIBUTE_UNUSED	libxml\xmlversion.h	447;"	d
LIBXML_ATTR_ALLOC_SIZE	libxml\xmlversion.h	417;"	d
LIBXML_ATTR_ALLOC_SIZE	libxml\xmlversion.h	419;"	d
LIBXML_ATTR_ALLOC_SIZE	libxml\xmlversion.h	422;"	d
LIBXML_ATTR_ALLOC_SIZE	libxml\xmlversion.h	453;"	d
LIBXML_ATTR_FORMAT	libxml\xmlversion.h	433;"	d
LIBXML_ATTR_FORMAT	libxml\xmlversion.h	435;"	d
LIBXML_ATTR_FORMAT	libxml\xmlversion.h	438;"	d
LIBXML_ATTR_FORMAT	libxml\xmlversion.h	459;"	d
LIBXML_AUTOMATA_ENABLED	libxml\xmlversion.h	340;"	d
LIBXML_C14N_ENABLED	libxml\xmlversion.h	214;"	d
LIBXML_CATALOG_ENABLED	libxml\xmlversion.h	223;"	d
LIBXML_DEBUG_ENABLED	libxml\xmlversion.h	295;"	d
LIBXML_DOCB_ENABLED	libxml\xmlversion.h	232;"	d
LIBXML_DOTTED_VERSION	libxml\xmlversion.h	32;"	d
LIBXML_EXPR_ENABLED	libxml\xmlversion.h	349;"	d
LIBXML_FTP_ENABLED	libxml\xmlversion.h	169;"	d
LIBXML_HTML_ENABLED	libxml\xmlversion.h	196;"	d
LIBXML_HTTP_ENABLED	libxml\xmlversion.h	178;"	d
LIBXML_ICONV_ENABLED	libxml\xmlversion.h	268;"	d
LIBXML_LEGACY_ENABLED	libxml\xmlversion.h	205;"	d
LIBXML_MODULES_ENABLED	libxml\xmlversion.h	376;"	d
LIBXML_MODULE_EXTENSION	libxml\xmlversion.h	382;"	d
LIBXML_OUTPUT_ENABLED	libxml\xmlversion.h	115;"	d
LIBXML_PATTERN_ENABLED	libxml\xmlversion.h	142;"	d
LIBXML_PUSH_ENABLED	libxml\xmlversion.h	124;"	d
LIBXML_READER_ENABLED	libxml\xmlversion.h	133;"	d
LIBXML_REGEXP_ENABLED	libxml\xmlversion.h	331;"	d
LIBXML_SAX1_ENABLED	libxml\xmlversion.h	160;"	d
LIBXML_SCHEMAS_ENABLED	libxml\xmlversion.h	358;"	d
LIBXML_SCHEMATRON_ENABLED	libxml\xmlversion.h	367;"	d
LIBXML_TEST_VERSION	libxml\xmlversion.h	61;"	d
LIBXML_THREAD_ENABLED	libxml\xmlversion.h	96;"	d
LIBXML_TREE_ENABLED	libxml\xmlversion.h	106;"	d
LIBXML_UNICODE_ENABLED	libxml\xmlversion.h	322;"	d
LIBXML_VALID_ENABLED	libxml\xmlversion.h	187;"	d
LIBXML_VERSION	libxml\xmlversion.h	39;"	d
LIBXML_VERSION_EXTRA	libxml\xmlversion.h	53;"	d
LIBXML_VERSION_STRING	libxml\xmlversion.h	46;"	d
LIBXML_WRITER_ENABLED	libxml\xmlversion.h	151;"	d
LIBXML_XINCLUDE_ENABLED	libxml\xmlversion.h	259;"	d
LIBXML_XPATH_ENABLED	libxml\xmlversion.h	241;"	d
LIBXML_XPTR_ENABLED	libxml\xmlversion.h	250;"	d
LIBXML_ZLIB_ENABLED	libxml\xmlversion.h	391;"	d
WITHOUT_TRIO	libxml\xmlversion.h	77;"	d
WITH_TRIO	libxml\xmlversion.h	85;"	d
__XML_VERSION_H__	libxml\xmlversion.h	11;"	d
__XML_XMLWRITER_H__	libxml\xmlwriter.h	12;"	d
xmlTextWriter	libxml\xmlwriter.h	/^    typedef struct _xmlTextWriter xmlTextWriter;$/;"	t	typeref:struct:_xmlTextWriter
xmlTextWriterPtr	libxml\xmlwriter.h	/^    typedef xmlTextWriter *xmlTextWriterPtr;$/;"	t
xmlTextWriterWriteDocType	libxml\xmlwriter.h	338;"	d
xmlTextWriterWriteProcessingInstruction	libxml\xmlwriter.h	276;"	d
XML_XPATH_CHECKNS	libxml\xpath.h	261;"	d
XML_XPATH_NOVAR	libxml\xpath.h	267;"	d
XPATH_BOOLEAN	libxml\xpath.h	/^    XPATH_BOOLEAN = 2,$/;"	e	enum:__anon57
XPATH_ENCODING_ERROR	libxml\xpath.h	/^    XPATH_ENCODING_ERROR,$/;"	e	enum:__anon56
XPATH_EXPRESSION_OK	libxml\xpath.h	/^    XPATH_EXPRESSION_OK = 0,$/;"	e	enum:__anon56
XPATH_EXPR_ERROR	libxml\xpath.h	/^    XPATH_EXPR_ERROR,$/;"	e	enum:__anon56
XPATH_INVALID_ARITY	libxml\xpath.h	/^    XPATH_INVALID_ARITY,$/;"	e	enum:__anon56
XPATH_INVALID_CHAR_ERROR	libxml\xpath.h	/^    XPATH_INVALID_CHAR_ERROR,$/;"	e	enum:__anon56
XPATH_INVALID_CTXT	libxml\xpath.h	/^    XPATH_INVALID_CTXT$/;"	e	enum:__anon56
XPATH_INVALID_CTXT_POSITION	libxml\xpath.h	/^    XPATH_INVALID_CTXT_POSITION,$/;"	e	enum:__anon56
XPATH_INVALID_CTXT_SIZE	libxml\xpath.h	/^    XPATH_INVALID_CTXT_SIZE,$/;"	e	enum:__anon56
XPATH_INVALID_OPERAND	libxml\xpath.h	/^    XPATH_INVALID_OPERAND,$/;"	e	enum:__anon56
XPATH_INVALID_PREDICATE_ERROR	libxml\xpath.h	/^    XPATH_INVALID_PREDICATE_ERROR,$/;"	e	enum:__anon56
XPATH_INVALID_TYPE	libxml\xpath.h	/^    XPATH_INVALID_TYPE,$/;"	e	enum:__anon56
XPATH_LOCATIONSET	libxml\xpath.h	/^    XPATH_LOCATIONSET = 7,$/;"	e	enum:__anon57
XPATH_MEMORY_ERROR	libxml\xpath.h	/^    XPATH_MEMORY_ERROR,$/;"	e	enum:__anon56
XPATH_NODESET	libxml\xpath.h	/^    XPATH_NODESET = 1,$/;"	e	enum:__anon57
XPATH_NUMBER	libxml\xpath.h	/^    XPATH_NUMBER = 3,$/;"	e	enum:__anon57
XPATH_NUMBER_ERROR	libxml\xpath.h	/^    XPATH_NUMBER_ERROR,$/;"	e	enum:__anon56
XPATH_POINT	libxml\xpath.h	/^    XPATH_POINT = 5,$/;"	e	enum:__anon57
XPATH_RANGE	libxml\xpath.h	/^    XPATH_RANGE = 6,$/;"	e	enum:__anon57
XPATH_START_LITERAL_ERROR	libxml\xpath.h	/^    XPATH_START_LITERAL_ERROR,$/;"	e	enum:__anon56
XPATH_STRING	libxml\xpath.h	/^    XPATH_STRING = 4,$/;"	e	enum:__anon57
XPATH_UNCLOSED_ERROR	libxml\xpath.h	/^    XPATH_UNCLOSED_ERROR,$/;"	e	enum:__anon56
XPATH_UNDEFINED	libxml\xpath.h	/^    XPATH_UNDEFINED = 0,$/;"	e	enum:__anon57
XPATH_UNDEF_PREFIX_ERROR	libxml\xpath.h	/^    XPATH_UNDEF_PREFIX_ERROR,$/;"	e	enum:__anon56
XPATH_UNDEF_VARIABLE_ERROR	libxml\xpath.h	/^    XPATH_UNDEF_VARIABLE_ERROR,$/;"	e	enum:__anon56
XPATH_UNFINISHED_LITERAL_ERROR	libxml\xpath.h	/^    XPATH_UNFINISHED_LITERAL_ERROR,$/;"	e	enum:__anon56
XPATH_UNKNOWN_FUNC_ERROR	libxml\xpath.h	/^    XPATH_UNKNOWN_FUNC_ERROR,$/;"	e	enum:__anon56
XPATH_USERS	libxml\xpath.h	/^    XPATH_USERS = 8,$/;"	e	enum:__anon57
XPATH_VARIABLE_REF_ERROR	libxml\xpath.h	/^    XPATH_VARIABLE_REF_ERROR,$/;"	e	enum:__anon56
XPATH_XSLT_TREE	libxml\xpath.h	/^    XPATH_XSLT_TREE = 9  \/* An XSLT value tree, non modifiable *\/$/;"	e	enum:__anon57
XPTR_RESOURCE_ERROR	libxml\xpath.h	/^    XPTR_RESOURCE_ERROR,$/;"	e	enum:__anon56
XPTR_SUB_RESOURCE_ERROR	libxml\xpath.h	/^    XPTR_SUB_RESOURCE_ERROR,$/;"	e	enum:__anon56
XPTR_SYNTAX_ERROR	libxml\xpath.h	/^    XPTR_SYNTAX_ERROR,$/;"	e	enum:__anon56
__XML_XPATH_H__	libxml\xpath.h	20;"	d
_xmlNodeSet	libxml\xpath.h	/^struct _xmlNodeSet {$/;"	s
_xmlXPathAxis	libxml\xpath.h	/^struct _xmlXPathAxis {$/;"	s
_xmlXPathContext	libxml\xpath.h	/^struct _xmlXPathContext {$/;"	s
_xmlXPathFunct	libxml\xpath.h	/^struct _xmlXPathFunct {$/;"	s
_xmlXPathObject	libxml\xpath.h	/^struct _xmlXPathObject {$/;"	s
_xmlXPathParserContext	libxml\xpath.h	/^struct _xmlXPathParserContext {$/;"	s
_xmlXPathType	libxml\xpath.h	/^struct _xmlXPathType {$/;"	s
_xmlXPathVariable	libxml\xpath.h	/^struct _xmlXPathVariable {$/;"	s
ancestor	libxml\xpath.h	/^    xmlNodePtr         ancestor;	\/* used for walking preceding axis *\/$/;"	m	struct:_xmlXPathParserContext
axis	libxml\xpath.h	/^    xmlXPathAxisPtr axis;		\/* Array of defined axis *\/$/;"	m	struct:_xmlXPathContext
base	libxml\xpath.h	/^    const xmlChar *base;			\/* the full expression *\/$/;"	m	struct:_xmlXPathParserContext
boolval	libxml\xpath.h	/^    int boolval;$/;"	m	struct:_xmlXPathObject
cache	libxml\xpath.h	/^    void *cache;$/;"	m	struct:_xmlXPathContext
comp	libxml\xpath.h	/^    xmlXPathCompExprPtr comp;		\/* the precompiled expression *\/$/;"	m	struct:_xmlXPathParserContext
context	libxml\xpath.h	/^    xmlXPathContextPtr  context;	\/* the evaluation context *\/$/;"	m	struct:_xmlXPathParserContext
contextSize	libxml\xpath.h	/^    int contextSize;			\/* the context size *\/$/;"	m	struct:_xmlXPathContext
cur	libxml\xpath.h	/^    const xmlChar *cur;			\/* the current char being parsed *\/$/;"	m	struct:_xmlXPathParserContext
debugNode	libxml\xpath.h	/^    xmlNodePtr debugNode;		\/* the source node XSLT *\/$/;"	m	struct:_xmlXPathContext
dict	libxml\xpath.h	/^    xmlDictPtr dict;			\/* dictionary if any *\/$/;"	m	struct:_xmlXPathContext
doc	libxml\xpath.h	/^    xmlDocPtr doc;			\/* The current document *\/$/;"	m	struct:_xmlXPathContext
error	libxml\xpath.h	/^    int error;				\/* error code *\/$/;"	m	struct:_xmlXPathParserContext
error	libxml\xpath.h	/^    xmlStructuredErrorFunc error;       \/* the callback in case of errors *\/$/;"	m	struct:_xmlXPathContext
extra	libxml\xpath.h	/^    void *extra;                        \/* needed for XSLT *\/$/;"	m	struct:_xmlXPathContext
flags	libxml\xpath.h	/^    int flags;				\/* flags to control compilation *\/$/;"	m	struct:_xmlXPathContext
floatval	libxml\xpath.h	/^    double floatval;$/;"	m	struct:_xmlXPathObject
func	libxml\xpath.h	/^    xmlXPathAxisFunc func;		\/* the search function *\/$/;"	m	struct:_xmlXPathAxis
func	libxml\xpath.h	/^    xmlXPathConvertFunc func;		\/* the conversion function *\/$/;"	m	struct:_xmlXPathType
func	libxml\xpath.h	/^    xmlXPathEvalFunc func;		\/* the evaluation function *\/$/;"	m	struct:_xmlXPathFunct
funcHash	libxml\xpath.h	/^    xmlHashTablePtr funcHash;		\/* Hash table of defined funcs *\/$/;"	m	struct:_xmlXPathContext
funcLookupData	libxml\xpath.h	/^    void *funcLookupData;		\/* function lookup data *\/$/;"	m	struct:_xmlXPathContext
funcLookupFunc	libxml\xpath.h	/^    xmlXPathFuncLookupFunc funcLookupFunc;\/* function lookup func *\/$/;"	m	struct:_xmlXPathContext
function	libxml\xpath.h	/^    const xmlChar *function;$/;"	m	struct:_xmlXPathContext
functionURI	libxml\xpath.h	/^    const xmlChar *functionURI;$/;"	m	struct:_xmlXPathContext
here	libxml\xpath.h	/^    xmlNodePtr here;			\/* for here() *\/$/;"	m	struct:_xmlXPathContext
index	libxml\xpath.h	/^    int index;$/;"	m	struct:_xmlXPathObject
index2	libxml\xpath.h	/^    int index2;$/;"	m	struct:_xmlXPathObject
lastError	libxml\xpath.h	/^    xmlError lastError;			\/* the last error *\/$/;"	m	struct:_xmlXPathContext
max_axis	libxml\xpath.h	/^    int max_axis;			\/* max number of axis *\/$/;"	m	struct:_xmlXPathContext
max_funcs_unused	libxml\xpath.h	/^    int max_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
max_types	libxml\xpath.h	/^    int max_types;			\/* max number of types *\/$/;"	m	struct:_xmlXPathContext
max_variables_unused	libxml\xpath.h	/^    int max_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
name	libxml\xpath.h	/^    const xmlChar         *name;		\/* the type name *\/$/;"	m	struct:_xmlXPathType
name	libxml\xpath.h	/^    const xmlChar       *name;		\/* the variable name *\/$/;"	m	struct:_xmlXPathVariable
name	libxml\xpath.h	/^    const xmlChar      *name;		\/* the axis name *\/$/;"	m	struct:_xmlXPathAxis
name	libxml\xpath.h	/^    const xmlChar      *name;		\/* the function name *\/$/;"	m	struct:_xmlXPathFunct
namespaces	libxml\xpath.h	/^    xmlNsPtr *namespaces;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext
nb_axis	libxml\xpath.h	/^    int nb_axis;			\/* number of defined axis *\/$/;"	m	struct:_xmlXPathContext
nb_funcs_unused	libxml\xpath.h	/^    int nb_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
nb_types	libxml\xpath.h	/^    int nb_types;			\/* number of defined types *\/$/;"	m	struct:_xmlXPathContext
nb_variables_unused	libxml\xpath.h	/^    int nb_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
node	libxml\xpath.h	/^    xmlNodePtr node;			\/* The current node *\/$/;"	m	struct:_xmlXPathContext
nodeMax	libxml\xpath.h	/^    int nodeMax;		\/* size of the array as allocated *\/$/;"	m	struct:_xmlNodeSet
nodeNr	libxml\xpath.h	/^    int nodeNr;			\/* number of nodes in the set *\/$/;"	m	struct:_xmlNodeSet
nodeTab	libxml\xpath.h	/^    xmlNodePtr *nodeTab;	\/* array of nodes in no particular order *\/$/;"	m	struct:_xmlNodeSet
nodesetval	libxml\xpath.h	/^    xmlNodeSetPtr nodesetval;$/;"	m	struct:_xmlXPathObject
nsHash	libxml\xpath.h	/^    xmlHashTablePtr nsHash;		\/* The namespaces hash table *\/$/;"	m	struct:_xmlXPathContext
nsNr	libxml\xpath.h	/^    int nsNr;				\/* number of namespace in scope *\/$/;"	m	struct:_xmlXPathContext
origin	libxml\xpath.h	/^    xmlNodePtr origin;			\/* for origin() *\/$/;"	m	struct:_xmlXPathContext
proximityPosition	libxml\xpath.h	/^    int proximityPosition;		\/* the proximity position *\/$/;"	m	struct:_xmlXPathContext
stringval	libxml\xpath.h	/^    xmlChar *stringval;$/;"	m	struct:_xmlXPathObject
tmpNsList	libxml\xpath.h	/^    xmlNsPtr *tmpNsList;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext
tmpNsNr	libxml\xpath.h	/^    int tmpNsNr;			\/* number of namespaces in scope *\/$/;"	m	struct:_xmlXPathContext
type	libxml\xpath.h	/^    xmlXPathObjectType type;$/;"	m	struct:_xmlXPathObject
types	libxml\xpath.h	/^    xmlXPathTypePtr types;		\/* Array of defined types *\/$/;"	m	struct:_xmlXPathContext
user	libxml\xpath.h	/^    void *user;				\/* function to free *\/$/;"	m	struct:_xmlXPathContext
user	libxml\xpath.h	/^    void *user;$/;"	m	struct:_xmlXPathObject
user2	libxml\xpath.h	/^    void *user2;$/;"	m	struct:_xmlXPathObject
userData	libxml\xpath.h	/^    void *userData;                     \/* user specific data block *\/$/;"	m	struct:_xmlXPathContext
value	libxml\xpath.h	/^    xmlXPathObjectPtr     value;	\/* the current value *\/$/;"	m	struct:_xmlXPathParserContext
value	libxml\xpath.h	/^    xmlXPathObjectPtr value;		\/* the value *\/$/;"	m	struct:_xmlXPathVariable
valueMax	libxml\xpath.h	/^    int                valueMax;	\/* max number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext
valueNr	libxml\xpath.h	/^    int                 valueNr;	\/* number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext
valueTab	libxml\xpath.h	/^    xmlXPathObjectPtr *valueTab;	\/* stack of values *\/$/;"	m	struct:_xmlXPathParserContext
varHash	libxml\xpath.h	/^    xmlHashTablePtr varHash;		\/* Hash table of defined variables *\/$/;"	m	struct:_xmlXPathContext
varLookupData	libxml\xpath.h	/^    void *varLookupData;		\/* variable lookup data *\/$/;"	m	struct:_xmlXPathContext
varLookupFunc	libxml\xpath.h	/^    xmlXPathVariableLookupFunc varLookupFunc;\/* variable lookup func *\/$/;"	m	struct:_xmlXPathContext
xmlNodeSet	libxml\xpath.h	/^typedef struct _xmlNodeSet xmlNodeSet;$/;"	t	typeref:struct:_xmlNodeSet
xmlNodeSetPtr	libxml\xpath.h	/^typedef xmlNodeSet *xmlNodeSetPtr;$/;"	t
xmlXPathAxis	libxml\xpath.h	/^typedef struct _xmlXPathAxis xmlXPathAxis;$/;"	t	typeref:struct:_xmlXPathAxis
xmlXPathAxisFunc	libxml\xpath.h	/^typedef xmlXPathObjectPtr (*xmlXPathAxisFunc) (xmlXPathParserContextPtr ctxt,$/;"	t
xmlXPathAxisPtr	libxml\xpath.h	/^typedef xmlXPathAxis *xmlXPathAxisPtr;$/;"	t
xmlXPathCompExpr	libxml\xpath.h	/^typedef struct _xmlXPathCompExpr xmlXPathCompExpr;$/;"	t	typeref:struct:_xmlXPathCompExpr
xmlXPathCompExprPtr	libxml\xpath.h	/^typedef xmlXPathCompExpr *xmlXPathCompExprPtr;$/;"	t
xmlXPathContext	libxml\xpath.h	/^typedef struct _xmlXPathContext xmlXPathContext;$/;"	t	typeref:struct:_xmlXPathContext
xmlXPathContextPtr	libxml\xpath.h	/^typedef xmlXPathContext *xmlXPathContextPtr;$/;"	t
xmlXPathConvertFunc	libxml\xpath.h	/^typedef int (*xmlXPathConvertFunc) (xmlXPathObjectPtr obj, int type);$/;"	t
xmlXPathError	libxml\xpath.h	/^} xmlXPathError;$/;"	t	typeref:enum:__anon56
xmlXPathEvalFunc	libxml\xpath.h	/^typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr ctxt,$/;"	t
xmlXPathFuncLookupFunc	libxml\xpath.h	/^typedef xmlXPathFunction (*xmlXPathFuncLookupFunc) (void *ctxt,$/;"	t
xmlXPathFuncPtr	libxml\xpath.h	/^typedef xmlXPathFunct *xmlXPathFuncPtr;$/;"	t
xmlXPathFunct	libxml\xpath.h	/^typedef struct _xmlXPathFunct xmlXPathFunct;$/;"	t	typeref:struct:_xmlXPathFunct
xmlXPathFunction	libxml\xpath.h	/^typedef void (*xmlXPathFunction) (xmlXPathParserContextPtr ctxt, int nargs);$/;"	t
xmlXPathNAN	libxml\xpath.h	/^XMLPUBVAR double xmlXPathNAN;$/;"	v
xmlXPathNINF	libxml\xpath.h	/^XMLPUBVAR double xmlXPathNINF;$/;"	v
xmlXPathNodeSetGetLength	libxml\xpath.h	408;"	d
xmlXPathNodeSetIsEmpty	libxml\xpath.h	432;"	d
xmlXPathNodeSetItem	libxml\xpath.h	419;"	d
xmlXPathObject	libxml\xpath.h	/^typedef struct _xmlXPathObject xmlXPathObject;$/;"	t	typeref:struct:_xmlXPathObject
xmlXPathObjectPtr	libxml\xpath.h	/^typedef xmlXPathObject *xmlXPathObjectPtr;$/;"	t
xmlXPathObjectType	libxml\xpath.h	/^} xmlXPathObjectType;$/;"	t	typeref:enum:__anon57
xmlXPathPINF	libxml\xpath.h	/^XMLPUBVAR double xmlXPathPINF;$/;"	v
xmlXPathParserContext	libxml\xpath.h	/^typedef struct _xmlXPathParserContext xmlXPathParserContext;$/;"	t	typeref:struct:_xmlXPathParserContext
xmlXPathParserContextPtr	libxml\xpath.h	/^typedef xmlXPathParserContext *xmlXPathParserContextPtr;$/;"	t
xmlXPathType	libxml\xpath.h	/^typedef struct _xmlXPathType xmlXPathType;$/;"	t	typeref:struct:_xmlXPathType
xmlXPathTypePtr	libxml\xpath.h	/^typedef xmlXPathType *xmlXPathTypePtr;$/;"	t
xmlXPathVariable	libxml\xpath.h	/^typedef struct _xmlXPathVariable xmlXPathVariable;$/;"	t	typeref:struct:_xmlXPathVariable
xmlXPathVariableLookupFunc	libxml\xpath.h	/^typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc) (void *ctxt,$/;"	t
xmlXPathVariablePtr	libxml\xpath.h	/^typedef xmlXPathVariable *xmlXPathVariablePtr;$/;"	t
xptr	libxml\xpath.h	/^    int xptr;				\/* is this an XPointer context? *\/$/;"	m	struct:_xmlXPathContext
xptr	libxml\xpath.h	/^    int xptr;				\/* it this an XPointer expression *\/$/;"	m	struct:_xmlXPathParserContext
CAST_TO_BOOLEAN	libxml\xpathInternals.h	324;"	d
CAST_TO_NUMBER	libxml\xpathInternals.h	315;"	d
CAST_TO_STRING	libxml\xpathInternals.h	306;"	d
CHECK_ARITY	libxml\xpathInternals.h	296;"	d
CHECK_ERROR	libxml\xpathInternals.h	239;"	d
CHECK_ERROR0	libxml\xpathInternals.h	247;"	d
CHECK_TYPE	libxml\xpathInternals.h	275;"	d
CHECK_TYPE0	libxml\xpathInternals.h	286;"	d
XP_ERROR	libxml\xpathInternals.h	256;"	d
XP_ERROR0	libxml\xpathInternals.h	265;"	d
__XML_XPATH_INTERNALS_H__	libxml\xpathInternals.h	13;"	d
xmlXPathCheckError	libxml\xpathInternals.h	81;"	d
xmlXPathEmptyNodeSet	libxml\xpathInternals.h	231;"	d
xmlXPathGetContextNode	libxml\xpathInternals.h	101;"	d
xmlXPathGetDocument	libxml\xpathInternals.h	91;"	d
xmlXPathGetError	libxml\xpathInternals.h	71;"	d
xmlXPathReturnBoolean	libxml\xpathInternals.h	121;"	d
xmlXPathReturnEmptyNodeSet	libxml\xpathInternals.h	185;"	d
xmlXPathReturnEmptyString	libxml\xpathInternals.h	166;"	d
xmlXPathReturnExternal	libxml\xpathInternals.h	195;"	d
xmlXPathReturnFalse	libxml\xpathInternals.h	138;"	d
xmlXPathReturnNodeSet	libxml\xpathInternals.h	176;"	d
xmlXPathReturnNumber	libxml\xpathInternals.h	147;"	d
xmlXPathReturnString	libxml\xpathInternals.h	157;"	d
xmlXPathReturnTrue	libxml\xpathInternals.h	130;"	d
xmlXPathSetArityError	libxml\xpathInternals.h	51;"	d
xmlXPathSetError	libxml\xpathInternals.h	41;"	d
xmlXPathSetTypeError	libxml\xpathInternals.h	60;"	d
xmlXPathStackIsExternal	libxml\xpathInternals.h	222;"	d
xmlXPathStackIsNodeSet	libxml\xpathInternals.h	207;"	d
__XML_XPTR_H__	libxml\xpointer.h	18;"	d
_xmlLocationSet	libxml\xpointer.h	/^struct _xmlLocationSet {$/;"	s
locMax	libxml\xpointer.h	/^    int locMax;		      \/* size of the array as allocated *\/$/;"	m	struct:_xmlLocationSet
locNr	libxml\xpointer.h	/^    int locNr;		      \/* number of locations in the set *\/$/;"	m	struct:_xmlLocationSet
locTab	libxml\xpointer.h	/^    xmlXPathObjectPtr *locTab;\/* array of locations *\/$/;"	m	struct:_xmlLocationSet
xmlLocationSet	libxml\xpointer.h	/^typedef struct _xmlLocationSet xmlLocationSet;$/;"	t	typeref:struct:_xmlLocationSet
xmlLocationSetPtr	libxml\xpointer.h	/^typedef xmlLocationSet *xmlLocationSetPtr;$/;"	t
RunThreadFunc	log.cc	/^void * Log::RunThreadFunc()$/;"	f	class:Log
logmapping	log.cc	/^map<int,log4cpp::Category*> logmapping;$/;"	v
Log	log.h	/^    Log(zmq::context_t *context,vector<int> & ports):context_(context),ports_(ports)$/;"	f	class:Log
Log	log.h	/^class Log:public BaseThread$/;"	c
MONITOR_LOG_H_	log.h	2;"	d
context_	log.h	/^    zmq::context_t *context_;$/;"	m	class:Log
ports_	log.h	/^    vector<int> ports_;$/;"	m	class:Log
~Log	log.h	/^    ~Log(){};$/;"	f	class:Log
FormatErrorString	logic_process.lua	/^function FormatErrorString(error_type,error_level,error_info)$/;"	f
handle_did_template_100000	logic_process.lua	/^function handle_did_template_100000(data)$/;"	f
handle_future	logic_process.lua	/^function handle_future(future)$/;"	f
handle_iopv	logic_process.lua	/^ function handle_iopv(iopv)$/;"	f
handle_shl2_mmp	logic_process.lua	/^ function handle_shl2_mmp(stk)$/;"	f
handle_shl2_mmpex	logic_process.lua	/^ function handle_shl2_mmpex(stk)$/;"	f
handle_stk_dyna	logic_process.lua	/^function handle_stk_dyna(stk)$/;"	f
handle_stk_static	logic_process.lua	/^ function handle_stk_static(stk)$/;"	f
DispatchToLua	luaroutine.cc	/^void LuaRoutine::DispatchToLua(unsigned char * pdcdata, int dc_type,int dc_general_intype, int stk_num, int struct_size, int did_template_id)$/;"	f	class:LuaRoutine
GetStkByID	luaroutine.cc	/^struct STK_STATIC * LuaRoutine::GetStkByID(int stk_id)$/;"	f	class:LuaRoutine
Init	luaroutine.cc	/^void LuaRoutine::Init()$/;"	f	class:LuaRoutine
InitLua	luaroutine.cc	/^void LuaRoutine::InitLua()$/;"	f	class:LuaRoutine
InitZMQ	luaroutine.cc	/^void LuaRoutine::InitZMQ()$/;"	f	class:LuaRoutine
PrintCountInfo	luaroutine.cc	/^void PrintCountInfo(int signo)$/;"	f
RunThreadFunc	luaroutine.cc	/^void * LuaRoutine::RunThreadFunc()$/;"	f	class:LuaRoutine
count_pack	luaroutine.cc	/^unsigned long count_pack = 0;$/;"	v
load_file	luaroutine.cc	/^const char load_file[] = "process.lua";$/;"	v
tick	luaroutine.cc	/^struct itimerval tick;  $/;"	v	typeref:struct:itimerval
LuaRoutine	luaroutine.h	/^	LuaRoutine(zmq::context_t *context, XML_ListeningItem & listening_item):context_(context),listening_item_(listening_item)$/;"	f	class:LuaRoutine
LuaRoutine	luaroutine.h	/^class LuaRoutine:public BaseThread$/;"	c
MONITOR_LUA_ROUTINE_H	luaroutine.h	2;"	d
context_	luaroutine.h	/^	zmq::context_t *context_;$/;"	m	class:LuaRoutine
listening_item_	luaroutine.h	/^	XML_ListeningItem listening_item_;$/;"	m	class:LuaRoutine
lua_state_	luaroutine.h	/^	lua_State * lua_state_;$/;"	m	class:LuaRoutine
sock_	luaroutine.h	/^	zmq::socket_t *sock_;$/;"	m	class:LuaRoutine
stk_static_	luaroutine.h	/^	STK_STATIC* stk_static_;$/;"	m	class:LuaRoutine
~LuaRoutine	luaroutine.h	/^	~LuaRoutine()$/;"	f	class:LuaRoutine
CONFIGFILE	monitor.cc	20;"	d	file:
Event_Routine	monitor.cc	/^bool Event_Routine(DWORD event_type)$/;"	f
JoinCaptureThread	monitor.cc	/^void JoinCaptureThread(deque<CaptureNetPacket> & capture_net_packet_deque, deque<HandleNetPacket> & handle_net_packet_deque)$/;"	f
RunCaptureThread	monitor.cc	/^void RunCaptureThread(zmq::context_t &context, int adapter_id, deque<CaptureNetPacket> & cap_net_packet_deque, deque<HandleNetPacket> & handle_net_packet_deque, deque<XML_ListeningItem> &listeningitem_deque)$/;"	f
RunLogThread	monitor.cc	/^void RunLogThread(zmq::context_t &context, Log &log ,XML_Log & xml_log)$/;"	f
TransformDidTemplateToLua	monitor.cc	/^void TransformDidTemplateToLua(XML_ListeningItem & xml_listening_item)$/;"	f
_CRT_SECURE_NO_WARNINGS	monitor.cc	2;"	d	file:
get_network_adapter	monitor.cc	/^int get_network_adapter()$/;"	f
main	monitor.cc	/^int main()$/;"	f
GetABSValue	mword.cpp	/^INT64 MWORD::GetABSValue() const$/;"	f	class:MWORD
GetRawData	mword.cpp	/^DWORD MWORD::GetRawData()$/;"	f	class:MWORD
GetValue	mword.cpp	/^INT64 MWORD::GetValue() const$/;"	f	class:MWORD
MWORD	mword.cpp	/^MWORD::MWORD(int n)$/;"	f	class:MWORD
MWORD	mword.cpp	/^MWORD::MWORD(int nBase,DWORD dwMul)$/;"	f	class:MWORD
SetRawData	mword.cpp	/^void MWORD::SetRawData(DWORD dw)$/;"	f	class:MWORD
operator !=	mword.cpp	/^BOOL MWORD::operator!=(const INT64 d) const$/;"	f	class:MWORD
operator !=	mword.cpp	/^BOOL MWORD::operator!=(const MWORD& d) const$/;"	f	class:MWORD
operator !=	mword.cpp	/^BOOL MWORD::operator!=(const int d) const$/;"	f	class:MWORD
operator *	mword.cpp	/^INT64 MWORD::operator*(const MWORD& d) const$/;"	f	class:MWORD
operator *	mword.cpp	/^INT64 MWORD::operator*(const int d) const$/;"	f	class:MWORD
operator *=	mword.cpp	/^MWORD MWORD::operator*=(const INT64 d)$/;"	f	class:MWORD
operator *=	mword.cpp	/^MWORD MWORD::operator*=(const MWORD& d)$/;"	f	class:MWORD
operator +	mword.cpp	/^INT64 MWORD::operator+(const MWORD& d) const$/;"	f	class:MWORD
operator +	mword.cpp	/^INT64 MWORD::operator+(const int d) const$/;"	f	class:MWORD
operator +=	mword.cpp	/^MWORD MWORD::operator+=(const INT64 d)$/;"	f	class:MWORD
operator +=	mword.cpp	/^MWORD MWORD::operator+=(const MWORD& d)$/;"	f	class:MWORD
operator -	mword.cpp	/^INT64 MWORD::operator-(const MWORD& d) const$/;"	f	class:MWORD
operator -	mword.cpp	/^INT64 MWORD::operator-(const int d) const$/;"	f	class:MWORD
operator -=	mword.cpp	/^MWORD MWORD::operator-=(const INT64 d)$/;"	f	class:MWORD
operator -=	mword.cpp	/^MWORD MWORD::operator-=(const MWORD& d)$/;"	f	class:MWORD
operator /	mword.cpp	/^INT64 MWORD::operator\/(const MWORD& d) const$/;"	f	class:MWORD
operator /	mword.cpp	/^INT64 MWORD::operator\/(const int d) const$/;"	f	class:MWORD
operator /=	mword.cpp	/^MWORD MWORD::operator\/=(const INT64 d)$/;"	f	class:MWORD
operator /=	mword.cpp	/^MWORD MWORD::operator\/=(const MWORD& d)$/;"	f	class:MWORD
operator <	mword.cpp	/^BOOL MWORD::operator<(MWORD d) const$/;"	f	class:MWORD
operator <	mword.cpp	/^BOOL MWORD::operator<(int d) const$/;"	f	class:MWORD
operator =	mword.cpp	/^MWORD MWORD::operator=(const INT64 n)$/;"	f	class:MWORD
operator =	mword.cpp	/^MWORD MWORD::operator=(const MWORD& d)$/;"	f	class:MWORD
operator ==	mword.cpp	/^BOOL MWORD::operator==(const INT64 d) const$/;"	f	class:MWORD
operator ==	mword.cpp	/^BOOL MWORD::operator==(const MWORD& d) const$/;"	f	class:MWORD
operator ==	mword.cpp	/^BOOL MWORD::operator==(const int d) const$/;"	f	class:MWORD
operator >	mword.cpp	/^BOOL MWORD::operator>(MWORD d) const$/;"	f	class:MWORD
operator >	mword.cpp	/^BOOL MWORD::operator>(int d) const$/;"	f	class:MWORD
GetBase	mword.h	/^	unsigned int GetBase(){return m_nBase;}$/;"	f	struct:MWORD
GetMul	mword.h	/^	unsigned int GetMul(){return m_nMul;}$/;"	f	struct:MWORD
INT64	mword.h	/^typedef __int64 INT64;$/;"	t
INT64	mword.h	/^typedef long long INT64;$/;"	t
IsMinus	mword.h	/^	BOOL IsMinus() const {return m_nBase<0;}$/;"	f	struct:MWORD
IsZero	mword.h	/^	BOOL IsZero() const {return m_nBase==0;}$/;"	f	struct:MWORD
MAXBASE	mword.h	/^		MAXBASE = 0x1FFFFFFF,$/;"	e	enum:MWORD::__anon58
MWORD	mword.h	/^	MWORD(){};$/;"	f	struct:MWORD
MWORD	mword.h	/^struct MWORD$/;"	s
UINT64	mword.h	/^typedef unsigned __int64 UINT64;$/;"	t
UINT64	mword.h	/^typedef unsigned long long UINT64;$/;"	t
_MWORD_H_INCLUDE	mword.h	2;"	d
m_nBase	mword.h	/^	int m_nBase:30;$/;"	m	struct:MWORD
m_nMul	mword.h	/^	unsigned int m_nMul:2;$/;"	m	struct:MWORD
operator INT64	mword.h	/^	operator INT64() const { return GetValue();}$/;"	f	struct:MWORD
CombineDCPacket	parse.cc	/^void Parse::CombineDCPacket(unsigned char *pdch, int dc_len)$/;"	f	class:Parse
DispatchData	parse.cc	/^void Parse::DispatchData(zmq::socket_t * sock, void *data, size_t size)$/;"	f	class:Parse
DownloadData	parse.cc	/^void Parse::DownloadData(unsigned char * data, size_t len)$/;"	f	class:Parse
ExtractDataPack	parse.cc	/^BOOL Parse::ExtractDataPack(const DC_HEAD* pOrgHead,DC_HEAD* pHeadBuf,int nBufSize,WORD* pwMarketBuf)$/;"	f	class:Parse
HandlePacket	parse.cc	/^void Parse::HandlePacket(struct timeval timestamp, unsigned char *pkt_data, int port_tag)$/;"	f	class:Parse
Init	parse.cc	/^void Parse::Init()$/;"	f	class:Parse
InitZMQ	parse.cc	/^void Parse::InitZMQ()$/;"	f	class:Parse
IsDCHeader	parse.cc	/^bool Parse::IsDCHeader(unsigned char * dc_header)$/;"	f	class:Parse
IsDCType	parse.cc	/^bool Parse::IsDCType(int dc_type)$/;"	f	class:Parse
MAX_PACKET_LEN	parse.cc	/^static const int MAX_PACKET_LEN = 409600;$/;"	v	file:
RunThreadFunc	parse.cc	/^void *Parse::RunThreadFunc()$/;"	f	class:Parse
DID_TEMPLATE_BUF	parse.h	38;"	d
EXTRACT_BUF	parse.h	37;"	d
MONITOR_PACKETPARSE_H_	parse.h	2;"	d
Parse	parse.h	/^    Parse(zmq::context_t * context, XML_ListeningItem &listening_item):listening_item_(listening_item)$/;"	f	class:Parse
Parse	parse.h	/^class Parse:public BaseThread$/;"	c
case2_tag_	parse.h	/^	bool case2_tag_;$/;"	m	class:Parse
combined_packet_deque_	parse.h	/^	deque<CombinedPacketItem> combined_packet_deque_;$/;"	m	class:Parse
combined_packet_item_	parse.h	/^	CombinedPacketItem combined_packet_item_;$/;"	m	class:Parse
context_	parse.h	/^	zmq::context_t *context_;$/;"	m	class:Parse
count_rc_	parse.h	/^	int count_rc_;$/;"	m	class:Parse
dc_header_	parse.h	/^	unsigned char dc_header_[10];\/\/10 is the length of dc_header$/;"	m	class:Parse
dc_header_last_inner_len_	parse.h	/^	int dc_header_last_inner_len_;$/;"	m	class:Parse
extractDC_	parse.h	/^	ExtractDC extractDC_;$/;"	m	class:Parse
extractbuf	parse.h	/^    char*  extractbuf;$/;"	m	class:Parse
last_pack_len_	parse.h	/^	int last_pack_len_;$/;"	m	class:Parse
last_tcp_seq_	parse.h	/^	unsigned long last_tcp_seq_;$/;"	m	class:Parse
last_temp_len_	parse.h	/^	int last_temp_len_;$/;"	m	class:Parse
listening_item_	parse.h	/^	XML_ListeningItem listening_item_;$/;"	m	class:Parse
long_pack_tag_	parse.h	/^	int long_pack_tag_;$/;"	m	class:Parse
nHqTotal	parse.h	/^	int nHqTotal;$/;"	m	class:Parse
pStkDyna	parse.h	/^    STK_DYNA *pStkDyna;$/;"	m	class:Parse
pStkMMPEx	parse.h	/^    SH_L2_MMPEX *pStkMMPEx;$/;"	m	class:Parse
pStkStatic	parse.h	/^    STK_STATIC *pStkStatic;$/;"	m	class:Parse
recombined_header_buf_	parse.h	/^	unsigned char recombined_header_buf_[PCAPTOPARSE_BUF_SIZE];$/;"	m	class:Parse
sock_recv_	parse.h	/^	zmq::socket_t *sock_recv_;$/;"	m	class:Parse
sock_send_to_log_	parse.h	/^	zmq::socket_t *sock_send_to_log_;$/;"	m	class:Parse
sock_send_to_lua_routine_	parse.h	/^	zmq::socket_t *sock_send_to_lua_routine_;$/;"	m	class:Parse
~Parse	parse.h	/^    virtual ~Parse()$/;"	f	class:Parse
BYTE	pfloat.h	/^typedef unsigned char BYTE;$/;"	t
COMPRESS_API	pfloat.h	51;"	d
COMPRESS_API	pfloat.h	53;"	d
COMPRESS_API	pfloat.h	55;"	d
GetBase	pfloat.h	/^	INT64  GetBase(){return IsMinus() ? ~((INT64)(_data._real_data.m_llBase))+1 : _data._real_data.m_llBase;}  $/;"	f	class:PFloat
GetPrec	pfloat.h	/^    short  GetPrec(){return _data._real_data.m_llPrec;}  \/\/获取精度 $/;"	f	class:PFloat
INT64	pfloat.h	/^typedef __int64 INT64;$/;"	t
INT64	pfloat.h	/^typedef long long INT64;$/;"	t
IsMinus	pfloat.h	/^    bool   IsMinus() const {return _data._real_data.m_llTag == 1;}$/;"	f	class:PFloat
IsZero	pfloat.h	/^    bool   IsZero() const {return _data._real_data.m_llBase == 0;}$/;"	f	class:PFloat
PFloat	pfloat.h	/^class COMPRESS_API PFloat$/;"	c
SetBase	pfloat.h	/^	void   SetBase(INT64 base)$/;"	f	class:PFloat
SetPrec	pfloat.h	/^	void   SetPrec(short prec){_data._real_data.m_llPrec = prec;}$/;"	f	class:PFloat
ToInt64	pfloat.h	/^    INT64  ToInt64(){return _data._value;};  \/\/得到一个与PFloat内存块对应的Int64值$/;"	f	class:PFloat
UINT64	pfloat.h	/^typedef unsigned __int64 UINT64;$/;"	t
UINT64	pfloat.h	/^typedef unsigned long long UINT64;$/;"	t
_PUB_PFLOAT_H_	pfloat.h	33;"	d
_data	pfloat.h	/^    }_data;$/;"	m	class:PFloat	typeref:union:PFloat::__anon59
_real_data	pfloat.h	/^        }_real_data;$/;"	m	union:PFloat::__anon59	typeref:struct:PFloat::__anon59::__anon60
_value	pfloat.h	/^        mutable INT64 _value;$/;"	m	union:PFloat::__anon59
m_llBase	pfloat.h	/^            mutable UINT64 m_llBase:55;  \/\/第2-55位表示正数形式$/;"	m	struct:PFloat::__anon59::__anon60
m_llPrec	pfloat.h	/^            mutable UINT64 m_llPrec:8;  \/\/地56-64位表示小数个数$/;"	m	struct:PFloat::__anon59::__anon60
m_llTag	pfloat.h	/^            mutable UINT64 m_llTag:1;  \/\/第一位作正负号表示$/;"	m	struct:PFloat::__anon59::__anon60
operator double	pfloat.h	/^    operator double() const{return GetValue();};$/;"	f	class:PFloat
FormatReturnError	process.lua	/^function FormatReturnError(dc_type,ret_error)$/;"	f
init	process.lua	/^function init(did_template_id)$/;"	f
process	process.lua	/^function process(dctype,pdcdata)$/;"	f
process_did	process.lua	/^function process_did(port,template_id,data)$/;"	f
process_general	process.lua	/^function process_general(intype,data)$/;"	f
process_shl2_queue	process.lua	/^function process_shl2_queue(dctype, pdcdata)$/;"	f
ChangePrec	pub_pfloat.cpp	/^void   PFloat::ChangePrec(short prec)$/;"	f	class:PFloat
CheckValid	pub_pfloat.cpp	/^bool   PFloat::CheckValid(const char* strValue) const$/;"	f	class:PFloat
GetABSValue	pub_pfloat.cpp	/^double PFloat::GetABSValue() const$/;"	f	class:PFloat
GetStrValue	pub_pfloat.cpp	/^const char* PFloat::GetStrValue(char sValue[])$/;"	f	class:PFloat
GetValue	pub_pfloat.cpp	/^double PFloat::GetValue() const$/;"	f	class:PFloat
MAXVALUE	pub_pfloat.cpp	16;"	d	file:
MINVALUE	pub_pfloat.cpp	19;"	d	file:
PFloat	pub_pfloat.cpp	/^PFloat::PFloat()$/;"	f	class:PFloat
PFloat	pub_pfloat.cpp	/^PFloat::PFloat(INT64 fValue)$/;"	f	class:PFloat
PFloat	pub_pfloat.cpp	/^PFloat::PFloat(INT64 nBase, unsigned short sPrec)$/;"	f	class:PFloat
PFloat	pub_pfloat.cpp	/^PFloat::PFloat(const PFloat &obj)$/;"	f	class:PFloat
PFloat	pub_pfloat.cpp	/^PFloat::PFloat(const char* strValue)$/;"	f	class:PFloat
Power10	pub_pfloat.cpp	/^int    PFloat::Power10(short n) const$/;"	f	class:PFloat
Str2PFloat	pub_pfloat.cpp	/^PFloat    PFloat::Str2PFloat(PFloat& f, const char* str) const$/;"	f	class:PFloat
operator !=	pub_pfloat.cpp	/^bool   PFloat::operator!=(INT64 f) const$/;"	f	class:PFloat
operator !=	pub_pfloat.cpp	/^bool   PFloat::operator!=(const PFloat& f) const$/;"	f	class:PFloat
operator !=	pub_pfloat.cpp	/^bool   PFloat::operator!=(const char* f) const$/;"	f	class:PFloat
operator *	pub_pfloat.cpp	/^PFloat PFloat::operator*(INT64 f) const$/;"	f	class:PFloat
operator *	pub_pfloat.cpp	/^PFloat PFloat::operator*(const PFloat& f) const$/;"	f	class:PFloat
operator *	pub_pfloat.cpp	/^PFloat PFloat::operator*(const char* f) const$/;"	f	class:PFloat
operator *=	pub_pfloat.cpp	/^const PFloat& PFloat::operator*=(INT64 f) const$/;"	f	class:PFloat
operator *=	pub_pfloat.cpp	/^const PFloat& PFloat::operator*=(const PFloat& f) const$/;"	f	class:PFloat
operator *=	pub_pfloat.cpp	/^const PFloat& PFloat::operator*=(const char* f) const$/;"	f	class:PFloat
operator +	pub_pfloat.cpp	/^PFloat PFloat::operator+(INT64 f) const$/;"	f	class:PFloat
operator +	pub_pfloat.cpp	/^PFloat PFloat::operator+(const PFloat& f) const$/;"	f	class:PFloat
operator +	pub_pfloat.cpp	/^PFloat PFloat::operator+(const char* f) const$/;"	f	class:PFloat
operator +=	pub_pfloat.cpp	/^const PFloat& PFloat::operator+=(INT64 f) const$/;"	f	class:PFloat
operator +=	pub_pfloat.cpp	/^const PFloat& PFloat::operator+=(const PFloat& f) const$/;"	f	class:PFloat
operator +=	pub_pfloat.cpp	/^const PFloat& PFloat::operator+=(const char* f) const$/;"	f	class:PFloat
operator -	pub_pfloat.cpp	/^PFloat PFloat::operator-(INT64 f) const$/;"	f	class:PFloat
operator -	pub_pfloat.cpp	/^PFloat PFloat::operator-(const PFloat& f) const$/;"	f	class:PFloat
operator -	pub_pfloat.cpp	/^PFloat PFloat::operator-(const char* f) const$/;"	f	class:PFloat
operator -=	pub_pfloat.cpp	/^const PFloat& PFloat::operator-=(INT64 f) const$/;"	f	class:PFloat
operator -=	pub_pfloat.cpp	/^const PFloat& PFloat::operator-=(const PFloat& f) const$/;"	f	class:PFloat
operator -=	pub_pfloat.cpp	/^const PFloat& PFloat::operator-=(const char* f) const$/;"	f	class:PFloat
operator /	pub_pfloat.cpp	/^PFloat PFloat::operator\/(INT64 f) const$/;"	f	class:PFloat
operator /	pub_pfloat.cpp	/^PFloat PFloat::operator\/(const PFloat& f) const$/;"	f	class:PFloat
operator /	pub_pfloat.cpp	/^PFloat PFloat::operator\/(const char* f) const$/;"	f	class:PFloat
operator /=	pub_pfloat.cpp	/^const PFloat& PFloat::operator\/=(INT64 f) const$/;"	f	class:PFloat
operator /=	pub_pfloat.cpp	/^const PFloat& PFloat::operator\/=(const PFloat& f) const$/;"	f	class:PFloat
operator /=	pub_pfloat.cpp	/^const PFloat& PFloat::operator\/=(const char* f) const$/;"	f	class:PFloat
operator <	pub_pfloat.cpp	/^bool   PFloat::operator<(INT64 f) const$/;"	f	class:PFloat
operator <	pub_pfloat.cpp	/^bool   PFloat::operator<(const PFloat& f) const$/;"	f	class:PFloat
operator <	pub_pfloat.cpp	/^bool   PFloat::operator<(const char* f) const$/;"	f	class:PFloat
operator =	pub_pfloat.cpp	/^const PFloat& PFloat::operator=(INT64 f) const$/;"	f	class:PFloat
operator =	pub_pfloat.cpp	/^const PFloat& PFloat::operator=(const PFloat& f) const$/;"	f	class:PFloat
operator =	pub_pfloat.cpp	/^const PFloat& PFloat::operator=(const char* f) const$/;"	f	class:PFloat
operator ==	pub_pfloat.cpp	/^bool   PFloat::operator==(INT64 f) const$/;"	f	class:PFloat
operator ==	pub_pfloat.cpp	/^bool   PFloat::operator==(const PFloat& f) const$/;"	f	class:PFloat
operator ==	pub_pfloat.cpp	/^bool   PFloat::operator==(const char* f) const$/;"	f	class:PFloat
operator >	pub_pfloat.cpp	/^bool   PFloat::operator>(INT64 f) const$/;"	f	class:PFloat
operator >	pub_pfloat.cpp	/^bool   PFloat::operator>(const PFloat& f) const$/;"	f	class:PFloat
operator >	pub_pfloat.cpp	/^bool   PFloat::operator>(const char* f) const$/;"	f	class:PFloat
BYTE	pub_pfloat.h	/^typedef unsigned char BYTE;$/;"	t
INT64	pub_pfloat.h	/^typedef __int64 INT64;$/;"	t
INT64	pub_pfloat.h	/^typedef long long INT64;$/;"	t
UINT64	pub_pfloat.h	/^typedef unsigned __int64 UINT64;$/;"	t
UINT64	pub_pfloat.h	/^typedef unsigned long long UINT64;$/;"	t
_PUB_PFLOAT_H_	pub_pfloat.h	33;"	d
CalcFileCrc	public.cpp	/^unsigned int CalcFileCrc(const char* pFile)$/;"	f
GetFileContent	public.cpp	/^char* GetFileContent(const char* pFile, int& iFileLen)$/;"	f
GetPrimeNumber	public.cpp	/^int GetPrimeNumber(const int nBase)$/;"	f
CMyLock	public.h	/^    CMyLock(){InitializeCriticalSection(&m_Mutex);}$/;"	f	class:CMyLock
CMyLock	public.h	/^class CMyLock $/;"	c
CSplitString	public.h	/^    CSplitString(const char* pStr, char split)$/;"	f	struct:CSplitString
CSplitString	public.h	/^struct CSplitString $/;"	s
Lock	public.h	/^    void Lock(){EnterCriticalSection(&m_Mutex);};$/;"	f	class:CMyLock
Next	public.h	/^    char* Next()$/;"	f	struct:CSplitString
PATH_DELIMITATED	public.h	18;"	d
PATH_DELIMITATED	public.h	21;"	d
PATH_DELIMITATED_CHAR	public.h	17;"	d
PATH_DELIMITATED_CHAR	public.h	20;"	d
UnLock	public.h	/^    void UnLock(){LeaveCriticalSection(&m_Mutex);};$/;"	f	class:CMyLock
_WDC_PUBLIC_H_	public.h	9;"	d
cSplit	public.h	/^    char  cSplit;$/;"	m	struct:CSplitString
m_Mutex	public.h	/^    CRITICAL_SECTION m_Mutex;$/;"	m	class:CMyLock
pBuffer	public.h	/^    char* pBuffer;$/;"	m	struct:CSplitString
pNext	public.h	/^    char* pNext;$/;"	m	struct:CSplitString
pNow	public.h	/^    char* pNow;$/;"	m	struct:CSplitString
~CMyLock	public.h	/^    ~CMyLock(){DeleteCriticalSection(&m_Mutex);}$/;"	f	class:CMyLock
~CSplitString	public.h	/^    ~CSplitString()$/;"	f	struct:CSplitString
AFX_STDAFX_H__BF5C875E_BE09_411C_B974_2A13E5FFA223__INCLUDED_	stdafx.h	7;"	d
BABY_NONE	stdafx.h	26;"	d
BABY_RD	stdafx.h	28;"	d
BABY_RDWR	stdafx.h	27;"	d
BABY_WR	stdafx.h	29;"	d
Max	stdafx.h	41;"	d
Min	stdafx.h	42;"	d
RESET_AUTO_PTR	stdafx.h	32;"	d
VC_EXTRALEAN	stdafx.h	16;"	d
_WIN32_DCOM	stdafx.h	14;"	d
chMSG	stdafx.h	39;"	d
chSTR	stdafx.h	38;"	d
chSTR2	stdafx.h	37;"	d
SVRNetHead	stkdatacps.h	/^struct SVRNetHead$/;"	s
_STKDATACPS_H_INCLUDE	stkdatacps.h	2;"	d
m_nLen	stkdatacps.h	/^	DWORD	m_nLen;	\/\/包长度$/;"	m	struct:SVRNetHead
m_type	stkdatacps.h	/^	unsigned short m_type;\/\/数据类型$/;"	m	struct:SVRNetHead
m_wAttrib	stkdatacps.h	/^	WORD	m_wAttrib;	\/\/属性$/;"	m	struct:SVRNetHead
ATTR	structs.h	/^	enum ATTR$/;"	g	struct:CPS_DYNA_HEAD
ATTR	structs.h	/^	enum ATTR$/;"	g	struct:CPS_STATIC_HEAD
COMBINED_PACKET_ITEM_SIZE	structs.h	/^const int COMBINED_PACKET_ITEM_SIZE = 409600;$/;"	v
CPS_DYNA_HEAD	structs.h	/^struct CPS_DYNA_HEAD$/;"	s
CPS_STATIC_HEAD	structs.h	/^struct CPS_STATIC_HEAD$/;"	s
CapInnerThreadParam	structs.h	/^typedef struct CapInnerThreadParam$/;"	s
CapInnerThreadParam	structs.h	/^}CapInnerThreadParam;$/;"	t	typeref:struct:CapInnerThreadParam
CapNetPacketItem	structs.h	/^typedef struct CapNetPacketItem $/;"	s
CapNetPacketItem	structs.h	/^}CapNetPacketItem;$/;"	t	typeref:struct:CapNetPacketItem
CombinedPacketItem	structs.h	/^typedef struct CombinedPacketItem$/;"	s
CombinedPacketItem	structs.h	/^}CombinedPacketItem;$/;"	t	typeref:struct:CombinedPacketItem
DidStruct	structs.h	/^typedef struct DidStruct$/;"	s
DidStruct	structs.h	/^}DidStruct;$/;"	t	typeref:struct:DidStruct
EQUITY	structs.h	/^		EQUITY =		0,			\/\/股票等完整数据品种$/;"	e	enum:CPS_DYNA_HEAD::ATTR
FOREIGN_EXG	structs.h	/^		FOREIGN_EXG	=	0x10,		\/\/外汇等只有开高低收买卖一价的品种$/;"	e	enum:CPS_DYNA_HEAD::ATTR
FTR_IDX	structs.h	/^		FTR_IDX =		0x20,		\/\/期货指数，有5档买卖盘和持仓量、结算价的品种$/;"	e	enum:CPS_DYNA_HEAD::ATTR
FULLDATA	structs.h	/^		FULLDATA = 2,			\/\/完整压缩\/精简压缩$/;"	e	enum:CPS_STATIC_HEAD::ATTR
FUTURE	structs.h	/^		FUTURE =		0x8,		\/\/商品期货等期货品种$/;"	e	enum:CPS_DYNA_HEAD::ATTR
HAS_AMOUNT	structs.h	/^		HAS_AMOUNT =	0x80,		\/\/数据中无成交额$/;"	e	enum:CPS_DYNA_HEAD::ATTR
HAS_TICK_COUNT	structs.h	/^		HAS_TICK_COUNT= 0x40,		\/\/拥有成交笔数$/;"	e	enum:CPS_DYNA_HEAD::ATTR
HAS_TIME_BIAS	structs.h	/^		HAS_TIME_BIAS = 2,			\/\/拥有时间偏移(否则所有数据拥有相同时间)$/;"	e	enum:CPS_DYNA_HEAD::ATTR
HKSEC	structs.h	/^		HKSEC =			0x18,		\/\/港股等买卖盘价格是连续的$/;"	e	enum:CPS_DYNA_HEAD::ATTR
IpHead	structs.h	/^typedef struct IpHead$/;"	s
LUA_RECV_BUF_SIZE	structs.h	/^const int LUA_RECV_BUF_SIZE = 1048576;$/;"	v
LogParam	structs.h	/^typedef struct LogParam$/;"	s
LogParam	structs.h	/^}LogParam;$/;"	t	typeref:struct:LogParam
Lua_ZMQ_MSG_Item	structs.h	/^typedef struct Lua_ZMQ_MSG_Item$/;"	s
Lua_ZMQ_MSG_Item	structs.h	/^}Lua_ZMQ_MSG_Item;$/;"	t	typeref:struct:Lua_ZMQ_MSG_Item
MONITOR_PROTOCOL_H_	structs.h	2;"	d
PCAPTOPARSE_BUF_SIZE	structs.h	/^const int PCAPTOPARSE_BUF_SIZE = 2048;$/;"	v
ParseParam	structs.h	/^typedef struct ParseParam$/;"	s
ParseParam	structs.h	/^}ParseParam;$/;"	t	typeref:struct:ParseParam
PcapWorkItem	structs.h	/^typedef struct PcapWorkItem$/;"	s
PcapWorkItem	structs.h	/^}PcapWorkItem;$/;"	t	typeref:struct:PcapWorkItem
SEQ_CPS	structs.h	/^		SEQ_CPS =		1,			\/\/相关压缩$/;"	e	enum:CPS_DYNA_HEAD::ATTR
SEQ_ID	structs.h	/^		SEQ_ID = 1,				\/\/顺序ID$/;"	e	enum:CPS_STATIC_HEAD::ATTR
TYPEMASK	structs.h	/^		TYPEMASK =		0x38,$/;"	e	enum:CPS_DYNA_HEAD::ATTR
TcpDisorderSetItem	structs.h	/^typedef struct TcpDisorderSetItem$/;"	s
TcpDisorderSetItem	structs.h	/^}TcpDisorderSetItem;$/;"	t	typeref:struct:TcpDisorderSetItem
TcpHead	structs.h	/^typedef struct TcpHead$/;"	s
ThreadFuncLogParam	structs.h	/^typedef  struct ThreadFuncLogParam$/;"	s
ThreadFuncLogParam	structs.h	/^}ThreadFuncLogParam;$/;"	t	typeref:struct:ThreadFuncLogParam
ThreadFuncParams	structs.h	/^typedef struct ThreadFuncParams$/;"	s
ThreadFuncParams	structs.h	/^}ThreadFuncParams;$/;"	t	typeref:struct:ThreadFuncParams
UdpHead	structs.h	/^typedef struct UdpHead$/;"	s
ZMQItem	structs.h	/^	ZMQItem():zmqpattern(-1),zmqsocketaction(""),zmqsocketaddr(""){};$/;"	f	struct:ZMQItem
ZMQItem	structs.h	/^	ZMQItem(const ZMQItem & zmqitem)$/;"	f	struct:ZMQItem
ZMQItem	structs.h	/^typedef struct ZMQItem$/;"	s
ZMQItem	structs.h	/^}ZMQItem;$/;"	t	typeref:struct:ZMQItem
ack_seq	structs.h	/^	u_long ack_seq;  \/\/acknowledge number$/;"	m	struct:TcpHead
acktag	structs.h	/^	int acktag;$/;"	m	struct:CapInnerThreadParam
args	structs.h	/^    void *args;$/;"	m	struct:ThreadFuncParams
bufelement	structs.h	/^typedef struct bufelement$/;"	s
bufelement	structs.h	/^}bufelement;$/;"	t	typeref:struct:bufelement
byte1	structs.h	/^	u_char byte1;$/;"	m	struct:ip_address
byte2	structs.h	/^	u_char byte2;$/;"	m	struct:ip_address
byte3	structs.h	/^	u_char byte3;$/;"	m	struct:ip_address
byte4	structs.h	/^	u_char byte4;$/;"	m	struct:ip_address
check	structs.h	/^	u_short check;  \/\/checksum$/;"	m	struct:TcpHead
compress_tag	structs.h	/^	unsigned int compress_tag;$/;"	m	struct:DidStruct
context	structs.h	/^    zmq::context_t *context;$/;"	m	struct:LogParam
context	structs.h	/^    zmq::context_t *context;$/;"	m	struct:ParseParam
context	structs.h	/^    zmq::context_t *context;$/;"	m	struct:ThreadFuncParams
crc	structs.h	/^	u_short crc;			\/\/ Checksum$/;"	m	struct:UdpHead
crc	structs.h	/^	u_short crc;			\/\/ Header checksum$/;"	m	struct:IpHead
daddr	structs.h	/^	ip_address	daddr;		\/\/ Destination address$/;"	m	struct:IpHead
daddrbyte1	structs.h	/^    int daddrbyte1;$/;"	m	struct:bufelement
daddrbyte2	structs.h	/^    int daddrbyte2;$/;"	m	struct:bufelement
daddrbyte3	structs.h	/^    int daddrbyte3;$/;"	m	struct:bufelement
daddrbyte4	structs.h	/^    int daddrbyte4;$/;"	m	struct:bufelement
data	structs.h	/^	char data[COMBINED_PACKET_ITEM_SIZE];$/;"	m	struct:CombinedPacketItem
data	structs.h	/^	unsigned char *data;$/;"	m	struct:CapNetPacketItem
data	structs.h	/^    unsigned char *data;$/;"	m	struct:PcapWorkItem
dataoffset	structs.h	/^	u_char dataoffset;  \/\/data offset$/;"	m	struct:TcpHead
dbuf_pl	structs.h	/^    deque<bufelement> *dbuf_pl;$/;"	m	struct:ThreadFuncLogParam
dc_general_intype	structs.h	/^	int dc_general_intype;$/;"	m	struct:Lua_ZMQ_MSG_Item
dc_type	structs.h	/^	int dc_type;$/;"	m	struct:Lua_ZMQ_MSG_Item
dctype	structs.h	/^    char *dctype;$/;"	m	struct:bufelement
dest	structs.h	/^	u_short dest; \/\/destination port$/;"	m	struct:TcpHead
did_template_id	structs.h	/^	int did_template_id;$/;"	m	struct:Lua_ZMQ_MSG_Item
dport	structs.h	/^	u_short dport;			\/\/ Destination port$/;"	m	struct:UdpHead
dport	structs.h	/^    int dport;$/;"	m	struct:bufelement
file_path	structs.h	/^	std::string file_path;$/;"	m	struct:DidStruct
filter	structs.h	/^    string filter;$/;"	m	struct:ThreadFuncParams
fintag	structs.h	/^	int fintag;$/;"	m	struct:CapInnerThreadParam
flags	structs.h	/^	u_char flags;  \/\/ flags$/;"	m	struct:TcpHead
flags	structs.h	/^    char *flags;$/;"	m	struct:bufelement
flags_fo	structs.h	/^	u_short flags_fo;		\/\/ Flags (3 bits) + Fragment offset (13 bits)$/;"	m	struct:IpHead
header	structs.h	/^	struct pcap_pkthdr header;$/;"	m	struct:CapNetPacketItem	typeref:struct:CapNetPacketItem::pcap_pkthdr
header	structs.h	/^    struct pcap_pkthdr header;$/;"	m	struct:PcapWorkItem	typeref:struct:PcapWorkItem::pcap_pkthdr
id	structs.h	/^	int id;$/;"	m	struct:DidStruct
identification	structs.h	/^	u_short identification; \/\/ Identification$/;"	m	struct:IpHead
ip_address	structs.h	/^typedef struct ip_address$/;"	s
ip_address	structs.h	/^}ip_address;$/;"	t	typeref:struct:ip_address
ip_head	structs.h	/^}ip_head;$/;"	t	typeref:struct:IpHead
iproto	structs.h	/^    char * iproto;$/;"	m	struct:bufelement
len	structs.h	/^	u_short len;			\/\/ Datagram length$/;"	m	struct:UdpHead
len	structs.h	/^    int len;$/;"	m	struct:bufelement
log	structs.h	/^    log4cpp::Category *log;$/;"	m	struct:ThreadFuncLogParam
logfilenum	structs.h	/^    int logfilenum;$/;"	m	struct:LogParam
m_baseTime	structs.h	/^	time_t	m_baseTime;		\/\/基准时间，所有的时间偏移量都是基于该时间$/;"	m	struct:CPS_DYNA_HEAD
m_cAttrib	structs.h	/^	BYTE	m_cAttrib;		\/\/属性$/;"	m	struct:CPS_DYNA_HEAD
m_cAttrib	structs.h	/^	BYTE	m_cAttrib;$/;"	m	struct:CPS_STATIC_HEAD
m_cCRC	structs.h	/^	BYTE	m_cCRC;			\/\/CRC校验和$/;"	m	struct:CPS_DYNA_HEAD
m_cVer	structs.h	/^	BYTE	m_cVer;			\/\/压缩版本$/;"	m	struct:CPS_DYNA_HEAD
m_wMarket	structs.h	/^	WORD	m_wMarket;		\/\/市场$/;"	m	struct:CPS_DYNA_HEAD
m_wMarket	structs.h	/^	WORD	m_wMarket;		\/\/市场$/;"	m	struct:CPS_STATIC_HEAD
m_wNum	structs.h	/^	WORD	m_wNum;			\/\/数据数量$/;"	m	struct:CPS_DYNA_HEAD
m_wNum	structs.h	/^	WORD	m_wNum;			\/\/数据数量$/;"	m	struct:CPS_STATIC_HEAD
op_pad	structs.h	/^	u_int	op_pad;			\/\/ Option + Padding$/;"	m	struct:IpHead
operator <	structs.h	/^	bool operator < (const TcpDisorderSetItem &item) const$/;"	f	struct:TcpDisorderSetItem
pack_len	structs.h	/^	unsigned long pack_len;$/;"	m	struct:Lua_ZMQ_MSG_Item
pdcdata	structs.h	/^	unsigned char *pdcdata;$/;"	m	struct:Lua_ZMQ_MSG_Item
pktdata	structs.h	/^	unsigned char *pktdata;$/;"	m	struct:TcpDisorderSetItem
port_tag	structs.h	/^    int port_tag;$/;"	m	struct:PcapWorkItem
port_tag	structs.h	/^    int port_tag;$/;"	m	struct:bufelement
protocol	structs.h	/^	u_char	protocol;			\/\/ Protocol$/;"	m	struct:IpHead
saddr	structs.h	/^	ip_address	saddr;		\/\/ Source address$/;"	m	struct:IpHead
saddrbyte1	structs.h	/^    int saddrbyte1;$/;"	m	struct:bufelement
saddrbyte2	structs.h	/^    int saddrbyte2;$/;"	m	struct:bufelement
saddrbyte3	structs.h	/^    int saddrbyte3;$/;"	m	struct:bufelement
saddrbyte4	structs.h	/^    int saddrbyte4;$/;"	m	struct:bufelement
seq	structs.h	/^	u_long seq;  \/\/sequence number$/;"	m	struct:TcpHead
seqtag	structs.h	/^    long long seqtag;$/;"	m	struct:PcapWorkItem
seqtag	structs.h	/^    unsigned long seqtag;$/;"	m	struct:bufelement
source	structs.h	/^    u_short source;  \/\/source port$/;"	m	struct:TcpHead
sport	structs.h	/^    int sport;$/;"	m	struct:bufelement
sport	structs.h	/^    u_short sport;			\/\/ Source port$/;"	m	struct:UdpHead
stk_num	structs.h	/^	int stk_num;$/;"	m	struct:Lua_ZMQ_MSG_Item
stk_static	structs.h	/^	struct STK_STATIC * stk_static;$/;"	m	struct:Lua_ZMQ_MSG_Item	typeref:struct:Lua_ZMQ_MSG_Item::STK_STATIC
struct_size	structs.h	/^	int struct_size;$/;"	m	struct:Lua_ZMQ_MSG_Item
tcp_data_len	structs.h	/^	unsigned long tcp_data_len;$/;"	m	struct:TcpDisorderSetItem
tcp_head	structs.h	/^}tcp_head;$/;"	t	typeref:struct:TcpHead
tcp_seq	structs.h	/^	unsigned long tcp_seq;$/;"	m	struct:TcpDisorderSetItem
tcpconnstatus	structs.h	/^	int tcpconnstatus;$/;"	m	struct:CapInnerThreadParam
tcpconntag	structs.h	/^	int tcpconntag;$/;"	m	struct:CapInnerThreadParam
tcpdisconnstatus	structs.h	/^	int tcpdisconnstatus;$/;"	m	struct:CapInnerThreadParam
tcpdisconntag	structs.h	/^	int tcpdisconntag;$/;"	m	struct:CapInnerThreadParam
threadtag	structs.h	/^    int threadtag;$/;"	m	struct:ParseParam
threadtag	structs.h	/^    int threadtag;$/;"	m	struct:ThreadFuncParams
timestamp	structs.h	/^	struct timeval timestamp;$/;"	m	struct:TcpDisorderSetItem	typeref:struct:TcpDisorderSetItem::timeval
timestamp	structs.h	/^    char timestamp[16];$/;"	m	struct:bufelement
tlen	structs.h	/^	u_short tlen;			\/\/ Total length$/;"	m	struct:IpHead
tos	structs.h	/^	u_char	tos;			\/\/ Type of service$/;"	m	struct:IpHead
ttl	structs.h	/^	u_char	ttl;			\/\/ Time to live$/;"	m	struct:IpHead
udp_head	structs.h	/^}udp_head;$/;"	t	typeref:struct:UdpHead
urg_ptr	structs.h	/^	u_short urg_ptr;  \/\/urgent pointer$/;"	m	struct:TcpHead
ver_ihl	structs.h	/^    u_char	ver_ihl;		\/\/ Version (4 bits) + Internet header length (4 bits)$/;"	m	struct:IpHead
whole_tag	structs.h	/^	unsigned int whole_tag;$/;"	m	struct:DidStruct
window	structs.h	/^	u_short window;  \/\/ window length$/;"	m	struct:TcpHead
zmqpattern	structs.h	/^	int zmqpattern;$/;"	m	struct:ZMQItem
zmqsocketaction	structs.h	/^	std::string zmqsocketaction;$/;"	m	struct:ZMQItem
zmqsocketaddr	structs.h	/^	std::string zmqsocketaddr;$/;"	m	struct:ZMQItem
~ZMQItem	structs.h	/^	~ZMQItem(){};$/;"	f	struct:ZMQItem
main	test.cc	/^int main(void)$/;"	f
DCGeneral_IntypeToString	utils.cc	/^char *Utils::DCGeneral_IntypeToString(int dc_general_intype)$/;"	f	class:Utils
DCTypeToString	utils.cc	/^char * Utils::DCTypeToString(int dc_type)$/;"	f	class:Utils
Print_Thread_ID	utils.cc	/^void Utils::Print_Thread_ID(pthread_t tid)$/;"	f	class:Utils
SleepUsec	utils.cc	/^void Utils::SleepUsec(const int usec)$/;"	f	class:Utils
ToMword	utils.cc	/^int64 Utils::ToMword(unsigned long x)$/;"	f	class:Utils
UINT24to32	utils.cc	/^unsigned int Utils::UINT24to32(unsigned short low,unsigned char high)$/;"	f	class:Utils
WriteIntoFile	utils.cc	/^void Utils::WriteIntoFile(const char *file_name, const char *mode, const void* data , size_t length)$/;"	f	class:Utils
tcp_flag_to_str	utils.cc	/^char* Utils::tcp_flag_to_str( unsigned char flag )$/;"	f	class:Utils
MONITOR_UTILS_H_	utils.h	2;"	d
Utils	utils.h	/^    Utils(){};$/;"	f	class:Utils
Utils	utils.h	/^class Utils$/;"	c
~Utils	utils.h	/^    ~Utils(){};$/;"	f	class:Utils
BYTE	vfloat.h	/^typedef unsigned char BYTE;$/;"	t
COMPRESS_API	vfloat.h	51;"	d
COMPRESS_API	vfloat.h	53;"	d
COMPRESS_API	vfloat.h	55;"	d
GetBase	vfloat.h	/^    INT64  GetBase(){return IsMinus() ? ~((INT64)(_data._real_data.m_llBase))+1 : _data._real_data.m_llBase;}  $/;"	f	class:VFloat
GetPrec	vfloat.h	/^    short  GetPrec(){return _data._real_data.m_llPrec;}  \/\/获取精度$/;"	f	class:VFloat
INT64	vfloat.h	/^typedef __int64 INT64;$/;"	t
INT64	vfloat.h	/^typedef long long INT64;$/;"	t
IsMinus	vfloat.h	/^    bool   IsMinus() const {return _data._real_data.m_llTag == 1;}$/;"	f	class:VFloat
IsZero	vfloat.h	/^    bool   IsZero() const {return _data._real_data.m_llBase == 0;}$/;"	f	class:VFloat
SetBase	vfloat.h	/^	void   SetBase(INT64 base)$/;"	f	class:VFloat
SetPrec	vfloat.h	/^	void   SetPrec(short prec){_data._real_data.m_llPrec = prec;}$/;"	f	class:VFloat
ToInt64	vfloat.h	/^    INT64  ToInt64(){return _data._value;};  \/\/得到一个与VFloat内存块对应的Int64值$/;"	f	class:VFloat
UINT64	vfloat.h	/^typedef unsigned __int64 UINT64;$/;"	t
UINT64	vfloat.h	/^typedef unsigned long long UINT64;$/;"	t
VFloat	vfloat.h	/^class COMPRESS_API VFloat$/;"	c
_PUB_VFLOAT_H_	vfloat.h	33;"	d
_data	vfloat.h	/^    }_data;$/;"	m	class:VFloat	typeref:union:VFloat::__anon61
_real_data	vfloat.h	/^        }_real_data;$/;"	m	union:VFloat::__anon61	typeref:struct:VFloat::__anon61::__anon62
_value	vfloat.h	/^        mutable INT64 _value;$/;"	m	union:VFloat::__anon61
m_llBase	vfloat.h	/^            mutable UINT64 m_llBase:60;  \/\/第2-61位表示正数形式$/;"	m	struct:VFloat::__anon61::__anon62
m_llPrec	vfloat.h	/^            mutable UINT64 m_llPrec:3;  \/\/地62-64位表示小数个数$/;"	m	struct:VFloat::__anon61::__anon62
m_llTag	vfloat.h	/^            mutable UINT64 m_llTag:1;  \/\/第一位作正负号表示$/;"	m	struct:VFloat::__anon61::__anon62
operator double	vfloat.h	/^    operator double() const{return GetValue();};$/;"	f	class:VFloat
__GW_UTILIY_XML_to_CONFIG_HEADER__	xml2cfg.h	2;"	d
docptr_	xml2cfg.h	/^	xmlDocPtr 				docptr_;$/;"	m	class:xml2cfg
get_node	xml2cfg.h	/^	  xmlNodePtr get_node( xmlNodeSetPtr nodesetptr, int index )$/;"	f	class:xml2cfg
get_nodes_num	xml2cfg.h	/^	  int get_nodes_num( xmlNodeSetPtr nodesetptr )$/;"	f	class:xml2cfg
get_prop_int	xml2cfg.h	/^	  int get_prop_int( const xmlNodePtr nodeptr, const char *propname, int default_val )$/;"	f	class:xml2cfg
get_prop_string	xml2cfg.h	/^	  int get_prop_string(  const xmlNodePtr nodeptr, const char *propname, char *output, const char *default_val )$/;"	f	class:xml2cfg
get_prop_string	xml2cfg.h	/^	  int get_prop_string(  const xmlNodePtr nodeptr, const char *propname, std::string &output, const char *default_val )$/;"	f	class:xml2cfg
locate	xml2cfg.h	/^	  xmlNodeSetPtr locate( xmlNodePtr currentroot, const char *xpath )$/;"	f	class:xml2cfg
open	xml2cfg.h	/^	  int open( const char *filename )$/;"	f	class:xml2cfg
rootnode_	xml2cfg.h	/^	xmlNodePtr				rootnode_;$/;"	m	class:xml2cfg
xml2cfg	xml2cfg.h	/^	xml2cfg():$/;"	f	class:xml2cfg
xml2cfg	xml2cfg.h	/^class xml2cfg$/;"	c
xmlctxptr_	xml2cfg.h	/^	xmlXPathContextPtr		xmlctxptr_, xmlrootctxptr_;$/;"	m	class:xml2cfg
xmlobjptr_	xml2cfg.h	/^	xmlXPathObjectPtr		xmlobjptr_;$/;"	m	class:xml2cfg
xmlrootctxptr_	xml2cfg.h	/^	xmlXPathContextPtr		xmlctxptr_, xmlrootctxptr_;$/;"	m	class:xml2cfg
MONITOR_XML_CLASS_SET_H	xml_class_set.h	2;"	d
XML_Capture	xml_class_set.h	/^	XML_Capture()$/;"	f	class:XML_Capture
XML_Capture	xml_class_set.h	/^class XML_Capture$/;"	c
XML_CaptureNetPacket	xml_class_set.h	/^	XML_CaptureNetPacket(){};$/;"	f	class:XML_CaptureNetPacket
XML_CaptureNetPacket	xml_class_set.h	/^class XML_CaptureNetPacket$/;"	c
XML_HandleNetPacket	xml_class_set.h	/^	XML_HandleNetPacket(){};$/;"	f	class:XML_HandleNetPacket
XML_HandleNetPacket	xml_class_set.h	/^class XML_HandleNetPacket$/;"	c
XML_ListeningItem	xml_class_set.h	/^	XML_ListeningItem(int port,std::string filter):port_(port),filter_(filter)$/;"	f	class:XML_ListeningItem
XML_ListeningItem	xml_class_set.h	/^class XML_ListeningItem$/;"	c
XML_Log	xml_class_set.h	/^	XML_Log()$/;"	f	class:XML_Log
XML_Log	xml_class_set.h	/^class XML_Log$/;"	c
XML_Lua_Routine	xml_class_set.h	/^	XML_Lua_Routine(){};$/;"	f	class:XML_Lua_Routine
XML_Lua_Routine	xml_class_set.h	/^class XML_Lua_Routine$/;"	c
XML_Parse	xml_class_set.h	/^	XML_Parse()$/;"	f	class:XML_Parse
XML_Parse	xml_class_set.h	/^class XML_Parse$/;"	c
XML_ZMQ	xml_class_set.h	/^class XML_ZMQ$/;"	c
cap_	xml_class_set.h	/^	XML_Capture cap_;$/;"	m	class:XML_ListeningItem
capture_net_packet_	xml_class_set.h	/^	XML_CaptureNetPacket capture_net_packet_;$/;"	m	class:XML_ListeningItem
did_filepath_map_	xml_class_set.h	/^	map<int,std::string> did_filepath_map_;$/;"	m	class:XML_ListeningItem
did_templates_ids_	xml_class_set.h	/^	vector<std::string> did_templates_ids_;$/;"	m	class:XML_ListeningItem
did_templates_paths_	xml_class_set.h	/^	vector<std::string> did_templates_paths_;$/;"	m	class:XML_ListeningItem
filter_	xml_class_set.h	/^	std::string filter_;$/;"	m	class:XML_ListeningItem
get_capture_net_packet	xml_class_set.h	/^	inline XML_CaptureNetPacket *get_capture_net_packet()$/;"	f	class:XML_ListeningItem
get_did_filepath_map	xml_class_set.h	/^	inline map<int, std::string> & get_did_filepath_map()$/;"	f	class:XML_ListeningItem
get_did_template_ids	xml_class_set.h	/^	inline vector<std::string> & get_did_template_ids()$/;"	f	class:XML_ListeningItem
get_did_template_paths	xml_class_set.h	/^	inline vector<std::string>& get_did_template_paths()$/;"	f	class:XML_ListeningItem
get_filter	xml_class_set.h	/^	inline std::string& get_filter()$/;"	f	class:XML_ListeningItem
get_handle_net_packet	xml_class_set.h	/^	inline XML_HandleNetPacket *get_handle_net_packet()$/;"	f	class:XML_ListeningItem
get_lua_routine	xml_class_set.h	/^	inline XML_Lua_Routine *get_lua_routine()$/;"	f	class:XML_ListeningItem
get_parse	xml_class_set.h	/^	inline XML_Parse *get_parse()$/;"	f	class:XML_ListeningItem
get_port	xml_class_set.h	/^	inline int& get_port()$/;"	f	class:XML_ListeningItem
get_zmqdeque	xml_class_set.h	/^	inline deque<XML_ZMQ> * get_zmqdeque()$/;"	f	class:XML_CaptureNetPacket
get_zmqdeque	xml_class_set.h	/^	inline deque<XML_ZMQ> * get_zmqdeque()$/;"	f	class:XML_HandleNetPacket
get_zmqdeque	xml_class_set.h	/^	inline deque<XML_ZMQ> *get_zmqdeque()$/;"	f	class:XML_Lua_Routine
get_zmqdeque	xml_class_set.h	/^	inline deque<XML_ZMQ>* get_zmqdeque()$/;"	f	class:XML_Log
get_zmqdeque	xml_class_set.h	/^	inline deque<XML_ZMQ>* get_zmqdeque()$/;"	f	class:XML_Parse
get_zmqdeque	xml_class_set.h	/^    inline deque<XML_ZMQ>* get_zmqdeque()$/;"	f	class:XML_Capture
get_zmqpattern	xml_class_set.h	/^	inline int get_zmqpattern()$/;"	f	class:XML_ZMQ
get_zmqsocketaction	xml_class_set.h	/^	inline std::string& get_zmqsocketaction()$/;"	f	class:XML_ZMQ
get_zmqsocketaddr	xml_class_set.h	/^	inline std::string& get_zmqsocketaddr()$/;"	f	class:XML_ZMQ
handle_net_packet_	xml_class_set.h	/^	XML_HandleNetPacket handle_net_packet_;$/;"	m	class:XML_ListeningItem
insert_did_filepath_map	xml_class_set.h	/^	inline void insert_did_filepath_map(std::pair<int, std::string> element)$/;"	f	class:XML_ListeningItem
lua_routine_	xml_class_set.h	/^	XML_Lua_Routine lua_routine_;$/;"	m	class:XML_ListeningItem
parse_	xml_class_set.h	/^	XML_Parse parse_;$/;"	m	class:XML_ListeningItem
port_	xml_class_set.h	/^	int port_;$/;"	m	class:XML_ListeningItem
push_did_template_ids	xml_class_set.h	/^	inline void push_did_template_ids(std::string did_template_id)$/;"	f	class:XML_ListeningItem
push_did_template_paths	xml_class_set.h	/^	inline void push_did_template_paths(std::string & did_template_path)$/;"	f	class:XML_ListeningItem
zmqdeque_	xml_class_set.h	/^	deque<XML_ZMQ> zmqdeque_;$/;"	m	class:XML_Capture
zmqdeque_	xml_class_set.h	/^	deque<XML_ZMQ> zmqdeque_;$/;"	m	class:XML_CaptureNetPacket
zmqdeque_	xml_class_set.h	/^	deque<XML_ZMQ> zmqdeque_;$/;"	m	class:XML_HandleNetPacket
zmqdeque_	xml_class_set.h	/^	deque<XML_ZMQ> zmqdeque_;$/;"	m	class:XML_Log
zmqdeque_	xml_class_set.h	/^	deque<XML_ZMQ> zmqdeque_;$/;"	m	class:XML_Lua_Routine
zmqdeque_	xml_class_set.h	/^	deque<XML_ZMQ> zmqdeque_;$/;"	m	class:XML_Parse
zmqpattern_	xml_class_set.h	/^	std::string zmqpattern_;$/;"	m	class:XML_ZMQ
zmqsocketaction_	xml_class_set.h	/^	std::string zmqsocketaction_;$/;"	m	class:XML_ZMQ
zmqsocketaddr_	xml_class_set.h	/^																																	zmqsocketaddr_(zmqsocketaddr){};$/;"	f	class:XML_ZMQ
zmqsocketaddr_	xml_class_set.h	/^	std::string zmqsocketaddr_;$/;"	m	class:XML_ZMQ
~XML_Capture	xml_class_set.h	/^	~XML_Capture()$/;"	f	class:XML_Capture
~XML_CaptureNetPacket	xml_class_set.h	/^	~XML_CaptureNetPacket(){};$/;"	f	class:XML_CaptureNetPacket
~XML_HandleNetPacket	xml_class_set.h	/^	~XML_HandleNetPacket(){};$/;"	f	class:XML_HandleNetPacket
~XML_ListeningItem	xml_class_set.h	/^	~XML_ListeningItem()$/;"	f	class:XML_ListeningItem
~XML_Log	xml_class_set.h	/^	~XML_Log()$/;"	f	class:XML_Log
~XML_Lua_Routine	xml_class_set.h	/^	~XML_Lua_Routine(){};$/;"	f	class:XML_Lua_Routine
~XML_Parse	xml_class_set.h	/^	~XML_Parse()$/;"	f	class:XML_Parse
~XML_ZMQ	xml_class_set.h	/^	~XML_ZMQ(){};$/;"	f	class:XML_ZMQ
ZMQ_ASSERT	zmq.hpp	61;"	d
ZMQ_ASSERT	zmq.hpp	63;"	d
ZMQ_DELETED_FUNCTION	zmq.hpp	/^        socket_t (const socket_t&) ZMQ_DELETED_FUNCTION;$/;"	m	class:zmq::socket_t
ZMQ_DELETED_FUNCTION	zmq.hpp	/^        void operator = (const socket_t&) ZMQ_DELETED_FUNCTION;$/;"	m	class:zmq::socket_t
ZMQ_DELETED_FUNCTION	zmq.hpp	40;"	d
ZMQ_DELETED_FUNCTION	zmq.hpp	47;"	d
ZMQ_DELETED_FUNCTION	zmq.hpp	49;"	d
ZMQ_DELETED_FUNCTION	zmq.hpp	53;"	d
ZMQ_DELETED_FUNCTION	zmq.hpp	55;"	d
ZMQ_HAS_RVALUE_REFS	zmq.hpp	39;"	d
ZMQ_HAS_RVALUE_REFS	zmq.hpp	43;"	d
ZMQ_HAS_RVALUE_REFS	zmq.hpp	52;"	d
__ZMQ_HPP_INCLUDED__	zmq.hpp	26;"	d
bind	zmq.hpp	/^        inline void bind (const char *addr_)$/;"	f	class:zmq::socket_t
close	zmq.hpp	/^        inline void close()$/;"	f	class:zmq::context_t
close	zmq.hpp	/^        inline void close()$/;"	f	class:zmq::socket_t
connect	zmq.hpp	/^        inline void connect (const char *addr_)$/;"	f	class:zmq::socket_t
connected	zmq.hpp	/^        inline bool connected()$/;"	f	class:zmq::socket_t
context_t	zmq.hpp	/^        inline context_t (context_t &&rhs) : ptr (rhs.ptr)$/;"	f	class:zmq::context_t
context_t	zmq.hpp	/^        inline explicit context_t (int io_threads_)$/;"	f	class:zmq::context_t
context_t	zmq.hpp	/^    class context_t$/;"	c	namespace:zmq
copy	zmq.hpp	/^        inline void copy (message_t *msg_)$/;"	f	class:zmq::message_t
data	zmq.hpp	/^        inline const void* data () const$/;"	f	class:zmq::message_t
data	zmq.hpp	/^        inline void *data ()$/;"	f	class:zmq::message_t
errnum	zmq.hpp	/^        int errnum;$/;"	m	class:zmq::error_t
error_t	zmq.hpp	/^        error_t () : errnum (zmq_errno ()) {}$/;"	f	class:zmq::error_t
error_t	zmq.hpp	/^    class error_t : public std::exception$/;"	c	namespace:zmq
free_fn	zmq.hpp	/^    typedef zmq_free_fn free_fn;$/;"	t	namespace:zmq
getsockopt	zmq.hpp	/^        inline void getsockopt (int option_, void *optval_,$/;"	f	class:zmq::socket_t
message_t	zmq.hpp	/^        inline explicit message_t (size_t size_)$/;"	f	class:zmq::message_t
message_t	zmq.hpp	/^        inline message_t ()$/;"	f	class:zmq::message_t
message_t	zmq.hpp	/^        inline message_t (message_t &&rhs) : msg (rhs.msg)$/;"	f	class:zmq::message_t
message_t	zmq.hpp	/^        inline message_t (void *data_, size_t size_, free_fn *ffn_,$/;"	f	class:zmq::message_t
message_t	zmq.hpp	/^    class message_t$/;"	c	namespace:zmq
move	zmq.hpp	/^        inline void move (message_t *msg_)$/;"	f	class:zmq::message_t
msg	zmq.hpp	/^        zmq_msg_t msg;$/;"	m	class:zmq::message_t
num	zmq.hpp	/^        int num () const$/;"	f	class:zmq::error_t
operator =	zmq.hpp	/^        inline context_t &operator = (context_t &&rhs)$/;"	f	class:zmq::context_t
operator =	zmq.hpp	/^        inline message_t &operator = (message_t &&rhs)$/;"	f	class:zmq::message_t
operator =	zmq.hpp	/^        inline socket_t& operator=(socket_t&& rhs)$/;"	f	class:zmq::socket_t
operator void*	zmq.hpp	/^        inline operator void* ()$/;"	f	class:zmq::context_t
operator void*	zmq.hpp	/^        inline operator void* ()$/;"	f	class:zmq::socket_t
poll	zmq.hpp	/^    inline int poll (zmq_pollitem_t *items_, int nitems_, long timeout_ = -1)$/;"	f	namespace:zmq
pollitem_t	zmq.hpp	/^    typedef zmq_pollitem_t pollitem_t;$/;"	t	namespace:zmq
proxy	zmq.hpp	/^    inline void proxy (void *frontend, void *backend, void *capture)$/;"	f	namespace:zmq
ptr	zmq.hpp	/^        void *ptr;$/;"	m	class:zmq::context_t
ptr	zmq.hpp	/^        void *ptr;$/;"	m	class:zmq::socket_t
rebuild	zmq.hpp	/^        inline void rebuild ()$/;"	f	class:zmq::message_t
rebuild	zmq.hpp	/^        inline void rebuild (size_t size_)$/;"	f	class:zmq::message_t
rebuild	zmq.hpp	/^        inline void rebuild (void *data_, size_t size_, free_fn *ffn_,$/;"	f	class:zmq::message_t
recv	zmq.hpp	/^        inline bool recv (message_t *msg_, int flags_ = 0)$/;"	f	class:zmq::socket_t
recv	zmq.hpp	/^        inline size_t recv (void *buf_, size_t len_, int flags_ = 0)$/;"	f	class:zmq::socket_t
send	zmq.hpp	/^        inline bool send (message_t &msg_, int flags_ = 0)$/;"	f	class:zmq::socket_t
send	zmq.hpp	/^        inline size_t send (const void *buf_, size_t len_, int flags_ = 0)$/;"	f	class:zmq::socket_t
setsockopt	zmq.hpp	/^        inline void setsockopt (int option_, const void *optval_,$/;"	f	class:zmq::socket_t
size	zmq.hpp	/^        inline size_t size () const$/;"	f	class:zmq::message_t
socket_t	zmq.hpp	/^        inline socket_t (context_t &context_, int type_)$/;"	f	class:zmq::socket_t
socket_t	zmq.hpp	/^        inline socket_t(socket_t&& rhs) : ptr(rhs.ptr)$/;"	f	class:zmq::socket_t
socket_t	zmq.hpp	/^    class socket_t$/;"	c	namespace:zmq
version	zmq.hpp	/^    inline void version (int *major_, int *minor_, int *patch_)$/;"	f	namespace:zmq
what	zmq.hpp	/^        virtual const char *what () const throw ()$/;"	f	class:zmq::error_t
zmq	zmq.hpp	/^namespace zmq$/;"	n
~context_t	zmq.hpp	/^        inline ~context_t ()$/;"	f	class:zmq::context_t
~message_t	zmq.hpp	/^        inline ~message_t ()$/;"	f	class:zmq::message_t
~socket_t	zmq.hpp	/^        inline ~socket_t ()$/;"	f	class:zmq::socket_t
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
